{"version":3,"sources":["../../server/middleware/mailer.js"],"names":["to","subject","text","html","errorCallback","sucessCallBack","transporter","createTransport","service","auth","user","process","env","EMAIL","pass","PASSWORD","mailOptions","from","sendMail","error"],"mappings":";;;;;;AAAA;;;;;;kBAEe,UAACA,EAAD,EAAKC,OAAL,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,aAA1B,EAAyCC,cAAzC,EAA4D;AACzE;AACA,MAAIC,cAAc,qBAAWC,eAAX,CAA2B;AAC3CC,aAAS,OADkC;AAE3CC,UAAM;AACJC,YAAMC,QAAQC,GAAR,CAAYC,KADd;AAEJC,YAAMH,QAAQC,GAAR,CAAYG;AAFd;AAFqC,GAA3B,CAAlB;;AAQA;AACA,MAAIC,cAAc;AAChBC,UAAM,sDADU,EAC8C;AAC9DjB,QAAIA,EAFY,EAER;AACRC,aAAYA,OAAZ,YAHgB,EAGS;AACzBC,UAAMA,IAJU,EAIJ;AACZC,eAASA,IALO,CAKA;AALA,GAAlB;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAG,cAAYY,QAAZ,CAAqBF,WAArB,EAAkC,iBAAS;AACzC,QAAIG,KAAJ,EAAW,OAAOf,eAAP;AACX,WAAOC,gBAAP;AACD,GAHD;AAID,C","file":"mailer.js","sourcesContent":["import nodemailer from \"nodemailer\";\n\nexport default (to, subject, text, html, errorCallback, sucessCallBack) => {\n  // create reusable transporter object using the default SMTP transport\n  let transporter = nodemailer.createTransport({\n    service: \"gmail\",\n    auth: {\n      user: process.env.EMAIL,\n      pass: process.env.PASSWORD\n    }\n  });\n\n  // setup email data with unicode symbols\n  let mailOptions = {\n    from: '\"Boots Events Manager ðŸ‘»\" <gabrielsuave17@gmail.com>', // sender address\n    to: to, // list of receivers\n    subject: `${subject} âœ”`, // Subject line\n    text: text, // plain text body\n    html: `${html}` // html body\n  };\n\n  // send mail with defined transport object\n  // transporter.sendMail(mailOptions, (error, info) => {\n  //     if (error) {\n  //         console.log(error);\n  //         return false;\n  //     }\n  //     console.log('Message sent: %s', info.messageId);\n  //     // Preview only available when sending through an Ethereal account\n  //     console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));\n  //     return true;\n  // });\n  transporter.sendMail(mailOptions, error => {\n    if (error) return errorCallback();\n    return sucessCallBack();\n  });\n};\n"]}