{"version":3,"sources":["../../server/middleware/validator.js"],"names":["Validation","req","res","next","centerRules","title","location","description","facilities","capacity","price","validate","body","passes","error","errors","first","status","send","message","statusCode","eventRules","startDate","endDate","centerId","userId","password","validateLogin","email","validation","firstName","lastName"],"mappings":"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","file":"validator.js","sourcesContent":["import Validator from 'validatorjs';\n\n/**\n * @export\n * @class Validation\n */\nexport class Validation {\n  /**\n     * Validate Center record\n     *\n     * @param {object} req - HTTP Request\n     * @param {object} res - HTTP Response\n     * @param {function} next\n     * @returns {object} Class instance\n     * @memberof Validation\n     */\n  validateCenter(req, res, next) {\n    const centerRules = {\n      title: 'required|string',\n      location: 'required|string',\n      description: 'required|string',\n      facilities: 'array',\n      capacity: 'required|integer',\n      price: 'required|integer'\n    };\n\n    let validate = new Validator(req.body, centerRules);\n    if (validate.passes()) return next();\n\n    let error = {}, title = validate.errors.first('title'),\n      location = validate.errors.first('location'),\n      description = validate.errors.first('description'),\n      facilities = validate.errors.first('facilities'),\n      capacity = validate.errors.first('capacity'),\n      price = validate.errors.first('price');\n\n    if(title) {\n      error.title = title;\n    }\n    if(location) {\n      error.location = location;\n    }\n    if(description) {\n      error.description = description;\n    }\n    if(facilities) {\n      error.facilities = facilities;\n    }\n    if(capacity) {\n      error.capacity = capacity;\n    }\n    if(price) {\n      error.price = price;\n    }\n\n    return res.status(400).send({\n      message: 'a required field is missing',\n      statusCode: 400,\n      error\n    });\n  }\n\n  /**\n     * Validate Event record\n     *\n     * @param {object} req - HTTP Request\n     * @param {object} res - HTTP Response\n     * @param {function} next\n     * @returns {object} Class instance\n     * @memberof Validation\n     */\n  validateEvent(req, res, next) {\n    const eventRules = {\n      title: 'required|string',\n      description: 'required|string',\n      startDate: 'required|date',\n      endDate: 'required|date',\n      centerId: 'required|integer',\n      userId: 'required|integer'\n    };\n\n    let validate = new Validator(req.body, eventRules);\n    if (validate.passes()) return next();\n\n    let error = {}, title = validate.errors.first('title'),\n      description = validate.errors.first('description'),\n      startDate = validate.errors.first('startDate'),\n      endDate = validate.errors.first('endDate'),\n      centerId = validate.errors.first('centerId'),\n      userId = validate.errors.first('userId');\n\n    if(title) {\n      error.title = title;\n    }\n    if(description) {\n      error.description = description;\n    }\n    if(startDate) {\n      error.startDate = startDate;\n    }\n    if(endDate) {\n      error.password = endDate;\n    }\n    if(centerId) {\n      error.centerId = centerId;\n    }\n    if(userId) {\n      error.userId = userId;\n    }\n\n    return res.status(400).send({\n      message: 'a required field is missing',\n      statusCode: 400,\n      error\n    });\n  }\n\n\n  /**\n     * Validate Login record\n     *\n     * @param {object} req - HTTP Request\n     * @param {object} res - HTTP Response\n     * @param {function} next\n     * @returns {object} Class instance\n     * @memberof Validation\n     */\n  validateLogin(req, res, next) {\n    let validateLogin = {\n      email: 'required|email',\n      password: 'required|string'\n    };\n\n    let validate = new Validator(req.body, validateLogin);\n    if (validate.passes()) return next();\n\n    let error, email = validate.errors.first('email'),\n      password = validate.errors.first('password');\n\n    if(email && password){\n      error = 'The email and password fields are required';\n    } else if (email) {\n      error = email;\n    } else {\n      error = password;\n    }\n\n    return res.status(400).send({\n      message: 'a required field is missing',\n      statusCode: 400,\n      error\n    });\n  }\n\n  /**\n     * Validate Sign up record\n     *\n     * @param {object} req - HTTP Request\n     * @param {object} res - HTTP Response\n     * @param {function} next\n     * @returns {object} Class instance\n     * @memberof Validation\n     */\n  validateSignUp(req, res, next) {\n    let validation = {\n      firstName: 'required|string',\n      lastName: 'required|string',\n      email: 'required|email',\n      password: 'required|string'\n    };\n\n    let validate = new Validator(req.body, validation);\n    if (validate.passes()) return next();\n\n    let error = {}, firstName = validate.errors.first('firstName'),\n      lastName = validate.errors.first('lastName'),\n      email = validate.errors.first('email'),\n      password = validate.errors.first('password');\n\n    if(firstName) {\n      error.firstName = firstName;\n    }\n    if(lastName) {\n      error.lastName = lastName;\n    }\n    if(email) {\n      error.email = email;\n    }\n    if(password) {\n      error.password = password;\n    }\n\n    return res.status(400).send({\n      message: 'a required field is missing',\n      statusCode: 400,\n      error\n    });\n  }\n}\n\nexport default Validation;\n"]}