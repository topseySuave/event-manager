{"version":3,"sources":["../../server/middleware/validator.js"],"names":["Validation","req","res","next","centerRules","title","location","description","facilities","capacity","price","validate","body","passes","status","send","message","statusCode","error","errors","eventRules","startDate","endDate","userId","validateLogin","email","password","validation","firstName","lastName"],"mappings":";;;;;;;;;AAAA;;;;;;;;IAEaA,U,WAAAA,U;;;;;;;mCACIC,G,EAAKC,G,EAAKC,I,EAAM;AAC7B,UAAMC,cAAc;AAClBC,eAAO,iBADW;AAElBC,kBAAU,iBAFQ;AAGlBC,qBAAa,iBAHK;AAIlBC,oBAAY,OAJM;AAKlBC,kBAAU,SALQ;AAMlBC,eAAO;AANW,OAApB;;AASA,UAAIC,WAAW,0BAAcV,IAAIW,IAAlB,EAAwBR,WAAxB,CAAf;AACA,UAAIO,SAASE,MAAT,EAAJ,EAAuB;AACrBV;AACD,OAFD,MAEO;AACL,eAAOD,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,6BADiB;AAE1BC,sBAAY,GAFc;AAG1BC,iBAAOP,SAASQ;AAHU,SAArB,CAAP;AAKD;AACF;;;kCAEalB,G,EAAKC,G,EAAKC,I,EAAM;AAC5B,UAAMiB,aAAa;AACjBf,eAAO,iBADU;AAEjBE,qBAAa,iBAFI;AAGjBc,mBAAW,eAHM;AAIjBC,iBAAS,eAJQ;AAKjBC,gBAAQ;AALS,OAAnB;;AAQA,UAAIZ,WAAW,0BAAcV,IAAIW,IAAlB,EAAwBQ,UAAxB,CAAf;AACA,UAAIT,SAASE,MAAT,EAAJ,EAAuB;AACrBV;AACD,OAFD,MAEO;AACL,eAAOD,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,6BADiB;AAE1BC,sBAAY,GAFc;AAG1BC,iBAAOP,SAASQ;AAHU,SAArB,CAAP;AAKD;AACF;;;kCAEalB,G,EAAKC,G,EAAKC,I,EAAM;AAC5B,UAAIqB,gBAAgB;AAClBC,eAAO,gBADW;AAElBC,kBAAU;AAFQ,OAApB;;AAKA,UAAIf,WAAW,0BAAcV,IAAIW,IAAlB,EAAwBY,aAAxB,CAAf;;AAEA,UAAIb,SAASE,MAAT,EAAJ,EAAuB;AACrB,eAAOV,MAAP;AACD;AACD,aAAOD,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAAS,6BADiB;AAE1BC,oBAAY,GAFc;AAG1BC,eAAOP,SAASQ;AAHU,OAArB,CAAP;AAKD;;;mCAEclB,G,EAAKC,G,EAAKC,I,EAAM;AAC7B,UAAIwB,aAAa;AACfC,mBAAW,iBADI;AAEfC,kBAAU,iBAFK;AAGfJ,eAAO,gBAHQ;AAIfC,kBAAU;AAJK,OAAjB;;AAOA,UAAIf,WAAW,0BAAcV,IAAIW,IAAlB,EAAwBe,UAAxB,CAAf;;AAEA,UAAIhB,SAASE,MAAT,EAAJ,EAAuB;AACrBV;AACD,OAFD,MAEO;AACL,eAAOD,IAAIY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,6BADiB;AAE1BC,sBAAY,GAFc;AAG1BC,iBAAOP,SAASQ;AAHU,SAArB,CAAP;AAKD;AACF;;;;;;kBAGYnB,U","file":"validator.js","sourcesContent":["import Validator from 'validatorjs';\n\nexport class Validation {\n  validateCenter(req, res, next) {\n    const centerRules = {\n      title: 'required|string',\n      location: 'required|string',\n      description: 'required|string',\n      facilities: 'array',\n      capacity: 'integer',\n      price: 'integer'\n    };\n\n    let validate = new Validator(req.body, centerRules);\n    if (validate.passes()) {\n      next();\n    } else {\n      return res.status(400).send({\n        message: 'a required field is missing',\n        statusCode: 400,\n        error: validate.errors\n      });\n    }\n  }\n\n  validateEvent(req, res, next) {\n    const eventRules = {\n      title: 'required|string',\n      description: 'required|string',\n      startDate: 'required|date',\n      endDate: 'required|date',\n      userId: 'required|integer'\n    };\n\n    let validate = new Validator(req.body, eventRules);\n    if (validate.passes()) {\n      next();\n    } else {\n      return res.status(400).send({\n        message: 'a required field is missing',\n        statusCode: 400,\n        error: validate.errors\n      });\n    }\n  }\n\n  validateLogin(req, res, next) {\n    let validateLogin = {\n      email: 'required|email',\n      password: 'required|string'\n    };\n\n    let validate = new Validator(req.body, validateLogin);\n\n    if (validate.passes()) {\n      return next();\n    }\n    return res.status(400).send({\n      message: 'a required field is missing',\n      statusCode: 400,\n      error: validate.errors\n    });\n  }\n\n  validateSignUp(req, res, next) {\n    let validation = {\n      firstName: 'required|string',\n      lastName: 'required|string',\n      email: 'required|email',\n      password: 'required|string'\n    };\n\n    let validate = new Validator(req.body, validation);\n\n    if (validate.passes()) {\n      next();\n    } else {\n      return res.status(400).send({\n        message: 'a required field is missing',\n        statusCode: 400,\n        error: validate.errors\n      });\n    }\n  }\n}\n\nexport default Validation;\n"]}