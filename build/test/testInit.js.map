{"version":3,"sources":["../../server/test/testInit.js"],"names":["testInit","host","usersApiRoute","centersApiRoute","eventsApiRoute","demoUserEmail","internet","email","demoUserPassword","password","adminEmailAddr","constMailAddr","constPass","firstName","name","lastName","adminFirstName","adminLastName","democenterTitle","title","demoCenterImg","image","imageUrl","democenterLocation","address","streetAddress","demoCenterDescrp","lorem","paragraph","demoCenterFacilities","democenterCapacity","parseInt","Math","ceil","random","demoCenterPrice","demoEventTitle","demoEventImg","demoEventLocation","demoEventStartDate","date","future","demoEventEndDate","demoEventPastedDate","past","demoEventDescrp","setToken","bind","getToken","token"],"mappings":";;;;;;;;AAAA;;;;;;;;AAEA;;;;;IAKqBA,Q;AACnB;;;;;;AAMA,sBAAc;AAAA;;AACZ,SAAKC,IAAL,GAAY,SAAZ;AACA,SAAKC,aAAL,GAAqB,KAAKD,IAAL,GAAY,QAAjC;AACA,SAAKE,eAAL,GAAuB,KAAKF,IAAL,GAAY,UAAnC;AACA,SAAKG,cAAL,GAAsB,KAAKH,IAAL,GAAY,SAAlC;;AAEA;AACA,SAAKI,aAAL,GAAqB,gBAAMC,QAAN,CAAeC,KAAf,EAArB;AACA,SAAKC,gBAAL,GAAwB,gBAAMF,QAAN,CAAeG,QAAf,EAAxB;AACA,SAAKC,cAAL,GAAsB,iBAAtB;AACA,SAAKC,aAAL,GAAqB,mBAArB;AACA,SAAKC,SAAL,GAAiB,WAAjB;;AAEA,SAAKC,SAAL,GAAiB,gBAAMC,IAAN,CAAWD,SAAX,EAAjB;AACA,SAAKE,QAAL,GAAgB,gBAAMD,IAAN,CAAWC,QAAX,EAAhB;AACA,SAAKC,cAAL,GAAsB,gBAAMF,IAAN,CAAWD,SAAX,EAAtB;AACA,SAAKI,aAAL,GAAqB,gBAAMH,IAAN,CAAWC,QAAX,EAArB;;AAEA;AACA,SAAKG,eAAL,GAAuB,gBAAMJ,IAAN,CAAWK,KAAX,EAAvB;AACA,SAAKC,aAAL,GAAqB,gBAAMC,KAAN,CAAYC,QAAZ,EAArB;AACA,SAAKC,kBAAL,GAA0B,gBAAMC,OAAN,CAAcC,aAAd,EAA1B;AACA,SAAKC,gBAAL,GAAwB,gBAAMC,KAAN,CAAYC,SAAZ,EAAxB;AACA,SAAKC,oBAAL,GAA4B,CAAC,eAAD,EAAkB,OAAlB,EAA2B,QAA3B,EAAqC,aAArC,EAAoD,OAApD,CAA5B;AACA,SAAKC,kBAAL,GAA0BC,SAASC,KAAKC,IAAL,CAAUD,KAAKE,MAAL,KAAgB,IAA1B,IAAkC,EAA3C,EAA+C,EAA/C,CAA1B,CAxBY,CAwBkE;AAC9E,SAAKC,eAAL,GAAuBJ,SAASC,KAAKC,IAAL,CAAUD,KAAKE,MAAL,KAAgB,MAA1B,IAAoC,KAA7C,EAAoD,EAApD,CAAvB,CAzBY,CAyBoE;;AAEhF;AACA,SAAKE,cAAL,GAAsB,gBAAMtB,IAAN,CAAWK,KAAX,EAAtB;AACA,SAAKkB,YAAL,GAAoB,gBAAMhB,KAAN,CAAYC,QAAZ,EAApB;AACA,SAAKgB,iBAAL,GAAyB,gBAAMd,OAAN,CAAcC,aAAd,EAAzB;AACA,SAAKc,kBAAL,GAA0B,gBAAMC,IAAN,CAAWC,MAAX,EAA1B;AACA,SAAKC,gBAAL,GAAwB,gBAAMF,IAAN,CAAWC,MAAX,EAAxB;AACA,SAAKE,mBAAL,GAA2B,gBAAMH,IAAN,CAAWI,IAAX,EAA3B;AACA,SAAKC,eAAL,GAAuB,gBAAMlB,KAAN,CAAYC,SAAZ,EAAvB;;AAEA,SAAKkB,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAED;;;;;;;;;;;6BAOSE,K,EAAO;AACd,WAAKA,KAAL,GAAaA,KAAb;AACD;;AAED;;;;;;;;;+BAMW;AACT,aAAO,KAAKA,KAAZ;AACD;;;;;;kBAlEkBjD,Q","file":"testInit.js","sourcesContent":["import faker from 'faker';\n\n/**\n * Assign test helpers Constants\n * @class\n * @memberof testInit\n */\nexport default class testInit {\n  /**\n     * Class Constructor\n     * @constructor\n     * @returns {void} Class instance\n     * @memberof testInit\n     */\n  constructor() {\n    this.host = '/api/v1';\n    this.usersApiRoute = this.host + '/users';\n    this.centersApiRoute = this.host + '/centers';\n    this.eventsApiRoute = this.host + '/events';\n\n    // Init users constants\n    this.demoUserEmail = faker.internet.email();\n    this.demoUserPassword = faker.internet.password();\n    this.adminEmailAddr = 'topse@gmail.com';\n    this.constMailAddr = 'gabriel@gmail.com';\n    this.constPass = '123456789';\n\n    this.firstName = faker.name.firstName();\n    this.lastName = faker.name.lastName();\n    this.adminFirstName = faker.name.firstName();\n    this.adminLastName = faker.name.lastName();\n\n    // Init center constants\n    this.democenterTitle = faker.name.title();\n    this.demoCenterImg = faker.image.imageUrl();\n    this.democenterLocation = faker.address.streetAddress();\n    this.demoCenterDescrp = faker.lorem.paragraph();\n    this.demoCenterFacilities = ['swimming pool', 'power', 'chairs', 'parking lot', 'stage'];\n    this.democenterCapacity = parseInt(Math.ceil(Math.random() * 5000) + 10, 10); // Return a random number between 10 and 5000 for the capacity of the center\n    this.demoCenterPrice = parseInt(Math.ceil(Math.random() * 200000) + 10000, 10); // Return a random number between 10000 and 200000 for the price of the center\n\n    // Init Event constants\n    this.demoEventTitle = faker.name.title();\n    this.demoEventImg = faker.image.imageUrl();\n    this.demoEventLocation = faker.address.streetAddress();\n    this.demoEventStartDate = faker.date.future();\n    this.demoEventEndDate = faker.date.future();\n    this.demoEventPastedDate = faker.date.past();\n    this.demoEventDescrp = faker.lorem.paragraph();\n\n    this.setToken = this.setToken.bind(this);\n    this.getToken = this.getToken.bind(this);\n  }\n\n  /**\n     * Sets the token property\n     *\n     * @param {string} token\n     * @returns {string} 'token'\n     * @memberof testHelper\n     */\n  setToken(token) {\n    this.token = token;\n  }\n\n  /**\n     * Gets the token property\n     *\n     * @returns {string} 'token'\n     * @memberof testHelper\n     */\n  getToken() {\n    return this.token;\n  }\n}\n"]}