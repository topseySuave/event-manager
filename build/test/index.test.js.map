{"version":3,"sources":["../../server/test/index.test.js"],"names":["use","expect","token","describe","it","done","request","get","end","err","res","status","to","equal","body","have","property","post","send","random","put","title","img_url","location","description","facilities","capacity","price","startDate","endDate","centerId","userId","delete"],"mappings":"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","file":"index.test.js","sourcesContent":["\"use strict\";\r\nimport chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../app';\r\n\r\nchai.use(chaiHttp);\r\nconst expect = chai.expect;\r\n\r\nlet token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwiaWF0IjoxNTExOTcxNTkwLCJleHAiOjE1MTIwNTc5OTB9.neAGxOu0SK-9rQuvzmCPY5rx2aNJk7AfKqL52G4ZGJI';\r\n\r\ndescribe('Test API', () => {\r\n    describe('GET /', () => {\r\n        it('Should return 200 for getting all centers', (done) => {\r\n            chai.request(app)\r\n                .get('/api/v1/centers')\r\n                .end((err, res) => {\r\n                    expect(res.status).to.equal(200);\r\n                    done();\r\n                });\r\n        });\r\n        it('Should return 200 for getting individual center', (done) => {\r\n            chai.request(app)\r\n                .get('/api/v1/centers/1')\r\n                .end((err, res) => {\r\n                    expect(res.status).to.equal(200);\r\n                    done();\r\n                });\r\n        });\r\n        it('Should return an object', (done) => {\r\n            chai.request(app)\r\n                .get('/api/v1/centers')\r\n                .end((err, res) => {\r\n                    expect(res.body).to.have.property('message').to.equal('Successful Centers!');\r\n                    done();\r\n                });\r\n        });\r\n\r\n        it('Should return 200 for the default route', (done) => {\r\n            chai.request(app)\r\n                .get('/')\r\n                .end((err, res) => {\r\n                    expect(res.status).to.equal(200);\r\n                    done();\r\n                });\r\n        });\r\n\r\n        // Test for undefined routes\r\n        it('Undefined Routes Should Return 404', (done) => {\r\n            chai.request(app)\r\n                .post('/another/undefined/route')\r\n                .send({ random: 'random' })\r\n                .end((err, res) => {\r\n                    expect(res).to.have.status(404);\r\n                    done();\r\n                });\r\n        });\r\n    });\r\n    describe('API to update center', () => {\r\n        it('Should return 200 if successful', (done) => {\r\n            chai.request(app)\r\n                .put('/api/v1/centers/1')\r\n                .send({\r\n                    title: 'Muson center lagos',\r\n                    img_url: 'public/images/uploads/img12.jpg',\r\n                    location: '24, oluwantode street Ojo, lagos',\r\n                    description: 'A sample description for the sample event',\r\n                    facilities: 'Chairs, Power, Swimming pool, Tables, Security',\r\n                    capacity: 2000,\r\n                    price: 200000\r\n                })\r\n                .end((err, res) => {\r\n                    expect(res.status).to.equal(200);\r\n                    expect(res.body).to.have.property('message').equal('Center has been created');\r\n                    done();\r\n                });\r\n        });\r\n    });\r\n    describe('POST event', () => {\r\n        it('Should return 400 for post without event title', (done) => {\r\n            chai.request(app)\r\n                .post('/api/v1/events')\r\n                .send({\r\n                    title: 'Muson center lagos',\r\n                    img_url: 'public/images/uploads/img12.jpg',\r\n                    description: 'A sample description for the sample event',\r\n                    location: '24, oluwantode street Ojo, lagos',\r\n                    startDate: '10-11-18',\r\n                    endDate: '10-11-20',\r\n                    centerId: 1,\r\n                    userId: 2\r\n                })\r\n                .end((err, res) => {\r\n                    expect(res).to.have.status(404);\r\n                    done();\r\n                });\r\n        });\r\n    });\r\n});\r\ndescribe('API to update event', () => {\r\n    it('Should return 200 if successful', (done) => {\r\n        chai.request(app)\r\n            .put('/api/v1/events/1')\r\n            .send({\r\n                title: 'Muson center lagos',\r\n                img_url: 'public/images/uploads/img12.jpg',\r\n                description: 'A sample description for the sample event',\r\n                location: '24, oluwantode street Ojo, lagos',\r\n                startDate: '10-11-18',\r\n                endDate: '10-11-20',\r\n                centerId: 1,\r\n                userId: 2\r\n            })\r\n            .end((err, res) => {\r\n                expect(res.status).to.equal(200);\r\n                expect(res.body).to.have.property('message').to.equal('Event has been created');\r\n                done();\r\n            });\r\n    });\r\n});\r\n\r\n\r\ndescribe('API delete event', () => {\r\n    it('Should return 200 for successful delete request', (done) => {\r\n        chai.request(app)\r\n            .delete('/api/v1/events/1')\r\n            .end((err, res) => {\r\n                expect(res).to.have.status(200);\r\n                done();\r\n            });\r\n    });\r\n    it('Should return 404 if parameter is not found', (done) => {\r\n        chai.request(app)\r\n            .delete('/api/v1/events/')\r\n            .end((err, res) => {\r\n                expect(res).to.have.status(404);\r\n                done();\r\n            });\r\n    });\r\n});"]}