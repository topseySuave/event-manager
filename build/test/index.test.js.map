{"version":3,"sources":["../../server/test/index.test.js"],"names":["use","expect","describe","it","done","request","get","end","err","res","status","to","equal"],"mappings":"AAAA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,eAAKA,GAAL;AACA,IAAMC,SAAS,eAAKA,MAApB;;AAEA;;AAEAC,SAAS,UAAT,EAAqB,YAAM;AACvBA,aAAS,OAAT,EAAkB,YAAM;AACpBC,WAAG,2CAAH,EAAgD,UAACC,IAAD,EAAU;AACtD,2BAAKC,OAAL,gBACKC,GADL,CACS,iBADT,EAEKC,GAFL,CAES,UAACC,GAAD,EAAMC,GAAN,EAAc;AACfR,uBAAOQ,IAAIC,MAAX,EAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAR;AACH,aALL;AAMH,SAPD;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KA7CD;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAvFD;AAwFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.test.js","sourcesContent":["\"use strict\";\r\nimport chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport app from '../app';\r\n\r\nchai.use(chaiHttp);\r\nconst expect = chai.expect;\r\n\r\n// let token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwiaWF0IjoxNTExOTcxNTkwLCJleHAiOjE1MTIwNTc5OTB9.neAGxOu0SK-9rQuvzmCPY5rx2aNJk7AfKqL52G4ZGJI';\r\n\r\ndescribe('Test API', () => {\r\n    describe('GET /', () => {\r\n        it('Should return 200 for getting all centers', (done) => {\r\n            chai.request(app)\r\n                .get('/api/v1/centers')\r\n                .end((err, res) => {\r\n                    expect(res.status).to.equal(200);\r\n                    done();\r\n                });\r\n        });\r\n        // it('Should return 200 for getting individual center', (done) => {\r\n        //     chai.request(app)\r\n        //         .get('/api/v1/centers/1')\r\n        //         .end((err, res) => {\r\n        //             expect(res.status).to.equal(200);\r\n        //             done();\r\n        //         });\r\n        // });\r\n        // it('Should return an object', (done) => {\r\n        //     chai.request(app)\r\n        //         .get('/api/v1/centers')\r\n        //         .end((err, res) => {\r\n        //             expect(res.body).to.have.property('message').to.equal('Successful Centers!');\r\n        //             done();\r\n        //         });\r\n        // });\r\n        //\r\n        // it('Should return 200 for the default route', (done) => {\r\n        //     chai.request(app)\r\n        //         .get('/')\r\n        //         .end((err, res) => {\r\n        //             expect(res.status).to.equal(200);\r\n        //             done();\r\n        //         });\r\n        // });\r\n        //\r\n        // // Test for undefined routes\r\n        // it('Undefined Routes Should Return 404', (done) => {\r\n        //     chai.request(app)\r\n        //         .post('/another/undefined/route')\r\n        //         .send({ random: 'random' })\r\n        //         .end((err, res) => {\r\n        //             expect(res).to.have.status(404);\r\n        //             done();\r\n        //         });\r\n        // });\r\n    });\r\n    // describe('API to update center', () => {\r\n    //     it('Should return 200 if successful', (done) => {\r\n    //         chai.request(app)\r\n    //             .put('/api/v1/centers/1')\r\n    //             .send({\r\n    //                 title: 'Muson center lagos',\r\n    //                 img_url: 'public/images/uploads/img12.jpg',\r\n    //                 location: '24, oluwantode street Ojo, lagos',\r\n    //                 description: 'A sample description for the sample event',\r\n    //                 facilities: 'Chairs, Power, Swimming pool, Tables, Security',\r\n    //                 capacity: 2000,\r\n    //                 price: 200000\r\n    //             })\r\n    //             .end((err, res) => {\r\n    //                 expect(res.status).to.equal(200);\r\n    //                 expect(res.body).to.have.property('message').equal('Center has been created');\r\n    //                 done();\r\n    //             });\r\n    //     });\r\n    // });\r\n    // describe('POST event', () => {\r\n    //     it('Should return 400 for post without event title', (done) => {\r\n    //         chai.request(app)\r\n    //             .post('/api/v1/events')\r\n    //             .send({\r\n    //                 title: 'Muson center lagos',\r\n    //                 img_url: 'public/images/uploads/img12.jpg',\r\n    //                 description: 'A sample description for the sample event',\r\n    //                 location: '24, oluwantode street Ojo, lagos',\r\n    //                 startDate: '10-11-18',\r\n    //                 endDate: '10-11-20',\r\n    //                 centerId: 1,\r\n    //                 userId: 2\r\n    //             })\r\n    //             .end((err, res) => {\r\n    //                 expect(res).to.have.status(404);\r\n    //                 done();\r\n    //             });\r\n    //     });\r\n    // });\r\n});\r\n// describe('API to update event', () => {\r\n//     it('Should return 200 if successful', (done) => {\r\n//         chai.request(app)\r\n//             .put('/api/v1/events/1')\r\n//             .send({\r\n//                 title: 'Muson center lagos',\r\n//                 img_url: 'public/images/uploads/img12.jpg',\r\n//                 description: 'A sample description for the sample event',\r\n//                 location: '24, oluwantode street Ojo, lagos',\r\n//                 startDate: '10-11-18',\r\n//                 endDate: '10-11-20',\r\n//                 centerId: 1,\r\n//                 userId: 2\r\n//             })\r\n//             .end((err, res) => {\r\n//                 expect(res.status).to.equal(200);\r\n//                 expect(res.body).to.have.property('message').to.equal('Event has been created');\r\n//                 done();\r\n//             });\r\n//     });\r\n// });\r\n//\r\n//\r\n// describe('API delete event', () => {\r\n//     it('Should return 200 for successful delete request', (done) => {\r\n//         chai.request(app)\r\n//             .delete('/api/v1/events/1')\r\n//             .end((err, res) => {\r\n//                 expect(res).to.have.status(200);\r\n//                 done();\r\n//             });\r\n//     });\r\n//     it('Should return 404 if parameter is not found', (done) => {\r\n//         chai.request(app)\r\n//             .delete('/api/v1/events/')\r\n//             .end((err, res) => {\r\n//                 expect(res).to.have.status(404);\r\n//                 done();\r\n//             });\r\n//     });\r\n// });"]}