{"version":3,"sources":["../../server/models/index.js"],"names":["fs","require","path","Sequelize","config","basename","module","filename","env","process","NODE_ENV","db","sequelize","use_env_variable","logging","database","username","password","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","import","join","name","Object","keys","modelName","associate","exports"],"mappings":";;AAAA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,YAAYF,QAAQ,WAAR,CAAlB;AACAA,QAAQ,QAAR,EAAkBG,MAAlB;;AAEA,IAAMC,WAAWH,KAAKG,QAAL,CAAcC,OAAOC,QAArB,CAAjB;AACA,IAAMC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,IAAMN,SAASH,QAAQ,qBAAR,EAA+BO,GAA/B,CAAf;;AAEA,IAAMG,KAAK,EAAX;;AAEA,IAAIC,kBAAJ;AACA,IAAIR,OAAOS,gBAAX,EAA6B;AAC3BD,cAAY,IAAIT,SAAJ,CAAcM,QAAQD,GAAR,CAAYJ,OAAOS,gBAAnB,CAAd,CAAZ;AACD,CAFD,MAEO;AACLT,SAAOU,OAAP,GAAiB,KAAjB;AACAF,cAAY,IAAIT,SAAJ,CAAcC,OAAOW,QAArB,EAA+BX,OAAOY,QAAtC,EAAgDZ,OAAOa,QAAvD,EAAiEb,MAAjE,CAAZ;AACD;;AAEDJ,GACGkB,WADH,CACeC,SADf,EAEGC,MAFH,CAEU;AAAA,SACLC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IACCD,SAAShB,QADV,IAECgB,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAHd;AAAA,CAFV,EAMGC,OANH,CAMW,UAACH,IAAD,EAAU;AACjB,MAAMI,QAAQb,UAAUc,MAAV,CAAiBxB,KAAKyB,IAAL,CAAUR,SAAV,EAAqBE,IAArB,CAAjB,CAAd;AACAV,KAAGc,MAAMG,IAAT,IAAiBH,KAAjB;AACD,CATH;;AAWAI,OAAOC,IAAP,CAAYnB,EAAZ,EAAgBa,OAAhB,CAAwB,UAACO,SAAD,EAAe;AACrC,MAAIpB,GAAGoB,SAAH,EAAcC,SAAlB,EAA6B;AAC3BrB,OAAGoB,SAAH,EAAcC,SAAd,CAAwBrB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAN,OAAO2B,OAAP,GAAiBtB,EAAjB","file":"index.js","sourcesContent":["const fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nrequire('dotenv').config();\n\nconst basename = path.basename(module.filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require('../config/config.js')[env];\n\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable]);\n} else {\n  config.logging = false;\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file =>\n    (file.indexOf('.') !== 0) &&\n    (file !== basename) &&\n    (file.slice(-3) === '.js'))\n  .forEach((file) => {\n    const model = sequelize.import(path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\nmodule.exports = db;\n"]}