// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EventModal component component should mount 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventModal
    actUser={
      Object {
        "isAuthenticated": true,
        "user": Object {
          "id": 3,
        },
      }
    }
    activeCenter={
      Object {
        "center": Object {
          "id": 3,
          "title": "this is me",
        },
      }
    }
    bookedCenter={true}
    centerIsBooked={true}
    createEventRequest={[Function]}
    editEvent={true}
    event={
      Object {
        "sessEvents": Object {
          "eventCreated": false,
        },
      }
    }
    eventToEdit={
      Object {
        "description": "we put the goog in the good life",
        "endDate": "Wed Jun 06 2018 18:56:25 GMT+0100 (WAT)20",
        "img_url": "",
        "startDate": "Wed Jun 06 2018 18:56:25 GMT+0100 (WAT)10",
        "title": "we put the goog in the good life",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <RaisedButton
          disabled={false}
          fullWidth={false}
          id="openBookCenter"
          label="Book this center"
          labelPosition="after"
          onClick={[Function]}
          primary={true}
          secondary={false}
        />,
        <Dialog
          actions={
            Array [
              <FlatButton
                disabled={false}
                fullWidth={false}
                id="closeBookCenter"
                label="Cancel"
                labelPosition="after"
                labelStyle={Object {}}
                onClick={[Function]}
                onKeyboardFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                primary={true}
                secondary={false}
              />,
              <FlatButton
                disabled={false}
                fullWidth={false}
                id="submitEvent"
                keyboardFocused={true}
                label="Add Event"
                labelPosition="after"
                labelStyle={Object {}}
                onClick={[Function]}
                onKeyboardFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                primary={true}
                secondary={false}
              />,
            ]
          }
          autoDetectWindowHeight={true}
          autoScrollBodyContent={true}
          id="creatEventModal"
          modal={false}
          onRequestClose={[Function]}
          open={false}
          repositionOnUpdate={true}
          style={
            Object {
              "marginTop": "0px",
            }
          }
          title="Edit Event"
        >
          <div
            className="row"
            style={
              Object {
                "marginTop": "20px",
              }
            }
          >
            <form
              className="col s12"
              id="add-event-form"
            >
              <div
                className="row"
              >
                <div
                  className="col s6"
                >
                  <div
                    className="file-field input-field"
                  >
                    <div
                      className="btn"
                    >
                      <span>
                        Upload
                      </span>
                      <input
                        accept="image/jpeg,jpg,png,gif"
                        name="img_url"
                        onChange={[Function]}
                        type="file"
                      />
                    </div>
                    <div
                      className="file-path-wrapper"
                    >
                      <input
                        className="file-path validate"
                        placeholder="Upload an image here"
                        type="text"
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="input-field col s6"
                >
                  <InputForm
                    error=""
                    id="event_title"
                    label="Title"
                    nameField="title"
                    onChange={[Function]}
                    type="text"
                    value="we put the goog in the good life"
                  />
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="input-field col s6"
                >
                  <DatePicker
                    autoOk={true}
                    container="dialog"
                    disableYearSelection={false}
                    disabled={false}
                    firstDayOfWeek={1}
                    floatingLabelText="Start Date"
                    hideCalendarDate={false}
                    id="eventStartDate"
                    name="startDate"
                    onChange={[Function]}
                    openToYearSelection={false}
                    style={Object {}}
                  />
                </div>
                <div
                  className="input-field col s6"
                >
                  <DatePicker
                    autoOk={true}
                    container="dialog"
                    disableYearSelection={false}
                    disabled={false}
                    firstDayOfWeek={1}
                    floatingLabelText="End Date"
                    hideCalendarDate={false}
                    id="eventEndDate"
                    name="endDate"
                    onChange={[Function]}
                    openToYearSelection={false}
                    style={Object {}}
                  />
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="input-field col s12"
                >
                  <label
                    htmlFor="description"
                  >
                    Description
                  </label>
                  <textarea
                    className="materialize-textarea validate"
                    id="eventDescription"
                    name="description"
                    onChange={[Function]}
                    required={true}
                    type="text"
                    value="we put the goog in the good life"
                  />
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="input-field col s12"
                >
                  <Toggle
                    defaultToggled={false}
                    disabled={false}
                    label="Do you want this event to be private?"
                    labelPosition="left"
                    labelStyle={
                      Object {
                        "color": "green",
                      }
                    }
                    name="private"
                    onToggle={[Function]}
                  />
                </div>
              </div>
            </form>
          </div>
        </Dialog>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": false,
          "fullWidth": false,
          "id": "openBookCenter",
          "label": "Book this center",
          "labelPosition": "after",
          "onClick": [Function],
          "primary": true,
          "secondary": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "actions": Array [
            <FlatButton
              disabled={false}
              fullWidth={false}
              id="closeBookCenter"
              label="Cancel"
              labelPosition="after"
              labelStyle={Object {}}
              onClick={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              primary={true}
              secondary={false}
            />,
            <FlatButton
              disabled={false}
              fullWidth={false}
              id="submitEvent"
              keyboardFocused={true}
              label="Add Event"
              labelPosition="after"
              labelStyle={Object {}}
              onClick={[Function]}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onTouchStart={[Function]}
              primary={true}
              secondary={false}
            />,
          ],
          "autoDetectWindowHeight": true,
          "autoScrollBodyContent": true,
          "children": <div
            className="row"
            style={
              Object {
                "marginTop": "20px",
              }
            }
          >
            <form
              className="col s12"
              id="add-event-form"
            >
              <div
                className="row"
              >
                <div
                  className="col s6"
                >
                  <div
                    className="file-field input-field"
                  >
                    <div
                      className="btn"
                    >
                      <span>
                        Upload
                      </span>
                      <input
                        accept="image/jpeg,jpg,png,gif"
                        name="img_url"
                        onChange={[Function]}
                        type="file"
                      />
                    </div>
                    <div
                      className="file-path-wrapper"
                    >
                      <input
                        className="file-path validate"
                        placeholder="Upload an image here"
                        type="text"
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="input-field col s6"
                >
                  <InputForm
                    error=""
                    id="event_title"
                    label="Title"
                    nameField="title"
                    onChange={[Function]}
                    type="text"
                    value="we put the goog in the good life"
                  />
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="input-field col s6"
                >
                  <DatePicker
                    autoOk={true}
                    container="dialog"
                    disableYearSelection={false}
                    disabled={false}
                    firstDayOfWeek={1}
                    floatingLabelText="Start Date"
                    hideCalendarDate={false}
                    id="eventStartDate"
                    name="startDate"
                    onChange={[Function]}
                    openToYearSelection={false}
                    style={Object {}}
                  />
                </div>
                <div
                  className="input-field col s6"
                >
                  <DatePicker
                    autoOk={true}
                    container="dialog"
                    disableYearSelection={false}
                    disabled={false}
                    firstDayOfWeek={1}
                    floatingLabelText="End Date"
                    hideCalendarDate={false}
                    id="eventEndDate"
                    name="endDate"
                    onChange={[Function]}
                    openToYearSelection={false}
                    style={Object {}}
                  />
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="input-field col s12"
                >
                  <label
                    htmlFor="description"
                  >
                    Description
                  </label>
                  <textarea
                    className="materialize-textarea validate"
                    id="eventDescription"
                    name="description"
                    onChange={[Function]}
                    required={true}
                    type="text"
                    value="we put the goog in the good life"
                  />
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="input-field col s12"
                >
                  <Toggle
                    defaultToggled={false}
                    disabled={false}
                    label="Do you want this event to be private?"
                    labelPosition="left"
                    labelStyle={
                      Object {
                        "color": "green",
                      }
                    }
                    name="private"
                    onToggle={[Function]}
                  />
                </div>
              </div>
            </form>
          </div>,
          "id": "creatEventModal",
          "modal": false,
          "onRequestClose": [Function],
          "open": false,
          "repositionOnUpdate": true,
          "style": Object {
            "marginTop": "0px",
          },
          "title": "Edit Event",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <form
              className="col s12"
              id="add-event-form"
            >
              <div
                className="row"
              >
                <div
                  className="col s6"
                >
                  <div
                    className="file-field input-field"
                  >
                    <div
                      className="btn"
                    >
                      <span>
                        Upload
                      </span>
                      <input
                        accept="image/jpeg,jpg,png,gif"
                        name="img_url"
                        onChange={[Function]}
                        type="file"
                      />
                    </div>
                    <div
                      className="file-path-wrapper"
                    >
                      <input
                        className="file-path validate"
                        placeholder="Upload an image here"
                        type="text"
                      />
                    </div>
                  </div>
                </div>
                <div
                  className="input-field col s6"
                >
                  <InputForm
                    error=""
                    id="event_title"
                    label="Title"
                    nameField="title"
                    onChange={[Function]}
                    type="text"
                    value="we put the goog in the good life"
                  />
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="input-field col s6"
                >
                  <DatePicker
                    autoOk={true}
                    container="dialog"
                    disableYearSelection={false}
                    disabled={false}
                    firstDayOfWeek={1}
                    floatingLabelText="Start Date"
                    hideCalendarDate={false}
                    id="eventStartDate"
                    name="startDate"
                    onChange={[Function]}
                    openToYearSelection={false}
                    style={Object {}}
                  />
                </div>
                <div
                  className="input-field col s6"
                >
                  <DatePicker
                    autoOk={true}
                    container="dialog"
                    disableYearSelection={false}
                    disabled={false}
                    firstDayOfWeek={1}
                    floatingLabelText="End Date"
                    hideCalendarDate={false}
                    id="eventEndDate"
                    name="endDate"
                    onChange={[Function]}
                    openToYearSelection={false}
                    style={Object {}}
                  />
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="input-field col s12"
                >
                  <label
                    htmlFor="description"
                  >
                    Description
                  </label>
                  <textarea
                    className="materialize-textarea validate"
                    id="eventDescription"
                    name="description"
                    onChange={[Function]}
                    required={true}
                    type="text"
                    value="we put the goog in the good life"
                  />
                </div>
              </div>
              <div
                className="row"
              >
                <div
                  className="input-field col s12"
                >
                  <Toggle
                    defaultToggled={false}
                    disabled={false}
                    label="Do you want this event to be private?"
                    labelPosition="left"
                    labelStyle={
                      Object {
                        "color": "green",
                      }
                    }
                    name="private"
                    onToggle={[Function]}
                  />
                </div>
              </div>
            </form>,
            "className": "row",
            "style": Object {
              "marginTop": "20px",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="row"
                >
                  <div
                    className="col s6"
                  >
                    <div
                      className="file-field input-field"
                    >
                      <div
                        className="btn"
                      >
                        <span>
                          Upload
                        </span>
                        <input
                          accept="image/jpeg,jpg,png,gif"
                          name="img_url"
                          onChange={[Function]}
                          type="file"
                        />
                      </div>
                      <div
                        className="file-path-wrapper"
                      >
                        <input
                          className="file-path validate"
                          placeholder="Upload an image here"
                          type="text"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    className="input-field col s6"
                  >
                    <InputForm
                      error=""
                      id="event_title"
                      label="Title"
                      nameField="title"
                      onChange={[Function]}
                      type="text"
                      value="we put the goog in the good life"
                    />
                  </div>
                </div>,
                <div
                  className="row"
                >
                  <div
                    className="input-field col s6"
                  >
                    <DatePicker
                      autoOk={true}
                      container="dialog"
                      disableYearSelection={false}
                      disabled={false}
                      firstDayOfWeek={1}
                      floatingLabelText="Start Date"
                      hideCalendarDate={false}
                      id="eventStartDate"
                      name="startDate"
                      onChange={[Function]}
                      openToYearSelection={false}
                      style={Object {}}
                    />
                  </div>
                  <div
                    className="input-field col s6"
                  >
                    <DatePicker
                      autoOk={true}
                      container="dialog"
                      disableYearSelection={false}
                      disabled={false}
                      firstDayOfWeek={1}
                      floatingLabelText="End Date"
                      hideCalendarDate={false}
                      id="eventEndDate"
                      name="endDate"
                      onChange={[Function]}
                      openToYearSelection={false}
                      style={Object {}}
                    />
                  </div>
                </div>,
                <div
                  className="row"
                >
                  <div
                    className="input-field col s12"
                  >
                    <label
                      htmlFor="description"
                    >
                      Description
                    </label>
                    <textarea
                      className="materialize-textarea validate"
                      id="eventDescription"
                      name="description"
                      onChange={[Function]}
                      required={true}
                      type="text"
                      value="we put the goog in the good life"
                    />
                  </div>
                </div>,
                <div
                  className="row"
                >
                  <div
                    className="input-field col s12"
                  >
                    <Toggle
                      defaultToggled={false}
                      disabled={false}
                      label="Do you want this event to be private?"
                      labelPosition="left"
                      labelStyle={
                        Object {
                          "color": "green",
                        }
                      }
                      name="private"
                      onToggle={[Function]}
                    />
                  </div>
                </div>,
              ],
              "className": "col s12",
              "id": "add-event-form",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="col s6"
                    >
                      <div
                        className="file-field input-field"
                      >
                        <div
                          className="btn"
                        >
                          <span>
                            Upload
                          </span>
                          <input
                            accept="image/jpeg,jpg,png,gif"
                            name="img_url"
                            onChange={[Function]}
                            type="file"
                          />
                        </div>
                        <div
                          className="file-path-wrapper"
                        >
                          <input
                            className="file-path validate"
                            placeholder="Upload an image here"
                            type="text"
                          />
                        </div>
                      </div>
                    </div>,
                    <div
                      className="input-field col s6"
                    >
                      <InputForm
                        error=""
                        id="event_title"
                        label="Title"
                        nameField="title"
                        onChange={[Function]}
                        type="text"
                        value="we put the goog in the good life"
                      />
                    </div>,
                  ],
                  "className": "row",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <div
                        className="file-field input-field"
                      >
                        <div
                          className="btn"
                        >
                          <span>
                            Upload
                          </span>
                          <input
                            accept="image/jpeg,jpg,png,gif"
                            name="img_url"
                            onChange={[Function]}
                            type="file"
                          />
                        </div>
                        <div
                          className="file-path-wrapper"
                        >
                          <input
                            className="file-path validate"
                            placeholder="Upload an image here"
                            type="text"
                          />
                        </div>
                      </div>,
                      "className": "col s6",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <div
                            className="btn"
                          >
                            <span>
                              Upload
                            </span>
                            <input
                              accept="image/jpeg,jpg,png,gif"
                              name="img_url"
                              onChange={[Function]}
                              type="file"
                            />
                          </div>,
                          <div
                            className="file-path-wrapper"
                          >
                            <input
                              className="file-path validate"
                              placeholder="Upload an image here"
                              type="text"
                            />
                          </div>,
                        ],
                        "className": "file-field input-field",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <span>
                                Upload
                              </span>,
                              <input
                                accept="image/jpeg,jpg,png,gif"
                                name="img_url"
                                onChange={[Function]}
                                type="file"
                              />,
                            ],
                            "className": "btn",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Upload",
                              },
                              "ref": null,
                              "rendered": "Upload",
                              "type": "span",
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "accept": "image/jpeg,jpg,png,gif",
                                "name": "img_url",
                                "onChange": [Function],
                                "type": "file",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": "input",
                            },
                          ],
                          "type": "div",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <input
                              className="file-path validate"
                              placeholder="Upload an image here"
                              type="text"
                            />,
                            "className": "file-path-wrapper",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "className": "file-path validate",
                              "placeholder": "Upload an image here",
                              "type": "text",
                            },
                            "ref": null,
                            "rendered": null,
                            "type": "input",
                          },
                          "type": "div",
                        },
                      ],
                      "type": "div",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <InputForm
                        error=""
                        id="event_title"
                        label="Title"
                        nameField="title"
                        onChange={[Function]}
                        type="text"
                        value="we put the goog in the good life"
                      />,
                      "className": "input-field col s6",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "error": "",
                        "id": "event_title",
                        "label": "Title",
                        "nameField": "title",
                        "onChange": [Function],
                        "type": "text",
                        "value": "we put the goog in the good life",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="input-field col s6"
                    >
                      <DatePicker
                        autoOk={true}
                        container="dialog"
                        disableYearSelection={false}
                        disabled={false}
                        firstDayOfWeek={1}
                        floatingLabelText="Start Date"
                        hideCalendarDate={false}
                        id="eventStartDate"
                        name="startDate"
                        onChange={[Function]}
                        openToYearSelection={false}
                        style={Object {}}
                      />
                    </div>,
                    <div
                      className="input-field col s6"
                    >
                      <DatePicker
                        autoOk={true}
                        container="dialog"
                        disableYearSelection={false}
                        disabled={false}
                        firstDayOfWeek={1}
                        floatingLabelText="End Date"
                        hideCalendarDate={false}
                        id="eventEndDate"
                        name="endDate"
                        onChange={[Function]}
                        openToYearSelection={false}
                        style={Object {}}
                      />
                    </div>,
                  ],
                  "className": "row",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <DatePicker
                          autoOk={true}
                          container="dialog"
                          disableYearSelection={false}
                          disabled={false}
                          firstDayOfWeek={1}
                          floatingLabelText="Start Date"
                          hideCalendarDate={false}
                          id="eventStartDate"
                          name="startDate"
                          onChange={[Function]}
                          openToYearSelection={false}
                          style={Object {}}
                        />,
                        undefined,
                      ],
                      "className": "input-field col s6",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "autoOk": true,
                          "container": "dialog",
                          "disableYearSelection": false,
                          "disabled": false,
                          "firstDayOfWeek": 1,
                          "floatingLabelText": "Start Date",
                          "hideCalendarDate": false,
                          "id": "eventStartDate",
                          "name": "startDate",
                          "onChange": [Function],
                          "openToYearSelection": false,
                          "style": Object {},
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      undefined,
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <DatePicker
                          autoOk={true}
                          container="dialog"
                          disableYearSelection={false}
                          disabled={false}
                          firstDayOfWeek={1}
                          floatingLabelText="End Date"
                          hideCalendarDate={false}
                          id="eventEndDate"
                          name="endDate"
                          onChange={[Function]}
                          openToYearSelection={false}
                          style={Object {}}
                        />,
                        undefined,
                      ],
                      "className": "input-field col s6",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "autoOk": true,
                          "container": "dialog",
                          "disableYearSelection": false,
                          "disabled": false,
                          "firstDayOfWeek": 1,
                          "floatingLabelText": "End Date",
                          "hideCalendarDate": false,
                          "id": "eventEndDate",
                          "name": "endDate",
                          "onChange": [Function],
                          "openToYearSelection": false,
                          "style": Object {},
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      undefined,
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="input-field col s12"
                  >
                    <label
                      htmlFor="description"
                    >
                      Description
                    </label>
                    <textarea
                      className="materialize-textarea validate"
                      id="eventDescription"
                      name="description"
                      onChange={[Function]}
                      required={true}
                      type="text"
                      value="we put the goog in the good life"
                    />
                  </div>,
                  "className": "row",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        htmlFor="description"
                      >
                        Description
                      </label>,
                      <textarea
                        className="materialize-textarea validate"
                        id="eventDescription"
                        name="description"
                        onChange={[Function]}
                        required={true}
                        type="text"
                        value="we put the goog in the good life"
                      />,
                      undefined,
                    ],
                    "className": "input-field col s12",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Description",
                        "htmlFor": "description",
                      },
                      "ref": null,
                      "rendered": "Description",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "materialize-textarea validate",
                        "id": "eventDescription",
                        "name": "description",
                        "onChange": [Function],
                        "required": true,
                        "type": "text",
                        "value": "we put the goog in the good life",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "textarea",
                    },
                    undefined,
                  ],
                  "type": "div",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="input-field col s12"
                  >
                    <Toggle
                      defaultToggled={false}
                      disabled={false}
                      label="Do you want this event to be private?"
                      labelPosition="left"
                      labelStyle={
                        Object {
                          "color": "green",
                        }
                      }
                      name="private"
                      onToggle={[Function]}
                    />
                  </div>,
                  "className": "row",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Toggle
                      defaultToggled={false}
                      disabled={false}
                      label="Do you want this event to be private?"
                      labelPosition="left"
                      labelStyle={
                        Object {
                          "color": "green",
                        }
                      }
                      name="private"
                      onToggle={[Function]}
                    />,
                    "className": "input-field col s12",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "defaultToggled": false,
                      "disabled": false,
                      "label": "Do you want this event to be private?",
                      "labelPosition": "left",
                      "labelStyle": Object {
                        "color": "green",
                      },
                      "name": "private",
                      "onToggle": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": "div",
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <RaisedButton
            disabled={false}
            fullWidth={false}
            id="openBookCenter"
            label="Book this center"
            labelPosition="after"
            onClick={[Function]}
            primary={true}
            secondary={false}
          />,
          <Dialog
            actions={
              Array [
                <FlatButton
                  disabled={false}
                  fullWidth={false}
                  id="closeBookCenter"
                  label="Cancel"
                  labelPosition="after"
                  labelStyle={Object {}}
                  onClick={[Function]}
                  onKeyboardFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onTouchStart={[Function]}
                  primary={true}
                  secondary={false}
                />,
                <FlatButton
                  disabled={false}
                  fullWidth={false}
                  id="submitEvent"
                  keyboardFocused={true}
                  label="Add Event"
                  labelPosition="after"
                  labelStyle={Object {}}
                  onClick={[Function]}
                  onKeyboardFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onTouchStart={[Function]}
                  primary={true}
                  secondary={false}
                />,
              ]
            }
            autoDetectWindowHeight={true}
            autoScrollBodyContent={true}
            id="creatEventModal"
            modal={false}
            onRequestClose={[Function]}
            open={false}
            repositionOnUpdate={true}
            style={
              Object {
                "marginTop": "0px",
              }
            }
            title="Edit Event"
          >
            <div
              className="row"
              style={
                Object {
                  "marginTop": "20px",
                }
              }
            >
              <form
                className="col s12"
                id="add-event-form"
              >
                <div
                  className="row"
                >
                  <div
                    className="col s6"
                  >
                    <div
                      className="file-field input-field"
                    >
                      <div
                        className="btn"
                      >
                        <span>
                          Upload
                        </span>
                        <input
                          accept="image/jpeg,jpg,png,gif"
                          name="img_url"
                          onChange={[Function]}
                          type="file"
                        />
                      </div>
                      <div
                        className="file-path-wrapper"
                      >
                        <input
                          className="file-path validate"
                          placeholder="Upload an image here"
                          type="text"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    className="input-field col s6"
                  >
                    <InputForm
                      error=""
                      id="event_title"
                      label="Title"
                      nameField="title"
                      onChange={[Function]}
                      type="text"
                      value="we put the goog in the good life"
                    />
                  </div>
                </div>
                <div
                  className="row"
                >
                  <div
                    className="input-field col s6"
                  >
                    <DatePicker
                      autoOk={true}
                      container="dialog"
                      disableYearSelection={false}
                      disabled={false}
                      firstDayOfWeek={1}
                      floatingLabelText="Start Date"
                      hideCalendarDate={false}
                      id="eventStartDate"
                      name="startDate"
                      onChange={[Function]}
                      openToYearSelection={false}
                      style={Object {}}
                    />
                  </div>
                  <div
                    className="input-field col s6"
                  >
                    <DatePicker
                      autoOk={true}
                      container="dialog"
                      disableYearSelection={false}
                      disabled={false}
                      firstDayOfWeek={1}
                      floatingLabelText="End Date"
                      hideCalendarDate={false}
                      id="eventEndDate"
                      name="endDate"
                      onChange={[Function]}
                      openToYearSelection={false}
                      style={Object {}}
                    />
                  </div>
                </div>
                <div
                  className="row"
                >
                  <div
                    className="input-field col s12"
                  >
                    <label
                      htmlFor="description"
                    >
                      Description
                    </label>
                    <textarea
                      className="materialize-textarea validate"
                      id="eventDescription"
                      name="description"
                      onChange={[Function]}
                      required={true}
                      type="text"
                      value="we put the goog in the good life"
                    />
                  </div>
                </div>
                <div
                  className="row"
                >
                  <div
                    className="input-field col s12"
                  >
                    <Toggle
                      defaultToggled={false}
                      disabled={false}
                      label="Do you want this event to be private?"
                      labelPosition="left"
                      labelStyle={
                        Object {
                          "color": "green",
                        }
                      }
                      name="private"
                      onToggle={[Function]}
                    />
                  </div>
                </div>
              </form>
            </div>
          </Dialog>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": false,
            "fullWidth": false,
            "id": "openBookCenter",
            "label": "Book this center",
            "labelPosition": "after",
            "onClick": [Function],
            "primary": true,
            "secondary": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "actions": Array [
              <FlatButton
                disabled={false}
                fullWidth={false}
                id="closeBookCenter"
                label="Cancel"
                labelPosition="after"
                labelStyle={Object {}}
                onClick={[Function]}
                onKeyboardFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                primary={true}
                secondary={false}
              />,
              <FlatButton
                disabled={false}
                fullWidth={false}
                id="submitEvent"
                keyboardFocused={true}
                label="Add Event"
                labelPosition="after"
                labelStyle={Object {}}
                onClick={[Function]}
                onKeyboardFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                primary={true}
                secondary={false}
              />,
            ],
            "autoDetectWindowHeight": true,
            "autoScrollBodyContent": true,
            "children": <div
              className="row"
              style={
                Object {
                  "marginTop": "20px",
                }
              }
            >
              <form
                className="col s12"
                id="add-event-form"
              >
                <div
                  className="row"
                >
                  <div
                    className="col s6"
                  >
                    <div
                      className="file-field input-field"
                    >
                      <div
                        className="btn"
                      >
                        <span>
                          Upload
                        </span>
                        <input
                          accept="image/jpeg,jpg,png,gif"
                          name="img_url"
                          onChange={[Function]}
                          type="file"
                        />
                      </div>
                      <div
                        className="file-path-wrapper"
                      >
                        <input
                          className="file-path validate"
                          placeholder="Upload an image here"
                          type="text"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    className="input-field col s6"
                  >
                    <InputForm
                      error=""
                      id="event_title"
                      label="Title"
                      nameField="title"
                      onChange={[Function]}
                      type="text"
                      value="we put the goog in the good life"
                    />
                  </div>
                </div>
                <div
                  className="row"
                >
                  <div
                    className="input-field col s6"
                  >
                    <DatePicker
                      autoOk={true}
                      container="dialog"
                      disableYearSelection={false}
                      disabled={false}
                      firstDayOfWeek={1}
                      floatingLabelText="Start Date"
                      hideCalendarDate={false}
                      id="eventStartDate"
                      name="startDate"
                      onChange={[Function]}
                      openToYearSelection={false}
                      style={Object {}}
                    />
                  </div>
                  <div
                    className="input-field col s6"
                  >
                    <DatePicker
                      autoOk={true}
                      container="dialog"
                      disableYearSelection={false}
                      disabled={false}
                      firstDayOfWeek={1}
                      floatingLabelText="End Date"
                      hideCalendarDate={false}
                      id="eventEndDate"
                      name="endDate"
                      onChange={[Function]}
                      openToYearSelection={false}
                      style={Object {}}
                    />
                  </div>
                </div>
                <div
                  className="row"
                >
                  <div
                    className="input-field col s12"
                  >
                    <label
                      htmlFor="description"
                    >
                      Description
                    </label>
                    <textarea
                      className="materialize-textarea validate"
                      id="eventDescription"
                      name="description"
                      onChange={[Function]}
                      required={true}
                      type="text"
                      value="we put the goog in the good life"
                    />
                  </div>
                </div>
                <div
                  className="row"
                >
                  <div
                    className="input-field col s12"
                  >
                    <Toggle
                      defaultToggled={false}
                      disabled={false}
                      label="Do you want this event to be private?"
                      labelPosition="left"
                      labelStyle={
                        Object {
                          "color": "green",
                        }
                      }
                      name="private"
                      onToggle={[Function]}
                    />
                  </div>
                </div>
              </form>
            </div>,
            "id": "creatEventModal",
            "modal": false,
            "onRequestClose": [Function],
            "open": false,
            "repositionOnUpdate": true,
            "style": Object {
              "marginTop": "0px",
            },
            "title": "Edit Event",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <form
                className="col s12"
                id="add-event-form"
              >
                <div
                  className="row"
                >
                  <div
                    className="col s6"
                  >
                    <div
                      className="file-field input-field"
                    >
                      <div
                        className="btn"
                      >
                        <span>
                          Upload
                        </span>
                        <input
                          accept="image/jpeg,jpg,png,gif"
                          name="img_url"
                          onChange={[Function]}
                          type="file"
                        />
                      </div>
                      <div
                        className="file-path-wrapper"
                      >
                        <input
                          className="file-path validate"
                          placeholder="Upload an image here"
                          type="text"
                        />
                      </div>
                    </div>
                  </div>
                  <div
                    className="input-field col s6"
                  >
                    <InputForm
                      error=""
                      id="event_title"
                      label="Title"
                      nameField="title"
                      onChange={[Function]}
                      type="text"
                      value="we put the goog in the good life"
                    />
                  </div>
                </div>
                <div
                  className="row"
                >
                  <div
                    className="input-field col s6"
                  >
                    <DatePicker
                      autoOk={true}
                      container="dialog"
                      disableYearSelection={false}
                      disabled={false}
                      firstDayOfWeek={1}
                      floatingLabelText="Start Date"
                      hideCalendarDate={false}
                      id="eventStartDate"
                      name="startDate"
                      onChange={[Function]}
                      openToYearSelection={false}
                      style={Object {}}
                    />
                  </div>
                  <div
                    className="input-field col s6"
                  >
                    <DatePicker
                      autoOk={true}
                      container="dialog"
                      disableYearSelection={false}
                      disabled={false}
                      firstDayOfWeek={1}
                      floatingLabelText="End Date"
                      hideCalendarDate={false}
                      id="eventEndDate"
                      name="endDate"
                      onChange={[Function]}
                      openToYearSelection={false}
                      style={Object {}}
                    />
                  </div>
                </div>
                <div
                  className="row"
                >
                  <div
                    className="input-field col s12"
                  >
                    <label
                      htmlFor="description"
                    >
                      Description
                    </label>
                    <textarea
                      className="materialize-textarea validate"
                      id="eventDescription"
                      name="description"
                      onChange={[Function]}
                      required={true}
                      type="text"
                      value="we put the goog in the good life"
                    />
                  </div>
                </div>
                <div
                  className="row"
                >
                  <div
                    className="input-field col s12"
                  >
                    <Toggle
                      defaultToggled={false}
                      disabled={false}
                      label="Do you want this event to be private?"
                      labelPosition="left"
                      labelStyle={
                        Object {
                          "color": "green",
                        }
                      }
                      name="private"
                      onToggle={[Function]}
                    />
                  </div>
                </div>
              </form>,
              "className": "row",
              "style": Object {
                "marginTop": "20px",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="row"
                  >
                    <div
                      className="col s6"
                    >
                      <div
                        className="file-field input-field"
                      >
                        <div
                          className="btn"
                        >
                          <span>
                            Upload
                          </span>
                          <input
                            accept="image/jpeg,jpg,png,gif"
                            name="img_url"
                            onChange={[Function]}
                            type="file"
                          />
                        </div>
                        <div
                          className="file-path-wrapper"
                        >
                          <input
                            className="file-path validate"
                            placeholder="Upload an image here"
                            type="text"
                          />
                        </div>
                      </div>
                    </div>
                    <div
                      className="input-field col s6"
                    >
                      <InputForm
                        error=""
                        id="event_title"
                        label="Title"
                        nameField="title"
                        onChange={[Function]}
                        type="text"
                        value="we put the goog in the good life"
                      />
                    </div>
                  </div>,
                  <div
                    className="row"
                  >
                    <div
                      className="input-field col s6"
                    >
                      <DatePicker
                        autoOk={true}
                        container="dialog"
                        disableYearSelection={false}
                        disabled={false}
                        firstDayOfWeek={1}
                        floatingLabelText="Start Date"
                        hideCalendarDate={false}
                        id="eventStartDate"
                        name="startDate"
                        onChange={[Function]}
                        openToYearSelection={false}
                        style={Object {}}
                      />
                    </div>
                    <div
                      className="input-field col s6"
                    >
                      <DatePicker
                        autoOk={true}
                        container="dialog"
                        disableYearSelection={false}
                        disabled={false}
                        firstDayOfWeek={1}
                        floatingLabelText="End Date"
                        hideCalendarDate={false}
                        id="eventEndDate"
                        name="endDate"
                        onChange={[Function]}
                        openToYearSelection={false}
                        style={Object {}}
                      />
                    </div>
                  </div>,
                  <div
                    className="row"
                  >
                    <div
                      className="input-field col s12"
                    >
                      <label
                        htmlFor="description"
                      >
                        Description
                      </label>
                      <textarea
                        className="materialize-textarea validate"
                        id="eventDescription"
                        name="description"
                        onChange={[Function]}
                        required={true}
                        type="text"
                        value="we put the goog in the good life"
                      />
                    </div>
                  </div>,
                  <div
                    className="row"
                  >
                    <div
                      className="input-field col s12"
                    >
                      <Toggle
                        defaultToggled={false}
                        disabled={false}
                        label="Do you want this event to be private?"
                        labelPosition="left"
                        labelStyle={
                          Object {
                            "color": "green",
                          }
                        }
                        name="private"
                        onToggle={[Function]}
                      />
                    </div>
                  </div>,
                ],
                "className": "col s12",
                "id": "add-event-form",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="col s6"
                      >
                        <div
                          className="file-field input-field"
                        >
                          <div
                            className="btn"
                          >
                            <span>
                              Upload
                            </span>
                            <input
                              accept="image/jpeg,jpg,png,gif"
                              name="img_url"
                              onChange={[Function]}
                              type="file"
                            />
                          </div>
                          <div
                            className="file-path-wrapper"
                          >
                            <input
                              className="file-path validate"
                              placeholder="Upload an image here"
                              type="text"
                            />
                          </div>
                        </div>
                      </div>,
                      <div
                        className="input-field col s6"
                      >
                        <InputForm
                          error=""
                          id="event_title"
                          label="Title"
                          nameField="title"
                          onChange={[Function]}
                          type="text"
                          value="we put the goog in the good life"
                        />
                      </div>,
                    ],
                    "className": "row",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <div
                          className="file-field input-field"
                        >
                          <div
                            className="btn"
                          >
                            <span>
                              Upload
                            </span>
                            <input
                              accept="image/jpeg,jpg,png,gif"
                              name="img_url"
                              onChange={[Function]}
                              type="file"
                            />
                          </div>
                          <div
                            className="file-path-wrapper"
                          >
                            <input
                              className="file-path validate"
                              placeholder="Upload an image here"
                              type="text"
                            />
                          </div>
                        </div>,
                        "className": "col s6",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <div
                              className="btn"
                            >
                              <span>
                                Upload
                              </span>
                              <input
                                accept="image/jpeg,jpg,png,gif"
                                name="img_url"
                                onChange={[Function]}
                                type="file"
                              />
                            </div>,
                            <div
                              className="file-path-wrapper"
                            >
                              <input
                                className="file-path validate"
                                placeholder="Upload an image here"
                                type="text"
                              />
                            </div>,
                          ],
                          "className": "file-field input-field",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                <span>
                                  Upload
                                </span>,
                                <input
                                  accept="image/jpeg,jpg,png,gif"
                                  name="img_url"
                                  onChange={[Function]}
                                  type="file"
                                />,
                              ],
                              "className": "btn",
                            },
                            "ref": null,
                            "rendered": Array [
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "children": "Upload",
                                },
                                "ref": null,
                                "rendered": "Upload",
                                "type": "span",
                              },
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "accept": "image/jpeg,jpg,png,gif",
                                  "name": "img_url",
                                  "onChange": [Function],
                                  "type": "file",
                                },
                                "ref": null,
                                "rendered": null,
                                "type": "input",
                              },
                            ],
                            "type": "div",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": <input
                                className="file-path validate"
                                placeholder="Upload an image here"
                                type="text"
                              />,
                              "className": "file-path-wrapper",
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "className": "file-path validate",
                                "placeholder": "Upload an image here",
                                "type": "text",
                              },
                              "ref": null,
                              "rendered": null,
                              "type": "input",
                            },
                            "type": "div",
                          },
                        ],
                        "type": "div",
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <InputForm
                          error=""
                          id="event_title"
                          label="Title"
                          nameField="title"
                          onChange={[Function]}
                          type="text"
                          value="we put the goog in the good life"
                        />,
                        "className": "input-field col s6",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "error": "",
                          "id": "event_title",
                          "label": "Title",
                          "nameField": "title",
                          "onChange": [Function],
                          "type": "text",
                          "value": "we put the goog in the good life",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="input-field col s6"
                      >
                        <DatePicker
                          autoOk={true}
                          container="dialog"
                          disableYearSelection={false}
                          disabled={false}
                          firstDayOfWeek={1}
                          floatingLabelText="Start Date"
                          hideCalendarDate={false}
                          id="eventStartDate"
                          name="startDate"
                          onChange={[Function]}
                          openToYearSelection={false}
                          style={Object {}}
                        />
                      </div>,
                      <div
                        className="input-field col s6"
                      >
                        <DatePicker
                          autoOk={true}
                          container="dialog"
                          disableYearSelection={false}
                          disabled={false}
                          firstDayOfWeek={1}
                          floatingLabelText="End Date"
                          hideCalendarDate={false}
                          id="eventEndDate"
                          name="endDate"
                          onChange={[Function]}
                          openToYearSelection={false}
                          style={Object {}}
                        />
                      </div>,
                    ],
                    "className": "row",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <DatePicker
                            autoOk={true}
                            container="dialog"
                            disableYearSelection={false}
                            disabled={false}
                            firstDayOfWeek={1}
                            floatingLabelText="Start Date"
                            hideCalendarDate={false}
                            id="eventStartDate"
                            name="startDate"
                            onChange={[Function]}
                            openToYearSelection={false}
                            style={Object {}}
                          />,
                          undefined,
                        ],
                        "className": "input-field col s6",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "autoOk": true,
                            "container": "dialog",
                            "disableYearSelection": false,
                            "disabled": false,
                            "firstDayOfWeek": 1,
                            "floatingLabelText": "Start Date",
                            "hideCalendarDate": false,
                            "id": "eventStartDate",
                            "name": "startDate",
                            "onChange": [Function],
                            "openToYearSelection": false,
                            "style": Object {},
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        undefined,
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <DatePicker
                            autoOk={true}
                            container="dialog"
                            disableYearSelection={false}
                            disabled={false}
                            firstDayOfWeek={1}
                            floatingLabelText="End Date"
                            hideCalendarDate={false}
                            id="eventEndDate"
                            name="endDate"
                            onChange={[Function]}
                            openToYearSelection={false}
                            style={Object {}}
                          />,
                          undefined,
                        ],
                        "className": "input-field col s6",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "autoOk": true,
                            "container": "dialog",
                            "disableYearSelection": false,
                            "disabled": false,
                            "firstDayOfWeek": 1,
                            "floatingLabelText": "End Date",
                            "hideCalendarDate": false,
                            "id": "eventEndDate",
                            "name": "endDate",
                            "onChange": [Function],
                            "openToYearSelection": false,
                            "style": Object {},
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        undefined,
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="input-field col s12"
                    >
                      <label
                        htmlFor="description"
                      >
                        Description
                      </label>
                      <textarea
                        className="materialize-textarea validate"
                        id="eventDescription"
                        name="description"
                        onChange={[Function]}
                        required={true}
                        type="text"
                        value="we put the goog in the good life"
                      />
                    </div>,
                    "className": "row",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <label
                          htmlFor="description"
                        >
                          Description
                        </label>,
                        <textarea
                          className="materialize-textarea validate"
                          id="eventDescription"
                          name="description"
                          onChange={[Function]}
                          required={true}
                          type="text"
                          value="we put the goog in the good life"
                        />,
                        undefined,
                      ],
                      "className": "input-field col s12",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Description",
                          "htmlFor": "description",
                        },
                        "ref": null,
                        "rendered": "Description",
                        "type": "label",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "className": "materialize-textarea validate",
                          "id": "eventDescription",
                          "name": "description",
                          "onChange": [Function],
                          "required": true,
                          "type": "text",
                          "value": "we put the goog in the good life",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "textarea",
                      },
                      undefined,
                    ],
                    "type": "div",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="input-field col s12"
                    >
                      <Toggle
                        defaultToggled={false}
                        disabled={false}
                        label="Do you want this event to be private?"
                        labelPosition="left"
                        labelStyle={
                          Object {
                            "color": "green",
                          }
                        }
                        name="private"
                        onToggle={[Function]}
                      />
                    </div>,
                    "className": "row",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Toggle
                        defaultToggled={false}
                        disabled={false}
                        label="Do you want this event to be private?"
                        labelPosition="left"
                        labelStyle={
                          Object {
                            "color": "green",
                          }
                        }
                        name="private"
                        onToggle={[Function]}
                      />,
                      "className": "input-field col s12",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "defaultToggled": false,
                        "disabled": false,
                        "label": "Do you want this event to be private?",
                        "labelPosition": "left",
                        "labelStyle": Object {
                          "color": "green",
                        },
                        "name": "private",
                        "onToggle": [Function],
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                  "type": "div",
                },
              ],
              "type": "form",
            },
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
