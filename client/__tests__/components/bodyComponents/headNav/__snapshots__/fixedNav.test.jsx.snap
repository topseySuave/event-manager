// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FixedNav component component should mount 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FixedNav
    activeState={
      Object {
        "isAuthenticated": true,
        "user": Object {
          "lastName": "thomas",
        },
      }
    }
    history={
      Object {
        "push": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "iconElementRight": <UNDEFINED>
        <List
          style={
            Object {
              "display": "flex",
              "flexDirection": "row",
              "padding": 0,
            }
          }
        >
          <IconButton
            disableTouchRipple={false}
            disabled={false}
            iconStyle={Object {}}
            id="search__view"
            onClick={[Function]}
            tooltip="search"
            tooltipPosition="bottom-center"
            touch={false}
          >
            <ActionSearch
              color="#FFFFFF"
            />
          </IconButton>
          <ListItem
            autoGenerateNestedIndicator={true}
            containerElement={
              <Link
                replace={false}
                to="/centers"
              />
            }
            disableKeyboardFocus={false}
            disabled={false}
            initiallyOpen={false}
            insetChildren={false}
            nestedItems={Array []}
            nestedLevel={0}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onNestedListToggle={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            open={null}
            primaryText="list of centers"
            primaryTogglesNestedList={false}
            secondaryTextLines={1}
            style={
              Object {
                "color": "#FFFFFF",
              }
            }
          />
          <UNDEFINED>
            <IconMenu
              anchorOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
              animated={true}
              clickCloseDelay={200}
              iconButtonElement={
                <IconButton
                  disableTouchRipple={false}
                  disabled={false}
                  iconStyle={Object {}}
                  id="accountBtn"
                  tooltipPosition="bottom-center"
                  touch={false}
                >
                  <ActionAccountCircle
                    color="white"
                  />
                </IconButton>
              }
              multiple={false}
              onClick={[Function]}
              onItemClick={[Function]}
              onKeyboardFocus={[Function]}
              onMouseDown={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onMouseUp={[Function]}
              onRequestChange={[Function]}
              open={null}
              targetOrigin={
                Object {
                  "horizontal": "left",
                  "vertical": "top",
                }
              }
              useLayerForClickAway={false}
            >
              <MenuItem
                anchorOrigin={
                  Object {
                    "horizontal": "right",
                    "vertical": "top",
                  }
                }
                checked={false}
                desktop={false}
                disabled={false}
                focusState="none"
                insetChildren={false}
                primaryText="Hello thomas"
                targetOrigin={
                  Object {
                    "horizontal": "left",
                    "vertical": "top",
                  }
                }
              />
              <MenuItem
                anchorOrigin={
                  Object {
                    "horizontal": "right",
                    "vertical": "top",
                  }
                }
                checked={false}
                containerElement={
                  <Link
                    replace={false}
                    to="/my-events"
                  />
                }
                desktop={false}
                disabled={false}
                focusState="none"
                insetChildren={false}
                primaryText="My Events"
                targetOrigin={
                  Object {
                    "horizontal": "left",
                    "vertical": "top",
                  }
                }
              />
              <Divider
                inset={false}
              />
              <MenuItem
                anchorOrigin={
                  Object {
                    "horizontal": "right",
                    "vertical": "top",
                  }
                }
                checked={false}
                containerElement={
                  <Link
                    replace={false}
                    to="/signout"
                  />
                }
                desktop={false}
                disabled={false}
                focusState="none"
                id="signOutBtn"
                insetChildren={false}
                primaryText="sign out"
                targetOrigin={
                  Object {
                    "horizontal": "left",
                    "vertical": "top",
                  }
                }
              />
            </IconMenu>
          </UNDEFINED>
        </List>
      </UNDEFINED>,
      "showMenuIconButton": false,
      "style": Object {
        "backgroundImage": "linear-gradient(to left, #4884b3, #90ec92)",
        "position": "fixed",
      },
      "title": <Link
        className="brand-logo"
        href="/"
        replace={false}
        style={
          Object {
            "color": "#FFFFFF",
          }
        }
        to="/"
      >
        <img
          alt="brand-logo"
          src="/image/logo2.png"
          style={
            Object {
              "backgroundPosition": "60%",
              "backgroundRepeat": "no-repeat",
              "backgroundSize": "contain",
              "width": "250px",
            }
          }
        />
      </Link>,
      "zDepth": 1,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "iconElementRight": <UNDEFINED>
          <List
            style={
              Object {
                "display": "flex",
                "flexDirection": "row",
                "padding": 0,
              }
            }
          >
            <IconButton
              disableTouchRipple={false}
              disabled={false}
              iconStyle={Object {}}
              id="search__view"
              onClick={[Function]}
              tooltip="search"
              tooltipPosition="bottom-center"
              touch={false}
            >
              <ActionSearch
                color="#FFFFFF"
              />
            </IconButton>
            <ListItem
              autoGenerateNestedIndicator={true}
              containerElement={
                <Link
                  replace={false}
                  to="/centers"
                />
              }
              disableKeyboardFocus={false}
              disabled={false}
              initiallyOpen={false}
              insetChildren={false}
              nestedItems={Array []}
              nestedLevel={0}
              onKeyboardFocus={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              onNestedListToggle={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              open={null}
              primaryText="list of centers"
              primaryTogglesNestedList={false}
              secondaryTextLines={1}
              style={
                Object {
                  "color": "#FFFFFF",
                }
              }
            />
            <UNDEFINED>
              <IconMenu
                anchorOrigin={
                  Object {
                    "horizontal": "left",
                    "vertical": "top",
                  }
                }
                animated={true}
                clickCloseDelay={200}
                iconButtonElement={
                  <IconButton
                    disableTouchRipple={false}
                    disabled={false}
                    iconStyle={Object {}}
                    id="accountBtn"
                    tooltipPosition="bottom-center"
                    touch={false}
                  >
                    <ActionAccountCircle
                      color="white"
                    />
                  </IconButton>
                }
                multiple={false}
                onClick={[Function]}
                onItemClick={[Function]}
                onKeyboardFocus={[Function]}
                onMouseDown={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onRequestChange={[Function]}
                open={null}
                targetOrigin={
                  Object {
                    "horizontal": "left",
                    "vertical": "top",
                  }
                }
                useLayerForClickAway={false}
              >
                <MenuItem
                  anchorOrigin={
                    Object {
                      "horizontal": "right",
                      "vertical": "top",
                    }
                  }
                  checked={false}
                  desktop={false}
                  disabled={false}
                  focusState="none"
                  insetChildren={false}
                  primaryText="Hello thomas"
                  targetOrigin={
                    Object {
                      "horizontal": "left",
                      "vertical": "top",
                    }
                  }
                />
                <MenuItem
                  anchorOrigin={
                    Object {
                      "horizontal": "right",
                      "vertical": "top",
                    }
                  }
                  checked={false}
                  containerElement={
                    <Link
                      replace={false}
                      to="/my-events"
                    />
                  }
                  desktop={false}
                  disabled={false}
                  focusState="none"
                  insetChildren={false}
                  primaryText="My Events"
                  targetOrigin={
                    Object {
                      "horizontal": "left",
                      "vertical": "top",
                    }
                  }
                />
                <Divider
                  inset={false}
                />
                <MenuItem
                  anchorOrigin={
                    Object {
                      "horizontal": "right",
                      "vertical": "top",
                    }
                  }
                  checked={false}
                  containerElement={
                    <Link
                      replace={false}
                      to="/signout"
                    />
                  }
                  desktop={false}
                  disabled={false}
                  focusState="none"
                  id="signOutBtn"
                  insetChildren={false}
                  primaryText="sign out"
                  targetOrigin={
                    Object {
                      "horizontal": "left",
                      "vertical": "top",
                    }
                  }
                />
              </IconMenu>
            </UNDEFINED>
          </List>
        </UNDEFINED>,
        "showMenuIconButton": false,
        "style": Object {
          "backgroundImage": "linear-gradient(to left, #4884b3, #90ec92)",
          "position": "fixed",
        },
        "title": <Link
          className="brand-logo"
          href="/"
          replace={false}
          style={
            Object {
              "color": "#FFFFFF",
            }
          }
          to="/"
        >
          <img
            alt="brand-logo"
            src="/image/logo2.png"
            style={
              Object {
                "backgroundPosition": "60%",
                "backgroundRepeat": "no-repeat",
                "backgroundSize": "contain",
                "width": "250px",
              }
            }
          />
        </Link>,
        "zDepth": 1,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
