{"version":3,"sources":["webpack:///./client/src/components/centerComponent/centerDetail/centerDetail.jsx"],"names":["CenterDetail","props","state","isLoading","openAlert","open","activeCenter","centr","title","handleOpen","bind","handleClose","handleAlertOpen","handleAlertClose","params","fetchCenterAction","id","newProps","activeCenterDetail","events","setState","editCenterRequestAction","isAdmin","activeUser","user","role","actions","marginTop","isSignedIn","isAuthenticated","deleteCenterRequest","then","data","type","window","history","back","deleteCenter","facilities","map","generate","facility","img_url","location","description","capacity","price","relatedCenterBasedOn","event","center","minHeight","renderFacilities","showEditCenterButton","showAlertModal","showBookCenterButton","propTypes","object","isRequired","mapStateToProps","authReducer","mapDispatchToProps","dispatch"],"mappings":"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","file":"./hot/hot-update.js","sourcesContent":["import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport shortid from 'shortid';\nimport DocumentTitle from 'react-document-title';\n\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport EditIcon from 'material-ui/svg-icons/editor/mode-edit';\nimport Delete from 'material-ui/svg-icons/action/delete';\n\nimport { CircularLoader } from '../../loader';\nimport { fetchCenterAction, editCenterRequestAction } from '../../../actions/center-actions/activeCenterAction';\nimport { deleteCenterRequest } from '../../../actions/center-actions/deleteCenterAction';\nimport { REMOVE_CENTER } from '../../../actions';\nimport CurrentEventForCenter from './currentEventForCenter';\nimport RecommCenter from './RecommCenter';\nimport EventModal from '../../modals/EventModal';\nimport EditCenterForm from '../../modals/centerModalForms/editCenterForm';\n\nclass CenterDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      openAlert: false,\n      open: false,\n      activeCenter: {\n        centr: {\n          title: 'center'\n        }\n      }\n    };\n\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleAlertOpen = this.handleAlertOpen.bind(this);\n    this.handleAlertClose = this.handleAlertClose.bind(this);\n  }\n\n  componentWillMount() {\n    const { params } = this.props;\n    this.props.fetchCenterAction(params.id);\n  }\n\n  /* *\n     * TODO: modify center details component to update and change the redux store in respond to route change\n     * * */\n  componentWillReceiveProps(newProps) {\n    // const params = this.props.params;\n    // this.props.fetchCenterAction(params.id);\n    if (newProps.activeCenterDetail) {\n      newProps.activeCenterDetail.centr.events = newProps.activeCenterDetail.events;\n      if (newProps.activeCenterDetail.centr.events) {\n        delete newProps.activeCenterDetail.events;\n      }\n      this.setState({ isLoading: false, activeCenter: newProps.activeCenterDetail });\n    }\n  }\n\n  editCenter() {\n    this.props.editCenterRequestAction();\n  }\n\n  handleOpen() {\n    this.props.editCenterRequestAction();\n    this.setState({ open: true });\n  }\n\n  handleClose() {\n    this.setState({ open: false });\n  }\n\n  handleAlertOpen() {\n    this.setState({ openAlert: true });\n  }\n\n  handleAlertClose() {\n    this.setState({ openAlert: false });\n  }\n\n  showEditCenterButton() {\n    let isAdmin = this.props.activeUser.user.role;\n    const actions = [\n      <FlatButton\n        label=\"Cancel\"\n        primary\n        onClick={this.handleClose}\n      />\n    ];\n\n    if (isAdmin) {\n      return (\n        <div>\n          <FlatButton\n            label=\"Edit center\"\n            icon={<EditIcon />}\n            onClick={this.handleOpen}\n            fullWidth\n          />\n          <Dialog\n            title=\"Edit Center\"\n            actions={actions}\n            modal={false}\n            open={this.state.open}\n            onRequestClose={this.handleClose}\n            autoScrollBodyContent\n            style={{ marginTop: '0px' }}\n          >\n            <EditCenterForm />\n          </Dialog>\n        </div>\n      );\n    }\n  }\n\n  showBookCenterButton() {\n    let isSignedIn = this.props.activeUser.isAuthenticated;\n    if (isSignedIn) {\n      return (\n        <EventModal />\n      );\n    }\n  }\n\n  deleteCenter(id) {\n    this.props.deleteCenterRequest(id)\n      .then((data) => {\n        if (data.type === REMOVE_CENTER) {\n          window.history.back();\n        }\n      });\n  }\n\n  showAlertModal(id) {\n    let isAdmin = this.props.activeUser.user.role;\n    const actions = [\n      <FlatButton\n        label=\"Yes\"\n        primary\n        onClick={() => this.deleteCenter(id)}\n      />,\n      <FlatButton\n        label=\"No\"\n        primary\n        onClick={() => this.handleAlertClose()}\n      />,\n    ];\n\n    if (isAdmin) {\n      return (\n        <div>\n          <FlatButton\n            label=\"Delete this center\"\n            secondary\n            icon={<Delete />}\n            onClick={this.handleAlertOpen}\n          />\n          <Dialog\n            actions={actions}\n            modal={false}\n            open={this.state.openAlert}\n            onRequestClose={this.handleAlertClose}\n          >\n                        Are you sure you want to delete this event?\n          </Dialog>\n        </div>\n      );\n    }\n  }\n\n  renderFacilities(facilities) {\n    return facilities.map(facility => (\n      <li key={shortid.generate()}>{facility}</li>\n    ));\n  }\n\n  render() {\n    let { isLoading, activeCenter } = this.state;\n    if (activeCenter.centr) {\n      let {\n        id, title, img_url, location, description, facilities, capacity, price, events\n      } = activeCenter.centr;\n\n      let relatedCenterBasedOn = {\n        id,\n        location,\n        facilities,\n        capacity,\n        price\n      };\n      if (events) {\n        events.map((event) => {\n          event.center = relatedCenterBasedOn;\n        });\n      }\n      return (\n        <DocumentTitle title={`${title} | Boots Events Manager`}>\n          <div className=\"container\">\n            <div className=\"center__holdr\" style={{ minHeight: '560px'}}>\n              <div className=\"row\">\n                <div className=\"col s12 l8\">\n                  { isLoading && <CircularLoader /> }\n                  { !isLoading &&\n                  <div className=\"center__details\" data-center-id={id}>\n                    <h4>{title}</h4>\n                    <div className=\"slider__holdr\">\n                      <div className=\"carousel carousel-slider\">\n                        <a className=\"carousel-item\" href=\"#one\"><img src={img_url} alt={title} /></a>\n                      </div>\n                    </div>\n                    <p><i className=\"material-icons f15\">location_on</i> {location}</p>\n                    <div className=\"divider\" />\n                    <section>\n                      <h5>About this Center</h5>\n                      <p>{description}</p>\n                      <div className=\"divider\" />\n                      <div className=\"row\">\n                        <div className=\"col s4\">\n                          <p>Capacity</p>\n                        </div>\n                        <div className=\"col s8\">\n                          <p>{capacity}</p>\n                        </div>\n                      </div>\n                      <div className=\"divider\" />\n                      <div className=\"row\">\n                        <div className=\"col s4\">\n                          <p>Price</p>\n                        </div>\n                        <div className=\"col s8\">\n                          <p><span>₦{price}</span> per event</p>\n                        </div>\n                      </div>\n                      <div className=\"divider\" />\n                      <div className=\"row\">\n                        <div className=\"col s4\">\n                          <p>Facilities</p>\n                        </div>\n                        <div className=\"col s8\">\n                          <ul className=\"facility__list\">\n                            {this.renderFacilities(facilities)}\n                          </ul>\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col s3\">{ this.showEditCenterButton() }</div>\n                        <div className=\"col s5\">{ this.showAlertModal(id) }</div>\n                        <div className=\"col s4\">{ this.showBookCenterButton() }</div>\n                      </div>\n                    </section>\n                  </div>\n                                    }\n                </div>\n                <CurrentEventForCenter event={events} />\n              </div>\n              <RecommCenter relatedCenterBasedOn={relatedCenterBasedOn} />\n            </div>\n          </div>\n        </DocumentTitle>\n      );\n    }\n    return '';\n  }\n}\n\nCenterDetail.propTypes = {\n  params: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  activeCenterDetail: state.activeCenter,\n  activeUser: state.authReducer\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchCenterAction,\n  editCenterRequestAction,\n  deleteCenterRequest\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CenterDetail);\n\n\n\n// WEBPACK FOOTER //\n// ./client/src/components/centerComponent/centerDetail/centerDetail.jsx"],"sourceRoot":""}