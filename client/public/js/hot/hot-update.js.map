{"version":3,"file":"./hot/hot-update.js","sources":["webpack:///client/src/components/centerComponent/centerDetail/centerDetail.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport shortid from 'shortid';\nimport DocumentTitle from 'react-document-title';\n\nimport Dialog from 'material-ui/Dialog';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport FlatButton from 'material-ui/FlatButton';\nimport EditIcon from 'material-ui/svg-icons/editor/mode-edit';\nimport Delete from 'material-ui/svg-icons/action/delete';\n\nimport { CircularLoader } from '../../loader';\nimport {\n  fetchCenterAction,\n  editCenterRequestAction\n} from '../../../actions/center-actions/activeCenterAction';\nimport { deleteCenterRequest } from '../../../actions/center-actions/deleteCenterAction';\nimport CurrentEventForCenter from './currentEventForCenter';\nimport RecommCenter from './RecommCenter';\nimport EventModal from '../../modals/EventModal';\nimport EditCenterForm from '../../modals/centerModalForms/editCenterForm';\nimport { fetchCenterRelatedTo } from '../../../actions/center-actions/fetchCenterRelatedTo';\nimport { handleStatusEventAction } from '../../../actions/events-actions';\nimport Helpers from '../../../helpers/';\n\nconst helpers = new Helpers();\n\n/**\n * CenterDetail Class Component\n * */\nclass CenterDetail extends Component {\n  /**\n   * Class constructor\n   * @param { object } props\n   * */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      openAlert: false,\n      open: false,\n      isAdmin: false,\n      activeCenter: {\n        centr: {\n          title: 'center'\n        }\n      }\n    };\n\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleAlertOpen = this.handleAlertOpen.bind(this);\n    this.handleAlertClose = this.handleAlertClose.bind(this);\n  }\n\n  /**\n   * componentDidMount Method\n   * @returns { void }\n   * */\n  componentDidMount() {\n    $('.modal').modal('close');\n    $('.tooltipped').tooltip({ delay: 50 });\n    const { params } = this.props;\n    this.props.fetchCenterAction(params.id);\n    if (this.props.activeUser.user.role) {\n      this.setState({ isAdmin: this.props.activeUser.user.role });\n    }\n  }\n\n  /**\n   * componentWillReceiveProps Method\n   * @param { object } newProps\n   * @returns { void }\n   * */\n  componentWillReceiveProps(newProps) {\n    let centerDetails = newProps.activeCenterDetail;\n    if (centerDetails.eventStatusChange) location.reload();\n\n    if (this.props.params.id !== newProps.params.id) {\n      newProps.fetchCenterAction(newProps.params.id);\n    }\n\n    if (typeof centerDetails.center !== 'undefined') {\n      if (centerDetails.events) {\n        centerDetails.center.events = centerDetails.events;\n        delete centerDetails.events;\n      }\n      this.setState({\n        isLoading: false,\n        activeCenter: centerDetails\n      });\n    }\n  }\n\n  /**\n   * editCenter Method\n   * @returns { void }\n   * */\n  editCenter() {\n    this.props.editCenterRequestAction();\n  }\n\n  /**\n   * handleOpen Method\n   * @returns { void }\n   * */\n  handleOpen() {\n    this.props.editCenterRequestAction();\n    this.setState({ open: true });\n  }\n\n  /**\n   * handleClose Method\n   * @returns { void }\n   * */\n  handleClose() {\n    this.setState({ open: false });\n  }\n\n  /**\n   * handleAlertOpen Method\n   * @returns { void }\n   * */\n  handleAlertOpen() {\n    this.setState({ openAlert: true });\n  }\n\n  /**\n   * handleAlertClose Method\n   * @returns { void }\n   * */\n  handleAlertClose() {\n    this.setState({ openAlert: false });\n  }\n\n  /**\n   * showEditCenterButton Method\n   * @returns { Component }\n   * */\n  showEditCenterButton() {\n    const actions = [\n      <FlatButton label=\"Cancel\" primary onClick={this.handleClose} />\n    ];\n\n    if (this.state.isAdmin) {\n      return (\n        <div>\n          <FlatButton\n            label=\"Edit center\"\n            icon={<EditIcon />}\n            onClick={this.handleOpen}\n            fullWidth\n          />\n          <Dialog\n            title=\"Edit Center\"\n            actions={actions}\n            modal={false}\n            open={this.state.open}\n            onRequestClose={this.handleClose}\n            autoScrollBodyContent\n            style={{ marginTop: '0px' }}\n          >\n            <EditCenterForm history={this.props.history} />\n          </Dialog>\n        </div>\n      );\n    }\n  }\n\n  /**\n   * showBookCenterButton Method\n   * @returns { Component }\n   * */\n  showBookCenterButton() {\n    const isSignedIn = this.props.activeUser.isAuthenticated;\n    if (isSignedIn) {\n      return <EventModal />;\n    }\n  }\n\n  /**\n   * showRecommendedCenters Method\n   * @param { object } relatedCenterBasedOn\n   * @returns { Component }\n   * */\n  showRecommendedCenters(relatedCenterBasedOn) {\n    if (!this.state.isAdmin) {\n      return (\n        <RecommCenter\n          relatedCenterBasedOn={relatedCenterBasedOn}\n          fetchCenterRelatedTo={fetchCenterRelatedTo}\n        />\n      );\n    }\n  }\n\n  /**\n   * deleteCenter Method\n   * @param { string } id\n   * @returns { void }\n   * */\n  deleteCenter(id) {\n    this.props.deleteCenterRequest(id).then(() => {\n      if (typeof this.props.activeCenterDetail.center === 'undefined') {\n        Materialize.toast('Center has been Deleted', 5000, 'teal');\n        this.props.history.push('/centers');\n      }\n    });\n  }\n\n  /**\n   * showAlertModal Method\n   * @param { string } id\n   * @returns { component }\n   * */\n  showAlertModal(id) {\n    const actions = [\n      <FlatButton label=\"Yes\" primary onClick={() => this.deleteCenter(id)} />,\n      <FlatButton label=\"No\" primary onClick={() => this.handleAlertClose()} />\n    ];\n\n    if (this.state.isAdmin) {\n      return (\n        <div>\n          <FlatButton\n            label=\"Delete this center\"\n            secondary\n            icon={<Delete />}\n            onClick={this.handleAlertOpen}\n          />\n          <Dialog\n            actions={actions}\n            modal={false}\n            open={this.state.openAlert}\n            onRequestClose={this.handleAlertClose}\n          >\n            Are you sure you want to delete this event?\n          </Dialog>\n        </div>\n      );\n    }\n  }\n\n  /**\n   * renderFacilities Method\n   * @param { array } facilities\n   * @returns { component }\n   * */\n  renderFacilities(facilities) {\n    return facilities.map(facility => (\n      <li key={shortid.generate()}>{facility}</li>\n    ));\n  }\n\n  /**\n   * render Method\n   * @returns { component }\n   * */\n  render() {\n    let { isLoading, activeCenter, isAdmin } = this.state;\n    if (activeCenter.center) {\n      const {\n        id,\n        title,\n        img_url,\n        location,\n        description,\n        facilities,\n        capacity,\n        price,\n        events\n      } = activeCenter.center;\n\n      let relatedCenterBasedOn = {\n        id,\n        location,\n        facilities,\n        capacity,\n        price\n      };\n\n      return (\n        <DocumentTitle title={`${title} | Boots Events Manager`}>\n          <div className=\"container\">\n            <div className=\"center__holdr\" style={{ minHeight: '100vh' }}>\n              <div className=\"row\">\n                <div className=\"col s12 l12\">\n                  {isLoading && <CircularLoader />}\n                  {!isLoading && (\n                    <div className=\"center__details\" data-center-id={id}>\n                      <h5 style={{ fontWeight: '500' }}>{title}</h5>\n                      <div className=\"slider__holdr\">\n                        <div className=\"carousel carousel-slider\">\n                          <a className=\"carousel-item\" href=\"#one\">\n                            <img src={img_url} alt={title} />\n                          </a>\n                        </div>\n                      </div>\n                      <p>\n                        <i className=\"material-icons f15\">location_on</i>{' '}\n                        {location}\n                      </p>\n                      <div className=\"divider\" />\n                      <section>\n                        <h5>About this Center</h5>\n                        <p>{description}</p>\n                        <div className=\"divider\" />\n                        <div className=\"row\">\n                          <div className=\"col s12 l8\">\n                            <div className=\"row\">\n                              <div className=\"col s4\">\n                                <p>Capacity</p>\n                              </div>\n                              <div className=\"col s8\">\n                                <p>{capacity} Guests</p>\n                              </div>\n                            </div>\n                            <div className=\"divider\" />\n                            <div className=\"row\">\n                              <div className=\"col s4\">\n                                <p>Price</p>\n                              </div>\n                              <div className=\"col s8\">\n                                <p>\n                                  <span>â‚¦{helpers.numberWithCommas(price)}</span> per event\n                                </p>\n                              </div>\n                            </div>\n                            <div className=\"divider\" />\n                            <div className=\"row\">\n                              <div className=\"col s4\">\n                                <p>Facilities</p>\n                              </div>\n                              <div className=\"col s8\">\n                                <ul className=\"facility__list\">\n                                  {this.renderFacilities(facilities)}\n                                </ul>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col s12 l4\">\n                            <CurrentEventForCenter\n                              isAdmin={isAdmin}\n                              events={events}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col s12 l2\">\n                            {this.showEditCenterButton()}\n                          </div>\n                          <div className=\"col s12 l2\">\n                            {this.showAlertModal(id)}\n                          </div>\n                          <div className=\"col s12 l4\">\n                            {this.showBookCenterButton()}\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                  )}\n                </div>\n              </div>\n              {this.showRecommendedCenters(relatedCenterBasedOn)}\n            </div>\n          </div>\n        </DocumentTitle>\n      );\n    }\n    return '';\n  }\n}\n\nCenterDetail.propTypes = {\n  params: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  fetchCenterRelatedTo: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  activeCenterDetail: state.activeCenter,\n  activeUser: state.authReducer\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchCenterAction,\n      editCenterRequestAction,\n      deleteCenterRequest,\n      fetchCenterRelatedTo,\n      handleStatusEventAction\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CenterDetail);\n\n\n\n// WEBPACK FOOTER //\n// client/src/components/centerComponent/centerDetail/centerDetail.jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;;;;;;;AAIA;;;;AAIA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AALA;AACA;AAWA;AACA;AACA;AACA;AAlBA;AAmBA;AACA;AACA;;;;;;;;AAIA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AATA;AAPA;AAoBA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;;;;;;;;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAPA;AAiBA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AACA;;;;;;;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AADA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAJA;AAQA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AADA;AAJA;AAUA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAJA;AArBA;AAgCA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAjCA;AAwCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAPA;AA5CA;AAdA;AAHA;AADA;AA8EA;AA/EA;AADA;AADA;AAsFA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAWA;;;;;A","sourceRoot":""}