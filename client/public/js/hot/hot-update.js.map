{"version":3,"file":"./hot/hot-update.js","sources":["webpack:///client/src/components/modals/EventModal.jsx"],"sourcesContent":["/* eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport Dialog from \"material-ui/Dialog\";\nimport FlatButton from \"material-ui/FlatButton\";\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport DatePicker from \"material-ui/DatePicker\";\nimport Toggle from \"material-ui/Toggle\";\n\nimport { createEventRequest } from \"../../actions/events-actions\";\nimport InputForm from \"../../components/form/formInput\";\nimport { validateEventInput } from \"./validateInput\";\nimport { ADD_EVENT } from \"../../actions\";\nimport history from '../../util/history';\n\nconst styles = {\n  labelStyle: {\n    color: \"green\"\n  }\n};\n\nclass EventModal extends Component {\n  constructor(props) {\n    super(props);\n\n    const startDate = new Date();\n    const endDate = new Date();\n    startDate.setFullYear(startDate.getFullYear() - 1);\n    endDate.setFullYear(endDate.getFullYear() - 1);\n\n    this.state = {\n      open: false,\n      disableYearSelection: false,\n      isLoading: false,\n      errors: {},\n      editEvent: false,\n      centerId: 0,\n      userId: 0,\n      title: \"\",\n      img_url: \"\",\n      startDate: null,\n      endDate: null,\n      description: \"\",\n      private: false\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleEventSubmit = this.handleEventSubmit.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n    this.handleChangeStartDate = this.handleChangeStartDate.bind(this);\n    this.handleChangeEndDate = this.handleChangeEndDate.bind(this);\n    this.handleToggleChange = this.handleToggleChange.bind(this);\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  updateProps(newProps) {\n    if (newProps.bookedCenter) this.setState({ isLoading: false });\n    if (newProps.editEvent) {\n      let {\n        title,\n        img_url,\n        startDate,\n        endDate,\n        description\n      } = newProps.eventToEdit;\n      this.setState({\n        editEvent: true,\n        centerId: newProps.activeCenter.center.id,\n        userId: newProps.actUser.user.id,\n        title: title,\n        img_url: img_url,\n        startDate: startDate,\n        endDate: endDate,\n        description: description\n      });\n    } else {\n      this.setState({\n        centerId: newProps.activeCenter.center.id,\n        userId: newProps.actUser.user.id\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.updateProps(this.props);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.event) this.setState({ isLoading: newProps.event.isLoading });\n    if (newProps.bookedCenter) this.setState({ isLoading: false });\n    if (newProps.event.eventCreated) history.push('/my-events');\n  }\n\n  isValid() {\n    const { errors, isValid } = validateEventInput(this.state);\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  handleChangeStartDate(e, date) {\n    if (new Date(date) < new Date()) {\n      Materialize.toast(\n        \"Date isn't correct. Should be a day after today not before\",\n        5000,\n        \"red\"\n      );\n      this.setState({\n        startDate: {}\n      });\n    } else {\n      this.setState({\n        startDate: date.toDateString()\n      });\n    }\n  };\n\n  handleChangeEndDate(e, date) {\n    if (new Date(date) < new Date()) {\n      Materialize.toast(\n        \"Date isn't correct. Should be a day after today not before\",\n        5000,\n        \"red\"\n      );\n      this.setState({\n        endDate: {}\n      });\n    } else {\n      this.setState({\n        endDate: date.toDateString()\n      });\n    }\n  };\n\n  handleOpen() {\n    this.setState({ open: true });\n  };\n\n  handleClose() {\n    this.setState({ open: false });\n  };\n\n  handleInputChange(e) {\n    if (!!this.state.errors[e.target.name]) {\n      let errors = Object.assign({}, !!this.state.errors);\n      delete errors[e.target.name];\n      this.setState({\n        [e.target.name]: e.target.value,\n        errors\n      });\n    } else {\n      this.setState({ [e.target.name]: e.target.value });\n    }\n  }\n\n  handleToggleChange(e) {\n    this.setState({ private: !this.state.private });\n  }\n\n  onFileChange(e) {\n    let file = e.target.files[0];\n    if (file && file.type.indexOf(\"image/\") > -1) {\n      // only image file\n      if (file.size < 2000000) {\n        this.setState({\n          img_url: file\n        });\n      } else {\n        Materialize.toast(\"File too large\", 5000, \"red\");\n      }\n    } else {\n      Materialize.toast(\"Image files only please\", 5000, \"red\");\n    }\n  }\n\n  handleEventSubmit(e) {\n    e.preventDefault();\n    if (this.isValid()) {\n      this.setState({\n        isLoading: true\n      });\n      this.props.createEventRequest(this.state);\n    }\n  }\n\n  render() {\n    let {\n      isLoading,\n      editEvent,\n      title,\n      description,\n      endDate,\n      startDate,\n      errors\n    } = this.state;\n    const actions = [\n      <FlatButton label=\"Cancel\" primary={true} onClick={this.handleClose} />,\n      <FlatButton\n        label={\n          isLoading ? (\n            <img\n              style={{ marginTop: \"10px\" }}\n              src=\"/image/loader/loading.gif\"\n            />\n          ) : (\n            \"Add Event\"\n          )\n        }\n        primary={true}\n        keyboardFocused={true}\n        onClick={this.handleEventSubmit}\n      />\n    ];\n    return (\n      <div>\n        <RaisedButton\n          label=\"Book this center\"\n          primary={true}\n          onClick={this.handleOpen}\n        />\n        <Dialog\n          title={editEvent ? \"Edit Event\" : \"Create Event\"}\n          actions={actions}\n          modal={false}\n          open={this.state.open}\n          onRequestClose={this.handleClose}\n          autoScrollBodyContent={true}\n          style={{ marginTop: \"0px\" }}\n        >\n          <div className=\"row\" style={{ marginTop: \"20px\" }}>\n            <form className=\"col s12\" id=\"add-event-form\">\n              <div className=\"row\">\n                <div className=\"col s6\">\n                  <div className=\"file-field input-field\">\n                    <div className=\"btn\">\n                      <span>Upload</span>\n                      <input\n                        type=\"file\"\n                        name=\"img_url\"\n                        accept=\"image/jpeg,jpg,png,gif\"\n                        onChange={this.onFileChange}\n                      />\n                    </div>\n                    <div className=\"file-path-wrapper\">\n                      <input\n                        className=\"file-path validate\"\n                        type=\"text\"\n                        placeholder=\"Upload an image here\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"input-field col s6\">\n                  <InputForm\n                    type=\"text\"\n                    fieldId=\"event_title\"\n                    nameField=\"title\"\n                    label=\"Title\"\n                    value={title}\n                    error={errors.title || \"\"}\n                    onChange={this.handleInputChange}\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"input-field col s6\">\n                  <DatePicker\n                    onChange={this.handleChangeStartDate}\n                    autoOk={true}\n                    floatingLabelText=\"Start Date\"\n                    disableYearSelection={this.state.disableYearSelection}\n                  />\n                  {errors.startDate && (\n                    <span className=\"red-text accent-1\">\n                      {errors.startDate}\n                    </span>\n                  )}\n                </div>\n                <div className=\"input-field col s6\">\n                  <DatePicker\n                    onChange={this.handleChangeEndDate}\n                    autoOk={true}\n                    floatingLabelText=\"End Date\"\n                    disableYearSelection={this.state.disableYearSelection}\n                  />\n                  {errors.endDate && (\n                    <span className=\"red-text accent-1\">{errors.endDate}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"input-field col s12\">\n                  <label htmlFor=\"description\">Description</label>\n                  <textarea\n                    id=\"description\"\n                    type=\"text\"\n                    name=\"description\"\n                    className=\"materialize-textarea validate\"\n                    required\n                    onChange={this.handleInputChange}\n                    value={description}\n                  />\n                  {errors.description && (\n                    <span className=\"red-text accent-1\">\n                      {errors.description}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"input-field col s12\">\n                  <Toggle\n                    label=\"Do you want this event to be private?\"\n                    name=\"private\"\n                    defaultToggled={this.state.private}\n                    onToggle={this.handleToggleChange}\n                    labelStyle={styles.labelStyle}\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    activeCenter: state.activeCenter,\n    event: state.eventReducer,\n    actUser: state.authReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    { createEventRequest },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventModal);\n\n\n\n// WEBPACK FOOTER //\n// client/src/components/modals/EventModal.jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAhBA;AACA;AACA;AAeA;AACA;AACA;AADA;AADA;AACA;;;;AAMA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAgCA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAKA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;AAKA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAGA;AAGA;AACA;AAFA;AAQA;AACA;AACA;AAbA;AAgBA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAVA;AADA;AAoBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AArBA;AAiCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AADA;AARA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AAAA;AARA;AAdA;AA0BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AAAA;AACA;AADA;AAZA;AADA;AAmBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AA/EA;AADA;AATA;AANA;AA+GA;;;;;;AAGA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAIA;AACA;AACA;;;;;A","sourceRoot":""}