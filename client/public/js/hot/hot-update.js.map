{"version":3,"file":"./hot/hot-update.js","sources":["webpack:///client/src/components/modals/SearchModal.jsx","webpack:///client/src/components/modals/index.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport shortid from 'shortid';\nimport isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types';\nimport EventCard from '../bodyComponents/eventsCard/EventCard';\nimport CenterCard from '../centerComponent/centerCard/CenterCard';\nimport Helpers from '../../helpers';\nimport {\n  filterCenterTitle,\n  filterEventTitle\n} from '../../actions/searchAction';\n\n/**\n * SearchModal Class Component\n * */\nexport class SearchModal extends Component {\n  /**\n   * SearchModal Class Constructor\n   * @param { object } props\n   * */\n  constructor(props) {\n    super(props);\n    this.helper = new Helpers();\n    this.state = {\n      events: {},\n      centers: {}\n    };\n    this.handleSearchInput = this.handleSearchInput.bind(this);\n  }\n\n  /**\n   * componentDidMount method\n   * @returns { void }\n   * */\n  componentDidMount() {\n    let searchBackBtn = $('.search__back_btn');\n    searchBackBtn.on('click', () => {\n      $('#search__modal').modal('close');\n      $('.modal-overlay').css({ display: 'none' });\n    });\n  }\n\n  /**\n   * componentWillReceiveProps Life cycle Method\n   * @param { object } newProps\n   * @return { object }\n   * */\n  componentWillReceiveProps(newProps) {\n    if (!isEmpty(newProps.centerStore)) {\n      let { centers } = newProps.centerStore;\n      this.setState({ centers });\n    }\n    if (!isEmpty(newProps.eventStore)) {\n      let { events } = newProps.eventStore;\n      this.setState({ events });\n    }\n  }\n\n  /**\n   * handleSearchInput Method\n   * @param { object } e\n   * @return { void }\n   * */\n  handleSearchInput(e) {\n    e.preventDefault();\n    let { value } = e.target;\n    if (value.length >= 3) {\n      let titleString = { search: e.target.value };\n      this.props.filterCenterTitle(titleString);\n      this.props.filterEventTitle(titleString);\n    }\n  }\n\n  /**\n   * renderEventsCard Method\n   * @return { component }\n   * */\n  renderEventsCard() {\n    let { events } = this.state;\n    if (!isEmpty(events)) {\n      return events.map((event, index) => (\n        <EventCard key={shortid.generate()} event={event} />\n      ));\n    }\n    return <h4>No Events</h4>;\n  }\n\n  /**\n   * renderCenterCard Method\n   * @return { component }\n   * */\n  renderCenterCard() {\n    let { centers } = this.state;\n    if (!isEmpty(centers)) {\n      return centers.map((center) => {\n        let to = `/center/${center.id}/${this.helper\n          .sanitizeString(center.title)}`;\n        return (\n          <CenterCard to={to} center={center} key={shortid.generate()} />\n        );\n      });\n    }\n    return <h4>No centers</h4>;\n  }\n\n  /**\n   * render Method\n   * @return { component }\n   * */\n  render() {\n    return (\n      <div id=\"search__modal\" className=\"modal\">\n        <div className=\"search__nav z-depth-0\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col s1\">\n                <a className=\"btn btn-flat white waves-effect search__back_btn\">\n                  <i className=\"material-icons search_arrow_back_btn\">\n                    arrow_back\n                  </i>\n                </a>\n              </div>\n              <div className=\"col s11\">\n                <nav>\n                  <div className=\"nav-wrapper\">\n                    <form method=\"post\">\n                      <div className=\"input-field no-margin\">\n                        <input\n                          className=\"autocomplete\"\n                          id=\"autocomplete-input\"\n                          type=\"search\"\n                          name=\"searchInput\"\n                          onChange={this.handleSearchInput}\n                          placeholder=\"Search by Name and Location\"\n                          required\n                        />\n                        <label className=\"label-icon\" htmlFor=\"search\">\n                          <i className=\"material-icons search__label\">search</i>\n                        </label>\n                        <i className=\"material-icons white-text\">close</i>\n                      </div>\n                    </form>\n                  </div>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"search__results\">\n          <h5>Center Results</h5>\n          <div className=\"row cards-container\">{this.renderCenterCard()}</div>\n          <div className=\"divider\" />\n          <h5>Events Results</h5>\n          <div className=\"row cards-container\">{this.renderEventsCard()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchModal.propTypes = {\n  filterCenterTitle: PropTypes.func.isRequired,\n  filterEventTitle: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  centerStore: state.centerReducer,\n  eventStore: state.eventReducer\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ filterCenterTitle, filterEventTitle }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchModal);\n","import React, { Component } from 'react';\nimport EditEventModal from './eventModalForm/EditEventModal';\nimport CenterModal from './CenterModal';\nimport SearchModal from './SearchModal';\n\n/**\n * Modals Class Component\n * */\nclass Modals extends Component {\n  /**\n   * renderModal Method\n   * @return { component }\n   * */\n  renderModal() {\n    return (\n      <div id=\"add_event_modal\" className=\"modal modal-fixed-footer\">\n        <div className=\"modal-content\">\n          <h4>\n            <span>Edit</span> Event\n          </h4>\n          <EditEventModal />\n        </div>\n        <div className=\"modal-footer\">\n          <a\n            href=\"#_=_\"\n            className=\"modal-action modal-close waves-effect btn-flat\"\n          >\n            Cancel\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * render Method\n   * @return { component }\n   * */\n  render() {\n    return (\n      <div>\n        {this.renderModal()}\n        <CenterModal />\n        <SearchModal />\n      </div>\n    );\n  }\n}\n\nexport default Modals;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;AAIA;;;AAGA;;;AACA;;;;AAIA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AAQA;AACA;AACA;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAbA;AADA;AADA;AADA;AADA;AARA;AADA;AADA;AAoCA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AArCA;AA8CA;;;;;;AAGA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;AChLA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AACA;;;AAGA;;;;;;;;;;;;AACA;;;;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAGA;AAJA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AADA;AAPA;AAiBA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAMA;;;;;;AAGA;;;;;;;A","sourceRoot":""}