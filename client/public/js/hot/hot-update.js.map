{"version":3,"file":"./hot/hot-update.js","sources":["webpack:///client/src/components/centerComponent/centerDetail/centerDetail.jsx","webpack:///client/src/components/modals/EventModal.jsx","webpack:///client/src/components/modals/centerModalForms/editCenterForm.jsx","webpack:///client/src/components/centerComponent/allCenters/allCenters.jsx","webpack:///client/src/reducers/centerReducer.js","webpack:///client/src/reducers/eventReducer.js","webpack:///client/src/actions/searchAction.js","webpack:///client/src/components/bodyComponents/eventsCard/eventCard.jsx","webpack:///client/src/actions/index.js","webpack:///client/src/components/centerComponent/allCenters/searchFasterForm.jsx","webpack:///client/src/components/modals/eventModalForm/editEventModal.jsx","webpack:///client/src/actions/modalAction.js","webpack:///client/src/helpers/index.js","webpack:///client/src/actions/events-actions/index.js","webpack:///client/src/components/bodyComponents/headNav/headbanner.jsx","webpack:///client/src/components/bodyComponents/indexEventsCard.jsx","webpack:///client/src/components/modals/centerModalForms/addCenterForm.jsx","webpack:///client/src/components/modals/searchModal.jsx","webpack:///client/src/util/facilities.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport shortid from 'shortid';\nimport DocumentTitle from 'react-document-title';\n\nimport Dialog from 'material-ui/Dialog';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport FlatButton from 'material-ui/FlatButton';\nimport EditIcon from 'material-ui/svg-icons/editor/mode-edit';\nimport Delete from 'material-ui/svg-icons/action/delete';\n\nimport { CircularLoader } from '../../loader';\nimport {\n  fetchCenterAction,\n  editCenterRequestAction\n} from '../../../actions/center-actions/activeCenterAction';\nimport { deleteCenterRequest } from '../../../actions/center-actions/deleteCenterAction';\nimport CurrentEventForCenter from './currentEventForCenter';\nimport RecommCenter from './RecommCenter';\nimport EventModal from '../../modals/EventModal';\nimport EditCenterForm from '../../modals/centerModalForms/editCenterForm';\nimport { fetchCenterRelatedTo } from '../../../actions/center-actions/fetchCenterRelatedTo';\nimport { handleStatusEventAction } from '../../../actions/events-actions';\n\n/**\n * CenterDetail Class Component\n * */\nclass CenterDetail extends Component {\n  /**\n   * Class constructor\n   * @param { object } props\n   * */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      openAlert: false,\n      open: false,\n      isAdmin: false,\n      activeCenter: {\n        centr: {\n          title: 'center'\n        }\n      }\n    };\n\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleAlertOpen = this.handleAlertOpen.bind(this);\n    this.handleAlertClose = this.handleAlertClose.bind(this);\n  }\n\n  /**\n   * componentDidMount Method\n   * @returns { void }\n   * */\n  componentDidMount() {\n    $('.modal').modal('close');\n    $('.tooltipped').tooltip({ delay: 50 });\n    const { params } = this.props;\n    this.props.fetchCenterAction(params.id);\n    if (this.props.activeUser.user.role) {\n      this.setState({ isAdmin: this.props.activeUser.user.role });\n    }\n  }\n\n  /**\n   * componentWillReceiveProps Method\n   * @param { object } newProps\n   * @returns { void }\n   * */\n  componentWillReceiveProps(newProps) {\n    let centerDetails = newProps.activeCenterDetail;\n    if (centerDetails.eventStatusChange) {\n      location.reload();\n    }\n\n    if (this.props.params.id !== newProps.params.id) {\n      newProps.fetchCenterAction(newProps.params.id);\n    }\n\n    if (typeof centerDetails.center !== 'undefined') {\n      if (centerDetails.events) {\n        centerDetails.center.events = centerDetails.events;\n        delete centerDetails.events;\n      }\n      this.setState({\n        isLoading: false,\n        activeCenter: centerDetails\n      });\n    }\n  }\n\n  /**\n   * editCenter Method\n   * @returns { void }\n   * */\n  editCenter() {\n    this.props.editCenterRequestAction();\n  }\n\n  /**\n   * handleOpen Method\n   * @returns { void }\n   * */\n  handleOpen() {\n    this.props.editCenterRequestAction();\n    this.setState({ open: true });\n  }\n\n  /**\n   * handleClose Method\n   * @returns { void }\n   * */\n  handleClose() {\n    this.setState({ open: false });\n  }\n\n  /**\n   * handleAlertOpen Method\n   * @returns { void }\n   * */\n  handleAlertOpen() {\n    this.setState({ openAlert: true });\n  }\n\n  /**\n   * handleAlertClose Method\n   * @returns { void }\n   * */\n  handleAlertClose() {\n    this.setState({ openAlert: false });\n  }\n\n  /**\n   * showEditCenterButton Method\n   * @returns { Component }\n   * */\n  showEditCenterButton() {\n    const actions = [\n      <FlatButton label=\"Cancel\" primary onClick={this.handleClose} />\n    ];\n\n    if (this.state.isAdmin) {\n      return (\n        <div>\n          <FlatButton\n            label=\"Edit center\"\n            icon={<EditIcon />}\n            onClick={this.handleOpen}\n            fullWidth\n          />\n          <Dialog\n            title=\"Edit Center\"\n            actions={actions}\n            modal={false}\n            open={this.state.open}\n            onRequestClose={this.handleClose}\n            autoScrollBodyContent\n            style={{ marginTop: '0px' }}\n          >\n            <EditCenterForm history={this.props.history} />\n          </Dialog>\n        </div>\n      );\n    }\n  }\n\n  /**\n   * showBookCenterButton Method\n   * @returns { Component }\n   * */\n  showBookCenterButton() {\n    const isSignedIn = this.props.activeUser.isAuthenticated;\n    if (isSignedIn) {\n      return <EventModal />;\n    }\n  }\n\n  /**\n   * showRecommendedCenters Method\n   * @param { object } relatedCenterBasedOn\n   * @returns { Component }\n   * */\n  showRecommendedCenters(relatedCenterBasedOn) {\n    if (!this.state.isAdmin) {\n      return (\n        <RecommCenter\n          relatedCenterBasedOn={relatedCenterBasedOn}\n          fetchCenterRelatedTo={fetchCenterRelatedTo}\n        />\n      );\n    }\n  }\n\n  /**\n   * deleteCenter Method\n   * @param { string } id\n   * @returns { void }\n   * */\n  deleteCenter(id) {\n    this.props.deleteCenterRequest(id).then(() => {\n      if (typeof this.props.activeCenterDetail.center === 'undefined') {\n        Materialize.toast('Center has been Deleted', 5000, 'teal');\n        this.props.history.push('/centers');\n      }\n    });\n  }\n\n  /**\n   * showAlertModal Method\n   * @param { string } id\n   * @returns { component }\n   * */\n  showAlertModal(id) {\n    const actions = [\n      <FlatButton label=\"Yes\" primary onClick={() => this.deleteCenter(id)} />,\n      <FlatButton label=\"No\" primary onClick={() => this.handleAlertClose()} />\n    ];\n\n    if (this.state.isAdmin) {\n      return (\n        <div>\n          <FlatButton\n            label=\"Delete this center\"\n            secondary\n            icon={<Delete />}\n            onClick={this.handleAlertOpen}\n          />\n          <Dialog\n            actions={actions}\n            modal={false}\n            open={this.state.openAlert}\n            onRequestClose={this.handleAlertClose}\n          >\n            Are you sure you want to delete this event?\n          </Dialog>\n        </div>\n      );\n    }\n  }\n\n  /**\n   * renderFacilities Method\n   * @param { array } facilities\n   * @returns { component }\n   * */\n  renderFacilities(facilities) {\n    return facilities.map(facility => (\n      <li key={shortid.generate()}>{facility}</li>\n    ));\n  }\n\n  /**\n   * render Method\n   * @returns { component }\n   * */\n  render() {\n    let { isLoading, activeCenter, isAdmin } = this.state;\n    if (activeCenter.center) {\n      const {\n        id,\n        title,\n        img_url,\n        location,\n        description,\n        facilities,\n        capacity,\n        price,\n        events\n      } = activeCenter.center;\n\n      let relatedCenterBasedOn = {\n        id,\n        location,\n        facilities,\n        capacity,\n        price\n      };\n\n      return (\n        <DocumentTitle title={`${title} | Boots Events Manager`}>\n          <div className=\"container\">\n            <div className=\"center__holdr\" style={{ minHeight: '100vh' }}>\n              <div className=\"row\">\n                <div className=\"col s12 l12\">\n                  {isLoading && <CircularLoader />}\n                  {!isLoading && (\n                    <div className=\"center__details\" data-center-id={id}>\n                      <h5 style={{ fontWeight: '500' }}>{title}</h5>\n                      <div className=\"slider__holdr\">\n                        <div className=\"carousel carousel-slider\">\n                          <a className=\"carousel-item\" href=\"#one\">\n                            <img src={img_url} alt={title} />\n                          </a>\n                        </div>\n                      </div>\n                      <p>\n                        <i className=\"material-icons f15\">location_on</i>{' '}\n                        {location}\n                      </p>\n                      <div className=\"divider\" />\n                      <section>\n                        <h5>About this Center</h5>\n                        <p>{description}</p>\n                        <div className=\"divider\" />\n                        <div className=\"row\">\n                          <div className=\"col s12 l8\">\n                            <div className=\"row\">\n                              <div className=\"col s4\">\n                                <p>Capacity</p>\n                              </div>\n                              <div className=\"col s8\">\n                                <p>{capacity} Guests</p>\n                              </div>\n                            </div>\n                            <div className=\"divider\" />\n                            <div className=\"row\">\n                              <div className=\"col s4\">\n                                <p>Price</p>\n                              </div>\n                              <div className=\"col s8\">\n                                <p>\n                                  <span>₦{price}</span> per event\n                                </p>\n                              </div>\n                            </div>\n                            <div className=\"divider\" />\n                            <div className=\"row\">\n                              <div className=\"col s4\">\n                                <p>Facilities</p>\n                              </div>\n                              <div className=\"col s8\">\n                                <ul className=\"facility__list\">\n                                  {this.renderFacilities(facilities)}\n                                </ul>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col s12 l4\">\n                            <CurrentEventForCenter\n                              isAdmin={isAdmin}\n                              events={events}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col s12 l2\">\n                            {this.showEditCenterButton()}\n                          </div>\n                          <div className=\"col s12 l2\">\n                            {this.showAlertModal(id)}\n                          </div>\n                          <div className=\"col s12 l4\">\n                            {this.showBookCenterButton()}\n                          </div>\n                        </div>\n                      </section>\n                    </div>\n                  )}\n                </div>\n              </div>\n              {this.showRecommendedCenters(relatedCenterBasedOn)}\n            </div>\n          </div>\n        </DocumentTitle>\n      );\n    }\n    return '';\n  }\n}\n\nCenterDetail.propTypes = {\n  params: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  fetchCenterRelatedTo: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  activeCenterDetail: state.activeCenter,\n  activeUser: state.authReducer\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchCenterAction,\n      editCenterRequestAction,\n      deleteCenterRequest,\n      fetchCenterRelatedTo,\n      handleStatusEventAction\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CenterDetail);\n\n\n\n// WEBPACK FOOTER //\n// client/src/components/centerComponent/centerDetail/centerDetail.jsx","/* eslint-disable */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport DatePicker from 'material-ui/DatePicker';\nimport Toggle from 'material-ui/Toggle';\n\nimport { createEventRequest } from '../../actions/events-actions';\nimport InputForm from '../../components/form/formInput';\nimport { validateEventInput } from './validateInput';\nimport { ADD_EVENT } from '../../actions';\n\nconst styles = {\n  labelStyle: {\n    color: 'green'\n  }\n};\n\nclass EventModal extends Component {\n  constructor(props) {\n    super(props);\n\n    const startDate = new Date();\n    const endDate = new Date();\n    startDate.setFullYear(startDate.getFullYear() - 1);\n    endDate.setFullYear(endDate.getFullYear() - 1);\n\n    this.state = {\n      open: false,\n      disableYearSelection: false,\n      isLoading: false,\n      errors: {},\n      editEvent: false,\n      centerId: 0,\n      userId: 0,\n      title: \"\",\n      img_url: \"\",\n      startDate: null,\n      endDate: null,\n      description: \"\",\n      private: false\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleEventSubmit = this.handleEventSubmit.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n    this.handleChangeStartDate = this.handleChangeStartDate.bind(this);\n    this.handleChangeEndDate = this.handleChangeEndDate.bind(this);\n    this.handleToggleChange = this.handleToggleChange.bind(this);\n  }\n\n  updateProps(newProps) {\n    if (newProps.editEvent) {\n      let {\n        title,\n        img_url,\n        startDate,\n        endDate,\n        description\n      } = newProps.eventToEdit;\n      this.setState({\n        editEvent: true,\n        centerId: newProps.activeCenter.center.id,\n        userId: newProps.actUser.user.id,\n        title: title,\n        img_url: img_url,\n        startDate: startDate,\n        endDate: endDate,\n        description: description\n      });\n    } else {\n      this.setState({\n        centerId: newProps.activeCenter.center.id,\n        userId: newProps.actUser.user.id\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.updateProps(this.props);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.event) this.setState({ isLoading: newProps.event.isLoading });\n  }\n\n  isValid() {\n    const { errors, isValid } = validateEventInput(this.state);\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  handleChangeStartDate = (e, date) => {\n    if (new Date(date) < new Date()) {\n      Materialize.toast(\n        \"Date isn't correct. Should be a day after today not before\",\n        5000,\n        \"red\"\n      );\n      this.setState({\n        startDate: {}\n      });\n    } else {\n      this.setState({\n        startDate: date.toDateString()\n      });\n    }\n  };\n\n  handleChangeEndDate = (e, date) => {\n    if (new Date(date) < new Date()) {\n      Materialize.toast(\n        \"Date isn't correct. Should be a day after today not before\",\n        5000,\n        \"red\"\n      );\n      this.setState({\n        endDate: {}\n      });\n    } else {\n      this.setState({\n        endDate: date.toDateString()\n      });\n    }\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleInputChange(e) {\n    if (!!this.state.errors[e.target.name]) {\n      let errors = Object.assign({}, !!this.state.errors);\n      delete errors[e.target.name];\n      this.setState({\n        [e.target.name]: e.target.value,\n        errors\n      });\n    } else {\n      this.setState({ [e.target.name]: e.target.value });\n    }\n  }\n\n  handleToggleChange(e) {\n    this.setState({ private: !this.state.private });\n  }\n\n  onFileChange(e) {\n    let file = e.target.files[0];\n    if (file.type.indexOf(\"image/\") > -1) {\n      // only image file\n      if (file.size < 2000000) {\n        this.setState({\n          img_url: file\n        });\n      } else {\n        Materialize.toast(\"File too large\", 5000, \"red\");\n      }\n    } else {\n      Materialize.toast(\"Image files only please\", 5000, \"red\");\n    }\n  }\n\n  handleEventSubmit(e) {\n    e.preventDefault();\n    if (this.isValid()) {\n      this.setState({\n        isLoading: true\n      });\n      this.props.createEventRequest(this.state);\n    }\n  }\n\n  render() {\n    let {\n      isLoading,\n      editEvent,\n      title,\n      description,\n      endDate,\n      startDate,\n      errors\n    } = this.state;\n    const actions = [\n      <FlatButton label=\"Cancel\" primary={true} onClick={this.handleClose} />,\n      <FlatButton\n        label={\n          isLoading ? (\n            <img\n              style={{ marginTop: \"10px\" }}\n              src=\"/image/loader/loading.gif\"\n            />\n          ) : (\n            \"Add Event\"\n          )\n        }\n        primary={true}\n        keyboardFocused={true}\n        onClick={this.handleEventSubmit}\n      />\n    ];\n    return (\n      <div>\n        <RaisedButton\n          label=\"Book this center\"\n          primary={true}\n          onClick={this.handleOpen}\n        />\n        <Dialog\n          title={editEvent ? \"Edit Event\" : \"Create Event\"}\n          actions={actions}\n          modal={false}\n          open={this.state.open}\n          onRequestClose={this.handleClose}\n          autoScrollBodyContent={true}\n          style={{ marginTop: \"0px\" }}\n        >\n          <div className=\"row\" style={{ marginTop: \"20px\" }}>\n            <form className=\"col s12\" id=\"add-event-form\">\n              <div className=\"row\">\n                <div className=\"col s6\">\n                  <div className=\"file-field input-field\">\n                    <div className=\"btn\">\n                      <span>Upload</span>\n                      <input\n                        type=\"file\"\n                        name=\"img_url\"\n                        accept=\"image/jpeg,jpg,png,gif\"\n                        onChange={this.onFileChange}\n                      />\n                    </div>\n                    <div className=\"file-path-wrapper\">\n                      <input\n                        className=\"file-path validate\"\n                        type=\"text\"\n                        placeholder=\"Upload an image here\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"input-field col s6\">\n                  <InputForm\n                    type=\"text\"\n                    fieldId=\"event_title\"\n                    nameField=\"title\"\n                    label=\"Title\"\n                    value={title}\n                    error={errors.title || \"\"}\n                    onChange={this.handleInputChange}\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"input-field col s6\">\n                  <DatePicker\n                    onChange={this.handleChangeStartDate}\n                    autoOk={true}\n                    floatingLabelText=\"Start Date\"\n                    disableYearSelection={this.state.disableYearSelection}\n                  />\n                  {errors.startDate && (\n                    <span className=\"red-text accent-1\">\n                      {errors.startDate}\n                    </span>\n                  )}\n                </div>\n                <div className=\"input-field col s6\">\n                  <DatePicker\n                    onChange={this.handleChangeEndDate}\n                    autoOk={true}\n                    floatingLabelText=\"End Date\"\n                    disableYearSelection={this.state.disableYearSelection}\n                  />\n                  {errors.endDate && (\n                    <span className=\"red-text accent-1\">{errors.endDate}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"input-field col s12\">\n                  <label htmlFor=\"description\">Description</label>\n                  <textarea\n                    id=\"description\"\n                    type=\"text\"\n                    name=\"description\"\n                    className=\"materialize-textarea validate\"\n                    required\n                    onChange={this.handleInputChange}\n                    value={description}\n                  />\n                  {errors.description && (\n                    <span className=\"red-text accent-1\">\n                      {errors.description}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"input-field col s12\">\n                  <Toggle\n                    label=\"Do you want this event to be private?\"\n                    name=\"private\"\n                    defaultToggled={this.state.private}\n                    onToggle={this.handleToggleChange}\n                    labelStyle={styles.labelStyle}\n                  />\n                </div>\n              </div>\n            </form>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    activeCenter: state.activeCenter,\n    event: state.eventReducer,\n    actUser: state.authReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    { createEventRequest: createEventRequest },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventModal);\n\n\n\n// WEBPACK FOOTER //\n// client/src/components/modals/EventModal.jsx","import React, { Component } from 'react';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport shortid from 'shortid';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\n\nimport TextField from 'material-ui/TextField';\nimport { teal300 } from 'material-ui/styles/colors';\nimport InputForm from '../../form/formInput';\nimport { validateCenterInput } from '../validateInput';\nimport facilitiesDB from '../../../util/facilities';\nimport { updateCenterRequest } from '../../../actions/modalAction';\nimport { EDIT_CENTER } from '../../../actions';\n\nconst styles = {\n  underlineStyle: {\n    borderColor: 'transparent'\n  }\n};\n\n/**\n * EditCenterForm Class Component\n * */\nclass EditCenterForm extends Component {\n  /**\n   * EditCenterForm Class Constructor\n   * @param { object } props\n   * */\n  constructor(props) {\n    super(props);\n    /**\n     * @Initialize the component's state.\n     * */\n    this.state = {\n      errors: {},\n      editCenter: false,\n      isLoading: false,\n      title: '',\n      img_url: {},\n      facilities: [],\n      location: '',\n      price: '',\n      capacity: '',\n      description: ''\n    };\n\n    this.handleCenterChange = this.handleCenterChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleCenterSubmit = this.handleCenterSubmit.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n\n  /**\n    * componentDidMount Method\n    * @Send activeCenter details to updateState method\n    * @return { void }\n    * */\n  componentDidMount() {\n    this.updateState(this.props.activeCenter);\n  }\n\n  /**\n   * @Void: Get the image data and set the img_url in the state\n   * to the binary data url.\n   * @param { object } e\n   * @return { void }\n   * * */\n  onFileChange(e) {\n    let file = e.target.files[0];\n    if (file.type.indexOf('image/') > -1) { // only image file\n      if (file.size < 2000000) { // Must not be more than 2mb\n        let reader = new FileReader(); // instance of the FileReader\n        reader.readAsDataURL(file); // read the local file\n        reader.onloadend = () => {\n          this.setState({\n            img_url: file\n          });\n        };\n      } else {\n        Materialize.toast('File too large', 5000, 'red');\n      }\n    } else {\n      Materialize.toast('Image files only', 5000, 'red');\n    }\n  }\n\n  /**\n    * @Check if edit center is set to true.\n    * and get the keys from center object and populate the state\n    * with its appropriate values.\n    * updateState Method\n    * @param { object } props\n    * @return { void }\n    * */\n  updateState(props) {\n    if (props.editCenter) {\n      let {\n        id, title, img_url, facilities, location, price, capacity, description\n      } = props.center;\n      this.setState({\n        editCenter: true,\n        id,\n        title,\n        img_url,\n        facilities,\n        location,\n        price: price.toString(),\n        capacity: capacity.toString(),\n        description\n      });\n    }\n  }\n\n  /**\n    * handleCenterChange Method\n    * @param { object } e\n    * @return { void }\n    * */\n  handleCenterChange(e) {\n    if (this.state.errors[e.target.name]) {\n      let errors = Object.assign({}, !!this.state.errors);\n      delete errors[e.target.name];\n      this.setState({\n        [e.target.name]: e.target.value,\n        errors\n      });\n    } else {\n      this.setState({ [e.target.name]: e.target.value });\n    }\n  }\n\n  /**\n    * isValid Method\n    * @return { void }\n    * */\n  isValid() {\n    const { errors, isValid } = validateCenterInput(this.state);\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  /**\n    * handleSelectChange Method\n    * @param { object } event\n    * @param { string } index\n    * @param { array } facilities\n    * @return { void }\n    * */\n  handleSelectChange(event, index, facilities) {\n    this.setState({ facilities });\n  }\n\n  /**\n    * menuItems Method\n    * @param { object } facilityes\n    * @return { void }\n    * */\n  menuItems(facilityes) {\n    return facilitiesDB().map(name => (\n      <MenuItem\n        key={shortid.generate()}\n        insetChildren\n        checked={facilityes && facilityes.indexOf(name) > -1}\n        value={name}\n        primaryText={name}\n      />\n    ));\n  }\n\n  /**\n    * handleCenterSubmit Method\n    * @param { object } e\n    * @return { void }\n    * */\n  handleCenterSubmit(e) {\n    e.preventDefault();\n\n    if (this.isValid()) {\n      this.setState({\n        isLoading: true\n      });\n\n      this.props.updateCenterRequest(this.state);\n      // .then((res) => {\n      //   console.log(res);\n      //   this.setState({ isLoading: false });\n      //   if (res.type === EDIT_CENTER) {\n      //     Materialize.toast('Center has been updated successfully!!', 5000, 'teal');\n      //     location.reload();\n      //   } else {\n      //     Materialize.toast('Houston, we have a problem! We are working on it', 5000, 'red');\n      //   }\n      // })\n      // .catch(() => {\n      //   this.setState({ isLoading: false });\n      //   Materialize.toast('Error creating center..!!', 5000, 'red');\n      // });\n    }\n  }\n\n  /**\n    * render Method\n    * @return { component }\n    * */\n  render() {\n    const {\n      editCenter, errors, isLoading, title, location, facilities, price, capacity, description\n    } = this.state;\n\n    return (\n      <form style={{ marginTop: '20px' }} className=\"col s12\" id=\"edit-center-form\" onSubmit={this.handleCenterSubmit}>\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <div className=\"file-field input-field\">\n              <div className=\"btn\">\n                <span>Upload</span>\n                <input\n                  type=\"file\"\n                  name=\"img_url\"\n                  onChange={this.onFileChange}\n                  accept=\"image/jpeg,jpg,png,gif\"\n                />\n              </div>\n              <div className=\"file-path-wrapper\">\n                <input className=\"file-path validate\" type=\"text\" placeholder=\"Upload an image here\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"input-field col s12 m6\">\n            <TextField\n              id=\"text-field-controlled\"\n              hintText=\"Title\"\n              value={title}\n              name=\"title\"\n              errorText={errors.title || ''}\n              underlineStyle={styles.underlineStyle}\n              underlineFocusStyle={styles.underlineStyle}\n              onChange={this.handleCenterChange}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field col s12 m6\">\n            <SelectField\n              multiple\n              hintText=\"Select Facilities\"\n              value={facilities}\n              onChange={this.handleSelectChange}\n            >\n              {this.menuItems(facilities)}\n            </SelectField>\n          </div>\n          <div className=\"input-field col s12 m6\">\n            <TextField\n              id=\"text-field-controlled\"\n              hintText=\"location\"\n              value={location}\n              name=\"location\"\n              errorText={errors.location || ''}\n              underlineStyle={styles.underlineStyle}\n              underlineFocusStyle={styles.underlineStyle}\n              onChange={this.handleCenterChange}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field col s12 m6\">\n            <TextField\n              id=\"text-field-controlled\"\n              hintText=\"Price\"\n              value={price}\n              name=\"price\"\n              type=\"number\"\n              errorText={errors.price || ''}\n              underlineStyle={styles.underlineStyle}\n              underlineFocusStyle={styles.underlineStyle}\n              onChange={this.handleCenterChange}\n            />\n          </div>\n          <div className=\"input-field col s12 m6\">\n            <TextField\n              id=\"text-field-controlled\"\n              hintText=\"Capacity\"\n              value={capacity}\n              name=\"capacity\"\n              type=\"number\"\n              errorText={errors.capacity || ''}\n              underlineStyle={styles.underlineStyle}\n              underlineFocusStyle={styles.underlineStyle}\n              onChange={this.handleCenterChange}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <TextField\n              hintText=\"Description\"\n              value={description}\n              name=\"description\"\n              errorText={errors.description || ''}\n              multiLine\n              fullWidth\n              onChange={this.handleCenterChange}\n              underlineStyle={styles.underlineStyle}\n              underlineFocusStyle={styles.underlineStyle}\n              rows={2}\n              rowsMax={5}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <button\n              type=\"submit\"\n              id=\"submitCenterForm\"\n              name=\"action\"\n              className=\"btn col s12 white-text gradient__bg btn-register waves-effect waves-light\"\n              disabled={isLoading ? 'disabled' : ''}\n            >\n              { !isLoading ? 'Save Changes' :\n              <img style={{ marginTop: '10px' }} src=\"/image/loader/loading.gif\" alt=\"save-changes-loader\" /> }\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nEditCenterForm.propTypes = {\n  history: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  activeCenter: state.activeCenter\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ updateCenterRequest }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCenterForm);\n\n\n\n// WEBPACK FOOTER //\n// client/src/components/modals/centerModalForms/editCenterForm.jsx","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport shortid from 'shortid';\nimport { PropTypes } from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport queryString from 'query-string';\nimport {\n  fetchCentersAction,\n  loadMoreCenters\n} from '../../../actions/center-actions/fetchCenterAction';\nimport { searchAction } from '../../../actions/searchAction';\nimport { CircularLoader } from '../../loader';\nimport Helpers from '../../../helpers';\nimport history from '../../../util/history';\nimport SearchFasterForm from './searchFasterForm';\n\n/**\n   * AllCenters Class Component\n   * */\nclass AllCenters extends Component {\n  /**\n   * Class Constructor\n   * @param { object } props\n   * @returns { void }\n   * */\n  constructor(props) {\n    super(props);\n    this.helper = new Helpers();\n    this.state = {\n      isLoading: true,\n      loadmore: null,\n      loadingmore: null\n    };\n    this.onSearch = this.onSearch.bind(this);\n  }\n\n  /**\n   * componentDidMount Method\n   * @returns { void }\n   * */\n  componentDidMount() {\n    $('.modal').modal();\n    return this.props.fetchCentersAction();\n  }\n\n  /**\n   * componentWillReceiveProps Method\n   * @param { object } newProps\n   * @returns { void }\n   * */\n  componentWillReceiveProps(newProps) {\n    let {\n        page, pageCount, pageSize, totalCount\n      } = newProps.centerStore.meta,\n      { loadingmore, loadmore } = newProps.centerStore,\n      searchQueries;\n\n    // Run search if URL changes\n    if (newProps.location.search !== this.props.location.search) {\n      searchQueries = queryString.parse(newProps.location.search);\n      this.setState({ isLoading: true });\n      this.props.searchAction(searchQueries)\n        .then((res) => {\n          if (res) this.setState({ isLoading: false });\n        });\n    }\n\n    if (newProps) {\n      this.setState({\n        isLoading: false,\n        page,\n        pageSize,\n        totalCount,\n        loadmore,\n        loadingmore,\n        pageCount\n      });\n    }\n  }\n\n  /**\n   * onSearch Method\n   * @param { object } query\n   * @returns { void }\n   * */\n  onSearch(query) {\n    const qString = queryString.stringify(query, { arrayFormat: 'bracket' });\n    history.push(`/centers?${qString}`);\n  }\n\n  /**\n   * showCentersCard Method\n   * @returns { Component }\n   * */\n  showCentersCard() {\n    let { centers } = this.props.centerStore;\n    return centers\n      .sort((firstObj, secObj) => secObj.id - firstObj.id)\n      .map((center) => {\n        let to = `center/${center.id}/${this.helper.sanitizeString(center.title)}`;\n        return (\n          <Link key={shortid.generate()} to={to} href={to}>\n            <div className=\"card\">\n              {!!center.img_url && (\n                <div className=\"card-image\">\n                  <img src={center.img_url} alt={center.title} />\n                </div>\n              )}\n              <div className=\"card-content black-text\">\n                <div className=\"row\" style={{ marginBottom: '0' }}>\n                  <div className=\"col s12\">\n                    <p className=\"bold\">{center.title}</p>\n                    <p className=\"light__font\">\n                      <i className=\"material-icons f15\">location_on</i>\n                      {center.location}\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-action\">\n                <span className=\"black-text right-align\">\n                  capacity of {center.capacity} Guests\n                </span>\n              </div>\n            </div>\n          </Link>\n        );\n      });\n  }\n\n  /**\n   * initInfiniteScroll Method\n   * @returns { void }\n   * */\n  initInfiniteScroll() {\n    let winHeight, winScrollTop, docHeight, offset;\n    $(window).scroll(() => {\n      winHeight = $(window).height();\n      winScrollTop = $(window).scrollTop();\n      docHeight = $(document).height();\n\n      if (docHeight - winHeight === winScrollTop) {\n        /**\n         * make loadmore request\n         * * */\n        offset = this.state.page + 1;\n        if (this.state.loadmore) {\n          this.props.loadMoreCenters(offset);\n        }\n      }\n    });\n  }\n\n  /**\n   * autoLoadMore Method\n   * @returns { void }\n   * */\n  autoLoadMore() {\n    if (this.state.loadmore) {\n      this.initInfiniteScroll();\n    }\n  }\n\n  /**\n   * loadMore Method\n   * @returns { void }\n   * */\n  loadMore() {\n    /**\n     * make loadmore request\n     * * */\n    let offset = this.state.page + 1;\n    this.props.loadMoreCenters(offset);\n  }\n\n  /**\n   * showLoadMoreButton Method\n   * @returns { Component }\n   * */\n  showLoadMoreButton() {\n    const {\n      isLoading,\n      loadingmore,\n      pageCount,\n      pageSize,\n      totalCount\n    } = this.state;\n\n    if (!isLoading && pageCount >= 1) {\n      if (loadingmore) {\n        return <CircularLoader />;\n      }\n      if (pageSize !== totalCount) {\n        return (\n          <button\n            onClick={() => this.loadMore()}\n            className=\"col offset-s3 s6 btn waves-effect gradient__bg\"\n          >\n            load more\n          </button>\n        );\n      }\n    }\n  }\n\n  /**\n   * renderNoCenter Method\n   * @returns { Component }\n   * */\n  renderNoCenter() {\n    let { centers } = this.props.centerStore;\n    if (isEmpty(centers)) {\n      return (\n        <h4 className=\"bold grey-text lighten-2 center-align\">\n          <p>No centers Available....</p>\n        </h4>\n      );\n    }\n  }\n\n  /**\n   * render Method\n   * @returns { Component }\n   * */\n  render() {\n    this.autoLoadMore();\n    const { isLoading } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"center__holdr\">\n          <div className=\"row relative\">\n            <div className=\"col s12 l12\" style={{ marginBottom: `${60}px` }}>\n              <h4 className=\"center-align\">Boots Centers</h4>\n              <div className=\"center-align search-faster-form full-width\">\n                <SearchFasterForm onSearch={this.onSearch} />\n              </div>\n              <div className=\"row\">\n                {isLoading ? (\n                  <CircularLoader />\n                ) : (\n                  <div className=\"col s12 cards-container\">\n                    {this.showCentersCard()}\n                  </div>\n                )}\n                {isLoading ? '' : this.renderNoCenter()}\n                {this.showLoadMoreButton()}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAllCenters.propTypes = {\n  fetchCentersAction: PropTypes.func.isRequired,\n  centerStore: PropTypes.object.isRequired,\n  loadMoreCenters: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  centerStore: state.centerReducer\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ fetchCentersAction, loadMoreCenters, searchAction }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllCenters);\n\n\n\n// WEBPACK FOOTER //\n// client/src/components/centerComponent/allCenters/allCenters.jsx","import isEmpty from 'lodash/isEmpty';\nimport {\n  ADD_CENTER_SUCCESS,\n  ADD_CENTER_FAlLURE,\n  FETCH_CENTERS,\n  LOADMORE_CENTER_REQUEST,\n  LOADMORE_CENTER_SUCCESS,\n  LOADMORE_CENTER_FAILURE,\n  SEARCH_CENTER_TITLE,\n  SEARCH_CENTER_TITLE_FAILED\n} from '../actions';\n\nlet newState;\nlet newCenter;\n\nexport default (state = {}, action = {}) => {\n  switch (action.type) {\n    case ADD_CENTER_SUCCESS:\n      newState = Object.assign({}, state);\n      newState.centers = newState.centers.concat(action.center);\n      return newState;\n\n    case ADD_CENTER_FAlLURE:\n      newCenter = Object.assign({}, action.center);\n      return newCenter;\n\n    case FETCH_CENTERS:\n      return action.payload;\n\n    case LOADMORE_CENTER_REQUEST:\n      return {\n        ...state,\n        loadingmore: true,\n        loadmore: true\n      };\n\n    case LOADMORE_CENTER_FAILURE:\n      return {\n        ...state,\n        loadingmore: false\n      };\n\n    case LOADMORE_CENTER_SUCCESS:\n      newState = Object.assign({}, state);\n      newState.centers = newState.centers.concat(action.payload);\n      newState.loadingmore = false;\n      newState.meta.page = parseInt(newState.meta.page + 1, 10);\n      newState.meta.pageSize = parseInt(\n        newState.meta.pageSize + action.payload.length,\n        10\n      );\n      if (newState.meta.pageSize === newState.meta.totalCount) {\n        newState.loadmore = false;\n      }\n      return newState;\n\n    case SEARCH_CENTER_TITLE:\n      newState = Object.assign({}, state);\n      if (!isEmpty(action.payload)) {\n        newState = action.payload;\n      } else {\n        newState.centers = state.centers;\n      }\n      return newState;\n\n    case SEARCH_CENTER_TITLE_FAILED:\n      newState = Object.assign({}, state);\n      newState.searchFailure = true;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// client/src/reducers/centerReducer.js","import isEmpty from 'lodash/isEmpty';\nimport {\n  ADD_EVENT,\n  EDIT_EVENT,\n  EDIT_EVENT_REQUEST,\n  EDIT_EVENT_FAILURE,\n  FETCH_EVENTS,\n  REMOVE_EVENT,\n  LOADMORE_EVENT_REQUEST,\n  LOADMORE_EVENT_SUCCESS,\n  LOADMORE_EVENT_FAILURE,\n  SEARCH_EVENT_TITLE,\n  SEARCH_EVENT_TITLE_FAILED,\n  SESSION_EVENTS,\n  SESSION_EVENTS_FAILURE\n} from '../actions';\n\nconst pageLimit = process.env.DATA_LIMIT;\nlet newState;\n\nexport default (state = {}, action = {}) => {\n  switch (action.type) {\n    case FETCH_EVENTS:\n      return action.payload;\n\n    case ADD_EVENT:\n      if (state.events) {\n        state.events.unshift(action.payload);\n        state.totalCount = state.events.length;\n        state.pageCount = Math.ceil(state.totalCount / pageLimit);\n        return state;\n      }\n      state.events = [];\n      state.events.unshift(action.payload);\n      state.totalCount = state.events.length;\n      state.pageCount = Math.ceil(state.totalCount / pageLimit);\n      return state;\n\n    case EDIT_EVENT_REQUEST:\n      return {\n        ...state,\n        eventToEdit: action.payload,\n        editEvent: true\n      };\n\n    case EDIT_EVENT:\n      newState = Object.assign({}, state);\n      newState.events.map((event, index) => {\n        if (event.id === action.payload.id) {\n          newState.events[index] = action.payload;\n        }\n      });\n      newState.isLoading = false;\n      newState.totalCount = newState.events.length;\n      newState.pageSize = newState.totalCount;\n      newState.pageCount = Math.ceil(newState.totalCount / pageLimit);\n      return newState;\n\n    case EDIT_EVENT_FAILURE:\n      newState = Object.assign({}, state);\n      newState.isLoading = false;\n      return newState;\n\n    case REMOVE_EVENT:\n      newState = Object.assign({}, state);\n      newState.events.map((event, index) => {\n        if (event.id === action.payload.id) {\n          delete newState.events[index];\n        }\n      });\n      newState.totalCount = newState.events.length;\n      newState.pageSize = newState.totalCount;\n      newState.pageCount = Math.ceil(newState.totalCount / pageLimit);\n      return newState;\n\n    case SESSION_EVENTS:\n      newState = Object.assign({}, state);\n      newState.sessEvents = action.payload;\n      return newState;\n\n    case SESSION_EVENTS_FAILURE:\n      newState = Object.assign({}, state);\n      newState.sessEvents = [];\n      return newState;\n\n    case LOADMORE_EVENT_FAILURE:\n      return {\n        ...state,\n        loadingmore: false\n      };\n\n    case LOADMORE_EVENT_REQUEST:\n      return {\n        ...state,\n        loadmore: true,\n        loadingmore: true\n      };\n\n    case LOADMORE_EVENT_SUCCESS:\n      newState = Object.assign({}, state);\n      newState.events = newState.events.concat(action.payload);\n      newState.loadingmore = false;\n      newState.page = parseInt(newState.page + 1, 10);\n      newState.pageSize = parseInt(\n        newState.pageSize + action.payload.length,\n        10\n      );\n      if (newState.pageSize === newState.totalCount) {\n        newState.loadmore = false;\n      }\n      return newState;\n\n    case SEARCH_EVENT_TITLE:\n      newState = Object.assign({}, state);\n      if (!isEmpty(action.events)) {\n        newState.events = action.events;\n      } else {\n        newState.events = state.events;\n      }\n      return newState;\n\n    case SEARCH_EVENT_TITLE_FAILED:\n      newState = Object.assign({}, state);\n      newState.searchFailure = true;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// client/src/reducers/eventReducer.js","import axios from 'axios';\nimport { isEmpty } from 'lodash';\nimport queryString from 'query-string';\nimport {\n  fetchCentersDispatch,\n  searchCenterDispatch\n} from './center-actions/fetchCenterAction';\nimport { searchEventsDispatch } from './events-actions/index';\nimport { SEARCH_CENTER_TITLE_FAILED, SEARCH_EVENT_TITLE_FAILED } from './';\n\nconst prepareCenterSearchQuery = (searchObject) => {\n  let searchObjectString = queryString.stringify(searchObject, {\n    arrayFormat: 'bracket'\n  });\n  searchApi = `/api/v1/centers?${searchObjectString}`;\n  return searchApi;\n};\n\nconst validateEventSearchQuery = ({ searchBy, search }) => {\n  let searchApi, api;\n\n  if (searchBy) {\n    api = `/api/v1/events?searchBy=${searchBy}&search=`;\n  } else {\n    api = '/api/v1/events?search=';\n  }\n\n  if (!isEmpty(search) && search !== 'undefined') {\n    searchApi = `${api + search}`;\n  }\n\n  return searchApi;\n};\n\nexport const searchAction = (data) => {\n  let searchApi = prepareCenterSearchQuery(data);\n  return dispatch => axios\n    .get(searchApi)\n    .then(({ data }) => {\n      if (data.statusCode === 200) {\n        dispatch(fetchCentersDispatch(data));\n      } else if (data.statusCode === 404) {\n        if (err) {\n          Materialize.toast(\n            'search result do not match center(s)',\n            5000,\n            'red'\n          );\n        }\n      }\n    })\n    .catch((err) => {\n      if (err) {\n        Materialize.toast(\n          'search result do not match center(s)',\n          5000,\n          'red'\n        );\n      }\n    });\n};\n\nexport const filterCenterTitle = value => (dispatch) => {\n  let searchApi = validateCenterSearchQuery(value);\n  return axios.get(searchApi).then(({ data }) => {\n    if (data.statusCode === 200) {\n      dispatch(searchCenterDispatch(data));\n    } else if (data.statusCode === 400) {\n      Materialize.toast(data.message, 5000, 'red');\n      dispatch({\n        type: SEARCH_CENTER_TITLE_FAILED\n      });\n    }\n  });\n};\n\nexport const filterEventTitle = value => (dispatch) => {\n  let searchApi = validateEventSearchQuery(value);\n  return axios.get(searchApi).then(({ data }) => {\n    if (data.statusCode === 200) {\n      dispatch(searchEventsDispatch(data.events));\n    } else if (data.statusCode === 400) {\n      Materialize.toast(data.message, 5000, 'red');\n      dispatch({\n        type: SEARCH_EVENT_TITLE_FAILED\n      });\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// client/src/actions/searchAction.js","import { bindActionCreators } from \"redux\";\nimport React, { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport shortid from \"shortid\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\n\nimport Dialog from \"material-ui/Dialog\";\nimport FlatButton from \"material-ui/FlatButton\";\nimport IconMenu from \"material-ui/IconMenu\";\nimport MenuItem from \"material-ui/MenuItem\";\nimport IconButton from \"material-ui/IconButton\";\nimport MoreVertIcon from \"material-ui/svg-icons/navigation/more-vert\";\nimport {\n  EditorModeEdit,\n  ActionDelete,\n  ImageDehaze\n} from \"material-ui/svg-icons/\";\n\nimport {\n  deleteEventRequest,\n  editEventRequestAction\n} from \"../../../actions/events-actions\";\nimport EditEventModal from \"../../modals/eventModalForm/editEventModal\";\nimport { REMOVE_EVENT } from \"../../../actions\";\n\n/**\n   * EventCard Class Component\n   * */\nclass EventCard extends Component {\n  /**\n   * Class contructor\n   * @param { object } props\n   * */\n  constructor(props) {\n    super(props);\n    this.state = {\n      openAlert: false,\n      event: {},\n      location: \"\",\n      userId: \"\"\n    };\n  }\n\n  /**\n   * componentWillMount method\n   * @returns { void }\n   * */\n  componentWillMount() {\n    $(\".modal\").modal();\n    $(\".tooltipped\").tooltip();\n  }\n\n  /**\n   * componentDidMount method\n   * @returns { void }\n   * */\n  componentDidMount() {\n    this.setState({\n      event: this.props.event\n    });\n  }\n\n  /**\n   * handleAlertOpen method\n   * @returns { void }\n   * */\n  handleAlertOpen = () => {\n    this.setState({ openAlert: true });\n  };\n\n  /**\n   * handleAlertClose method\n   * @returns { void }\n   * */\n  handleAlertClose = () => {\n    this.setState({ openAlert: false });\n  };\n\n  /**\n   * handleEditOpen method\n   * @returns { void }\n   * */\n  handleEditOpen = () => {\n    this.props.editEventRequestAction(this.state.event);\n    $(\"#add_event_modal\").modal(\"open\");\n  };\n\n  /**\n   * handleDelete method\n   * @returns { void }\n   * */\n  handleDelete(id) {\n    this.props.deleteEventRequest(id).then(data => {\n      if (data.type === REMOVE_EVENT) {\n        this.handleAlertClose();\n      }\n    });\n  }\n\n  /**\n   * showMenu method\n   * @returns { Component }\n   * */\n  showMenu() {\n    if (this.props.userState.isAuthenticated) {\n      return (\n        <IconMenu\n          className=\"right-align\"\n          iconButtonElement={\n            <IconButton>\n              <MoreVertIcon />\n            </IconButton>\n          }\n          anchorOrigin={{ horizontal: \"left\", vertical: \"top\" }}\n          targetOrigin={{ horizontal: \"left\", vertical: \"top\" }}\n        >\n          <MenuItem\n            primaryText=\"Edit\"\n            leftIcon={<EditorModeEdit />}\n            onClick={() => this.handleEditOpen()}\n          />\n          <MenuItem\n            onClick={() => this.handleAlertOpen()}\n            primaryText=\"Delete\"\n            style={{ color: \"red\" }}\n            leftIcon={<ActionDelete />}\n          />\n        </IconMenu>\n      );\n    }\n  }\n\n  /**\n   * showStatusBars method\n   * @returns { Component }\n   * */\n  showStatusBars(status, statusColor) {\n    let userState = this.props.userState;\n    if (\n      (userState.isAuthenticated &&\n        userState.user.id === this.state.event.userId) ||\n      userState.user.role\n    ) {\n      return (\n        <span\n          className={classNames(\n            \"event-status\",\n            \"darken-3\",\n            \"white-text\",\n            statusColor\n          )}\n        >\n          {status}\n        </span>\n      );\n    }\n  }\n\n  /**\n   * showAlertModal method\n   * @returns { Component }\n   * */\n  showAlertModal(id) {\n    const actions = [\n      <FlatButton\n        label=\"Yes\"\n        primary={true}\n        onClick={() => this.handleDelete(id)}\n      />,\n      <FlatButton\n        label=\"No\"\n        primary={true}\n        onClick={() => this.handleAlertClose()}\n      />\n    ];\n\n    return (\n      <Dialog\n        actions={actions}\n        modal={false}\n        open={this.state.openAlert}\n        onRequestClose={this.handleAlertClose}\n      >\n        Are you sure you want to delete this event?\n      </Dialog>\n    );\n  }\n\n  /**\n   * render method\n   * @returns { Component }\n   * */\n  render() {\n    let shareColor = [\"red\", \"blue\", \"yellow\", \"green\"],\n      floatBtnColor;\n    floatBtnColor = shareColor[Math.floor(Math.random() * shareColor.length)];\n\n    let {\n      id,\n      title,\n      img_url,\n      description,\n      startDate,\n      endDate,\n      userId,\n      center,\n      status\n    } = this.state.event;\n\n    startDate = new Date(startDate).toDateString();\n    endDate = new Date(endDate).toDateString();\n\n    let displayDate =\n      startDate === endDate ? startDate : startDate + \" - \" + endDate;\n    let statusColor =\n      status === \"pending\"\n        ? shareColor[2]\n        : status === \"rejected\"\n          ? shareColor[0]\n          : shareColor[3];\n\n    return (\n      <div>\n        {this.showAlertModal(id)}\n        <div className=\"card\" data-id={shortid.generate(id)}>\n          <div className=\"card-image\">\n            {this.showStatusBars(status, statusColor)}\n            {img_url ? (\n              <img src={img_url} alt={title} />\n            ) : (\n              <img\n                src=\"http://www.topangacreekoutpost.com/assets/images/site/image_not_available.png\"\n                alt={title}\n              />\n            )}\n            <span\n              className=\"card-title bold\"\n              style={{\n                right: \"0\",\n                backgroundImage:\n                  \"linear-gradient(to top, rgba(0, 0, 0, .7), rgba(0, 0, 0, .3))\"\n              }}\n            >\n              {title}\n            </span>\n            <a\n              className={classNames(\n                \"btn-floating\",\n                \"activator\",\n                \"halfway-fab\",\n                \"waves-effect\",\n                \"waves-light\",\n                \"tooltipped\",\n                floatBtnColor\n              )}\n              data-position=\"bottom\"\n              data-tooltip=\"share\"\n            >\n              <i className=\"material-icons\">dehaze</i>\n            </a>\n          </div>\n          <div className=\"card-content\">\n            <p className=\"small__duration\">\n              <i className=\"material-icons f15\">schedule</i>\n              {displayDate}\n            </p>\n            <div>\n              <i className=\"material-icons f15\">location_on </i>{\" \"}\n              {center\n                ? center.location\n                : \"sorry can't get location at this time\"}\n              {(this.props.userState.user.id === userId ||\n                this.props.userState.user.role) &&\n                this.showMenu(id)}\n            </div>\n          </div>\n          <div className=\"card-reveal\">\n            <span className=\"card-title grey-text text-darken-4\">\n              <a className=\"bold\">{title}</a>\n              <i className=\"material-icons right\">close</i>\n            </span>\n            <p>{description}</p>\n            <small>\n              <i className=\"material-icons f15\">location_on</i>{\" \"}\n              {center ? center.location : \"\"}\n            </small>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEventCard.propTypes = {\n  event: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    userState: state.authReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      deleteEventRequest,\n      editEventRequestAction\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventCard);\n\n\n\n// WEBPACK FOOTER //\n// client/src/components/bodyComponents/eventsCard/eventCard.jsx","export const CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/dcbqn1c10/upload';\n\nexport const CLOUDINARY_UPLOAD_PRESET = 'z3nqw1ue';\n\n/**\n* ADD_USER action Constant, To add a new user to the store\n* */\nexport const ADD_USER = 'ADD_USER';\n\n/**\n * SET_USER action Constant,\n * To set the current signed in user details and authentication.\n * * */\nexport const SET_USER = 'SET_USER';\n\n/**\n * REMOVE_USER action Constant,\n * To remove a user from the database then from the store .\n * * */\nexport const REMOVE_USER = 'REMOVE_USER';\n\n/**\n * ADD_CENTER_SUCCESS action Constant,\n * To add a success request action when a new center is being added to the database\n * * */\nexport const ADD_CENTER_SUCCESS = 'ADD_CENTER_SUCCESS';\n\n/**\n * ADD_CENTER_FAlLURE action Constant,\n * To add a failure request action when a new center is being added to the database\n * * */\nexport const ADD_CENTER_FAlLURE = 'ADD_CENTER_FAlLURE';\n\n/**\n * ADD_CENTER_REQUEST action Constant,\n * To add a request action when a new center is being sent to the database\n * * */\nexport const ADD_CENTER_REQUEST = 'ADD_CENTER_REQUEST';\n\n/**\n * FETCH_CENTERS action Constant,\n * To fetch centers from the database.\n * * */\nexport const FETCH_CENTERS = 'FETCH_CENTERS';\n\n/**\n * FETCH_CENTER_DETAIL action Constant,\n * To fetch a center details from the database.\n * * */\nexport const FETCH_CENTER_DETAIL = 'FETCH_CENTER_DETAIL';\n\n/**\n * REMOVE_CENTER action Constant,\n * To remove a center from the database then the store.\n * * */\nexport const REMOVE_CENTER = 'REMOVE_CENTER';\n\n/**\n * FETCH_RELATED_CENTERS action Constant,\n * To fetch a centers related centers from the database then add to the store.\n * * */\nexport const FETCH_RELATED_CENTERS = 'FETCH_RELATED_CENTERS';\n\n/**\n * EDIT_CENTER_REQUEST action Constant,\n * To add the center details to the store so\n * the details can be gotten and appended to the nodal form.\n * * */\nexport const EDIT_CENTER_REQUEST = 'EDIT_CENTER_REQUEST';\n\n/**\n * EDIT_CENTER action Constant,\n * TO edit and change the center details.\n * * */\nexport const EDIT_CENTER = 'EDIT_CENTER';\n\n/**\n * EDIT_CENTER_FAILURE action Constant,\n * action when edit center request failed.\n * * */\nexport const EDIT_CENTER_FAILURE = 'EDIT_CENTER_FAILURE';\n\n/**\n * FETCH_EVENTS action constants.\n * TO fetch all centers from the database and add to the store.\n * * */\nexport const FETCH_EVENTS = 'FETCH_EVENTS';\n\n/**\n * ADD_EVENT action constants.\n * To add a new event to the database and to the store.\n * * */\nexport const ADD_EVENT = 'ADD_EVENT';\n\n/**\n * EDIT_EVENT_REQUEST action constants.\n * To add a edit request before editing an existing event in the database and the store.\n * * */\nexport const EDIT_EVENT_REQUEST = 'EDIT_EVENT_REQUEST';\n\n/**\n * EDIT_EVENT action constants.\n * To edit an existing event in the database and the store.\n * * */\nexport const EDIT_EVENT = 'EDIT_EVENT';\n\n/**\n * EDIT_EVENT_FAILURE action constants.\n * To throw error when edit request could not be made.\n * * */\nexport const EDIT_EVENT_FAILURE = 'EDIT_EVENT_FAILURE';\n\n/**\n * REMOVE_EVENT action constants.\n * To remove an existing event in the database and the store.\n * * */\nexport const REMOVE_EVENT = 'REMOVE_EVENT';\n\nexport const LOADMORE_EVENT_REQUEST = 'LOADMORE_EVENT_REQUEST';\nexport const LOADMORE_EVENT_SUCCESS = 'LOADMORE_EVENT_SUCCESS';\nexport const LOADMORE_EVENT_FAILURE = 'LOADMORE_EVENT_FAILURE';\n\nexport const LOADMORE_CENTER_REQUEST = 'LOADMORE_CENTER_REQUEST';\nexport const LOADMORE_CENTER_SUCCESS = 'LOADMORE_CENTER_SUCCESS';\nexport const LOADMORE_CENTER_FAILURE = 'LOADMORE_CENTER_FAILURE';\n\nexport const SEARCH_CENTER_TITLE = 'SEARCH_CENTER_TITLE';\nexport const SEARCH_CENTER_TITLE_FAILED = 'SEARCH_CENTER_TITLE_FAILED';\n\nexport const SEARCH_EVENT_TITLE = 'SEARCH_EVENT_TITLE';\nexport const SEARCH_EVENT_TITLE_FAILED = 'SEARCH_EVENT_TITLE_FAILED';\nexport const SESSION_EVENTS = 'SESSION_EVENTS';\nexport const SESSION_EVENTS_FAILURE = 'SESSION_EVENTS_FAILURE';\nexport const EVENT_STATUS_CHANGE = 'EVENT_STATUS_CHANGE';\n\nexport const IMAGE_PLACEHOLDER = 'http://placehold.it/600/92c952';\n\n\n\n// WEBPACK FOOTER //\n// client/src/actions/index.js","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport shortid from 'shortid';\n\n/**\n * SearchFasterForm Class Component\n * */\nclass SearchFasterForm extends Component {\n  /**\n   * SearchFasterForm Class Coonstructor\n   * @param { object } props\n   * */\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: '',\n      price: '',\n      capacity: ''\n    };\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleSearchStart = this.handleSearchStart.bind(this);\n  }\n\n  /**\n   * handleSearchChange Method\n   * @param { object } e\n   * @returns { void }\n   * */\n  handleSearchChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  /**\n   * handleSearchStart Method\n   * @param { object } e\n   * @returns { void }\n   * */\n  handleSearchStart(e) {\n    e.preventDefault();\n    let { location, price, capacity } = this.state;\n\n    // if any of the search queries are provided\n    // then run the search function\n    if (location || price || capacity) {\n      this.props.onSearch(this.state);\n    }\n  }\n\n  /**\n   * render Life cycle Method\n   * @returns { component }\n   * */\n  render() {\n    let {\n      location, price, capacity\n    } = this.state;\n\n    return (\n      <form className=\"full-width\">\n        <div className=\"input-field col s12 l2\">\n          <label htmlFor=\"fast_price\">Price</label>\n          <input\n            id=\"fast_price\"\n            type=\"number\"\n            min=\"100\"\n            onChange={this.handleSearchChange}\n            name=\"price\"\n            value={price || ''}\n            className=\"validate\"\n          />\n        </div>\n        <div className=\"input-field col s12 l4\">\n          <label htmlFor=\"fast_capacity\">Capacity</label>\n          <input\n            id=\"fast_capacity\"\n            type=\"number\"\n            name=\"capacity\"\n            onChange={this.handleSearchChange}\n            min=\"0\"\n            value={capacity || ''}\n            className=\"validate\"\n          />\n        </div>\n        <div className=\"input-field col s12 l4\">\n          <label htmlFor=\"fast_capacity\">Location</label>\n          <input\n            id=\"fast_location\"\n            type=\"text\"\n            name=\"location\"\n            onChange={this.handleSearchChange}\n            value={location || ''}\n            className=\"validate\"\n          />\n        </div>\n        <div className=\"input-field col s12 l2\">\n          <button onClick={this.handleSearchStart} className=\"btn gradient__bg\" type=\"submit\">\n            search\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nSearchFasterForm.propTypes = {\n  onSearch: PropTypes.func.isRequired\n};\n\nexport default SearchFasterForm;\n\n\n\n// WEBPACK FOOTER //\n// client/src/components/centerComponent/allCenters/searchFasterForm.jsx","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { PropTypes } from 'prop-types';\n\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\nimport DatePicker from 'material-ui/DatePicker';\nimport Toggle from 'material-ui/Toggle';\n\nimport { editEventAction } from '../../../actions/events-actions';\nimport InputForm from '../../../components/form/formInput';\nimport { validateEventInput } from '../validateInput';\nimport { EDIT_EVENT } from '../../../actions';\n\nconst styles = {\n  labelStyle: {\n    color: 'green',\n  }\n};\n\n/**\n   * EditEventModal Class Component\n   * */\nclass EditEventModal extends Component {\n  /**\n   * EditEventModal Class Constructor\n   * @param { object } props\n   * */\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      disableYearSelection: false,\n      isLoading: false,\n      errors: {},\n      eventId: 0,\n      centerId: 0,\n      userId: 0,\n      title: '',\n      img_url: '',\n      startDate: null,\n      endDate: null,\n      description: '',\n      private: false\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleEventSubmit = this.handleEventSubmit.bind(this);\n    this.handleChangeStartDate = this.handleChangeStartDate.bind(this);\n    this.handleChangeEndDate = this.handleChangeEndDate.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n    this.handleToggleChange = this.handleToggleChange.bind(this);\n  }\n\n  /**\n   * componentDidMount life cycle Method\n   * @return { void }\n   * */\n  componentDidMount() {\n    this.updateState(this.props);\n  }\n\n  /**\n   * componentWillReceiveProps life cycle Method\n   * @param { object } newProps\n   * @return { void }\n   * */\n  componentWillReceiveProps(newProps) {\n    this.updateState(newProps);\n  }\n\n  /**\n   * onFileChange Method\n   * @param { object } e\n   * @return { void }\n   * */\n  onFileChange(e) {\n    let file = e.target.files[0];\n    if (file.type.indexOf('image/') > -1) {\n      // only image file\n      if (file.size < 2000000) {\n        let reader = new FileReader(); // instance of the FileReader\n        reader.readAsDataURL(file); // read the local file\n        reader.onloadend = () => {\n          this.setState({\n            // img_url: reader.result // store image as binary data string\n            img_url: file\n          });\n        };\n      } else {\n        Materialize.toast('File too large', 5000, 'red');\n      }\n    } else {\n      Materialize.toast('Please select only images', 5000, 'red');\n    }\n  }\n\n  /**\n   * isValid Method\n   * @return { void }\n   * */\n  isValid() {\n    const { errors, isValid } = validateEventInput(this.state);\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  /**\n   * removeError Method\n   * @param { string } date\n   * @param { string } dateField\n   * @return { void }\n   * */\n  removeError(date, dateField) {\n    let errors = Object.assign({}, !!this.state.errors);\n    if (dateField === 'startDate') {\n      delete errors.startDate;\n      this.setState({\n        startDate: new Date(date),\n        errors\n      });\n    } else {\n      delete errors.endDate;\n      this.setState({\n        endDate: new Date(date),\n        errors\n      });\n    }\n  }\n\n  /**\n   * handleChangeStartDate Method\n   * @param { object } e\n   * @param { string } date\n   * @return { void }\n   * */\n  handleChangeStartDate(e, date) {\n    if (this.state.errors.startDate) {\n      this.removeError(date, 'startDate');\n    }\n    if (new Date(date) < new Date()) {\n      Materialize.toast(\n        \"Date isn't correct. Should be a day after today not before\",\n        5000,\n        'red'\n      );\n      this.setState({\n        startDate: {},\n        errors: {\n          startDate: 'This field is required'\n        }\n      });\n    } else {\n      this.setState({\n        startDate: new Date(date)\n      });\n    }\n  }\n\n  /**\n   * handleChangeEndDate Method\n   * @param { object } e\n   * @param { string } date\n   * @return { void }\n   * */\n  handleChangeEndDate(e, date) {\n    if (this.state.errors.endDate) {\n      this.removeError(date, 'endDate');\n    }\n    if (new Date(date) < new Date()) {\n      Materialize.toast(\n        \"Date isn't correct. Should be a day after today not before\",\n        5000,\n        'red'\n      );\n      this.setState({\n        endDate: {},\n        errors: {\n          endDate: 'This field is required'\n        }\n      });\n    } else if (date < this.state.startDate) {\n      Materialize.toast(\n        'End Date should be after Start Date',\n        5000,\n        'red'\n      );\n      this.setState({\n        endDate: {},\n        errors: {\n          endDate: 'This field is required'\n        }\n      });\n    } else {\n      this.setState({\n        endDate: new Date(date)\n      });\n    }\n  }\n\n  /**\n   * handleInputChange Method\n   * @param { object } e\n   * @return { void }\n   * */\n  handleInputChange(e) {\n    if (this.state.errors[e.target.name]) {\n      let errors = Object.assign({}, !!this.state.errors);\n      delete errors[e.target.name];\n      this.setState({\n        [e.target.name]: e.target.value,\n        errors\n      });\n    } else {\n      this.setState({ [e.target.name]: e.target.value });\n    }\n  }\n\n  /**\n   * handleToggleChange Method\n   * @param { object } e\n   * @return { void }\n   * */\n  handleToggleChange(e) {\n    this.setState({ private: !this.state.private });\n  }\n\n  /**\n   * updateState Method\n   * @param { object } newProps\n   * @return { void }\n   * */\n  updateState(newProps) {\n    if (newProps.event.editEvent) {\n      let {\n        title,\n        img_url,\n        startDate,\n        endDate,\n        description,\n        centerId,\n        userId,\n        id\n      } = newProps.event.eventToEdit;\n      let privateEvent = newProps.event.eventToEdit.private;\n      this.setState({\n        eventId: id,\n        centerId,\n        userId,\n        title,\n        img_url,\n        startDate: new Date(startDate),\n        endDate: new Date(endDate),\n        description,\n        private: privateEvent\n      });\n      if (!newProps.event.isLoading) { this.setState({ isLoading: newProps.event.isLoading }); }\n    } else if (newProps.activeCenter.center) {\n      this.setState({\n        centerId: newProps.activeCenter.center.id,\n        userId: newProps.actUser.user.id\n      });\n    }\n  }\n\n  /**\n   * handleEventSubmit Method\n   * @param { object } e\n   * @return { void }\n   * */\n  handleEventSubmit(e) {\n    e.preventDefault();\n    if (this.isValid()) {\n      this.setState({\n        isLoading: true\n      });\n\n      this.props.editEventAction(this.state);\n    }\n  }\n\n  /**\n   * render Method\n   * @return { component }\n   * */\n  render() {\n    let {\n      isLoading,\n      title,\n      description,\n      endDate,\n      startDate,\n      errors\n    } = this.state;\n    return (\n      <div className=\"row\" style={{ marginTop: '20px' }}>\n        <form\n          className=\"col s12\"\n          id=\"add-event-form\"\n          onSubmit={this.handleEventSubmit}\n        >\n          <div className=\"row\">\n            <div className=\"col s6\">\n              <div className=\"file-field input-field\">\n                <div className=\"btn\">\n                  <span>Upload</span>\n                  <input\n                    type=\"file\"\n                    name=\"img_url\"\n                    accept=\"image/jpeg,jpg,png,gif\"\n                    onChange={this.onFileChange}\n                  />\n                </div>\n                <div className=\"file-path-wrapper\">\n                  <input\n                    className=\"file-path validate\"\n                    type=\"text\"\n                    placeholder=\"Upload an image here\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"input-field col s6\">\n              <TextField\n                id=\"event_field\"\n                hintText=\"Title\"\n                name=\"title\"\n                value={title}\n                errorText={errors.title || ''}\n                multiLine={false}\n                onChange={this.handleInputChange}\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s6\">\n              <DatePicker\n                onChange={this.handleChangeStartDate}\n                autoOk\n                floatingLabelText=\"Start Date\"\n                value={startDate}\n                disableYearSelection={this.state.disableYearSelection}\n              />\n              {errors.startDate && (\n                <span className=\"red-text accent-1\">{errors.startDate}</span>\n              )}\n            </div>\n            <div className=\"input-field col s6\">\n              <DatePicker\n                onChange={this.handleChangeEndDate}\n                autoOk\n                floatingLabelText=\"End Date\"\n                value={endDate}\n                disableYearSelection={this.state.disableYearSelection}\n              />\n              {errors.endDate && (\n                <span className=\"red-text accent-1\">{errors.endDate}</span>\n              )}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <label htmlFor=\"description\">Description</label>\n              <textarea\n                id=\"description\"\n                name=\"description\"\n                className=\"materialize-textarea validate\"\n                required\n                onChange={this.handleInputChange}\n                value={description}\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <Toggle\n                label=\"Do you want this event to be private?\"\n                name=\"private\"\n                defaultToggled={this.state.private}\n                onToggle={this.handleToggleChange}\n                labelStyle={styles.labelStyle}\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <button\n                type=\"submit\"\n                id=\"editEventForm\"\n                name=\"action\"\n                className=\"btn col s12 white-text gradient__bg btn-register waves-effect waves-light\"\n                disabled={isLoading ? 'disabled' : ''}\n              >\n                {!isLoading ? (\n                  'update event'\n                ) : (\n                  <img\n                    style={{ marginTop: '10px' }}\n                    src=\"/image/loader/loading.gif\"\n                    alt=\"loading gif\"\n                  />\n                )}\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  activeCenter: state.activeCenter,\n  event: state.eventReducer,\n  actUser: state.authReducer\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ editEventAction }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditEventModal);\n\n\n\n// WEBPACK FOOTER //\n// client/src/components/modals/eventModalForm/editEventModal.jsx","import axios from 'axios';\nimport setAuthorizationToken from '../components/authentication/setAuthenticationToken';\nimport {\n  ADD_CENTER_SUCCESS,\n  ADD_CENTER_REQUEST,\n  ADD_CENTER_FAlLURE,\n  EDIT_CENTER,\n  EDIT_CENTER_FAILURE,\n  CLOUDINARY_URL,\n  CLOUDINARY_UPLOAD_PRESET\n} from './';\nimport history from '../util/history';\n\nconst centerApi = '/api/v1/centers';\n\nconst addCenterPayload = (payload, response = null) => {\n  if (response === 'success') {\n    return {\n      type: ADD_CENTER_SUCCESS,\n      center: payload\n    };\n  } else if (response === 'request') {\n    return {\n      type: ADD_CENTER_REQUEST,\n      center: payload\n    };\n  } else if (response === 'failure') {\n    return {\n      type: ADD_CENTER_FAlLURE,\n      center: payload\n    };\n  }\n};\n\nconst createCenter = (centerApi, centerData, imgUrl) => (dispatch) => {\n  let token = localStorage.getItem('jwtToken') ? localStorage.getItem('jwtToken') : false;\n  setAuthorizationToken(token);\n  centerData.img_url = imgUrl;\n  dispatch(addCenterPayload(centerData, 'request'));\n  return axios.post(centerApi, centerData)\n    .then(({ data }) => {\n      console.log('response from server =====> ', data);\n      if (data.statusCode === 400) {\n        Materialize.toast(data.message, 5000, 'red');\n        return dispatch(addCenterPayload(data, 'failure'));\n      }\n      Materialize.toast(data.message, 5000, 'teal');\n      document.getElementById('edit-center-form').reset();\n      $('.modal').modal('close');\n      return dispatch(addCenterPayload(data.center, 'success'));\n    });\n};\n\nexport const createCenterRequest = centerData => (dispatch) => {\n  if (centerData.img_url.name) {\n    let formData = new FormData();\n    formData.append('file', centerData.img_url);\n    formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET);\n    setAuthorizationToken(false);\n    return axios.post(CLOUDINARY_URL, formData)\n      .then(({ data }) => {\n        console.log('response from cloud =====> ', data);\n        dispatch(createCenter(centerApi, centerData, data.url));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  return dispatch(createCenter(centerApi, centerData, ''));\n};\n\n/* *\n * update center payload sorter\n * ** */\nconst updateCenterPayload = (data, res) => {\n  if (res === 'success') {\n    return {\n      type: EDIT_CENTER,\n      payload: data\n    };\n  } else if (res === 'failure') {\n    return {\n      type: EDIT_CENTER_FAILURE,\n      payload: data\n    };\n  }\n};\n\n/* *\n * update center method\n * requester to local server\n * ** */\nconst editCenter = (centerApi, centerData, imgUrl) => (dispatch) => {\n  let token = localStorage.getItem('jwtToken') ? localStorage.getItem('jwtToken') : false;\n  setAuthorizationToken(token);\n  centerData.img_url = imgUrl;\n  return axios.put(centerApi, centerData)\n    .then(({ data }) => {\n      dispatch(updateCenterPayload(data.centr, 'success'));\n      window.location.reload();\n    });\n};\n\n/* *\n * Initial landing method for edit center request\n * ** */\nexport const updateCenterRequest = centerData => (dispatch) => {\n  if (centerData.img_url.name) {\n    let formData = new FormData();\n    formData.append('file', centerData.img_url);\n    formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET);\n    setAuthorizationToken(false);\n    return axios.post(CLOUDINARY_URL, formData)\n      .then(({ data }) => {\n        dispatch(editCenter(`${centerApi}/${centerData.id}`, centerData, data.url));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  return dispatch(editCenter(`${centerApi}/${centerData.id}`, centerData, centerData.img_url));\n};\n\n\n\n// WEBPACK FOOTER //\n// client/src/actions/modalAction.js","/**\n * Helpers Class\n * */\nexport default class Helpers {\n  /**\n   * equals Method\n   * @param { string } val1\n   * @param { string } val2\n   * @returns { boolean }\n   * */\n  equals(val1, val2) {\n    return val1 === val2;\n  }\n\n  /**\n   * sanitizeString Method\n   * To replace spaces with \"-\" to enable URL friendly string\n   * @param { string } str\n   * @returns { string }\n   * */\n  sanitizeString(str) {\n    return str.toLowerCase().replace(/[\\. ,:-]+/g, '-');\n  }\n\n  /**\n   * countDayDifference method\n   * To count days from start Date and end Date\n   * @param { string } startDate\n   * @param { string } endDate\n   * @return { string }\n   * */\n  countDayDifference(startDate, endDate) {\n    let oneDay = 24 * 60 * 60 * 1000; // hours * minutes * seconds * milliseconds\n    let firstDate = new Date(startDate);\n    let secondDate = new Date(endDate);\n\n    let diffDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / oneDay));\n    return diffDays;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// client/src/helpers/index.js","import { dispatch } from 'redux';\nimport axios from 'axios';\nimport {\n  FETCH_EVENTS,\n  ADD_EVENT,\n  EDIT_EVENT,\n  EDIT_EVENT_REQUEST,\n  EDIT_EVENT_FAILURE,\n  REMOVE_EVENT,\n  LOADMORE_EVENT_REQUEST,\n  LOADMORE_EVENT_SUCCESS,\n  LOADMORE_EVENT_FAILURE,\n  SEARCH_EVENT_TITLE,\n  SESSION_EVENTS,\n  SESSION_EVENTS_FAILURE,\n  CLOUDINARY_URL,\n  CLOUDINARY_UPLOAD_PRESET,\n  EVENT_STATUS_CHANGE\n} from '../';\nimport setAuthorizationToken from '../../components/authentication/setAuthenticationToken';\n\n\n/**\n *  @API Route String\n * * */\nconst api = '/api/v1/events';\n\n/* *\n *  @Event Dispatch Method\n *  @Returns Object\n * * */\nconst eventsDispatchAction = (type, data = {}) => {\n  switch (type) {\n    case 'edit':\n      return {\n        type: EDIT_EVENT,\n        payload: data\n      };\n\n    case 'edit_request':\n      return {\n        type: EDIT_EVENT_REQUEST,\n        payload: data\n      };\n\n    case 'add':\n      return {\n        type: ADD_EVENT,\n        payload: data\n      };\n\n    case 'fetch':\n      return {\n        type: FETCH_EVENTS,\n        payload: data\n      };\n\n    case 'delete':\n      return {\n        type: REMOVE_EVENT,\n        payload: data\n      };\n\n    default:\n      return data;\n  }\n};\n\nexport const searchEventsDispatch = data => ({\n  type: SEARCH_EVENT_TITLE,\n  events: data\n});\n\nconst createEvent = (eventData, imgUrl) => (dispatch) => {\n  let token = localStorage.getItem('jwtToken') ? localStorage.getItem('jwtToken') : false;\n  setAuthorizationToken(token);\n  eventData.img_url = imgUrl;\n  return axios.post(api, eventData)\n    .then(({ data }) => {\n      dispatch(eventsDispatchAction('add', data.event));\n      Materialize.toast(data.message, 5000, 'teal');\n      location.reload();\n    })\n    .catch((err) => {\n      console.log(err);\n      dispatch({\n        type: EDIT_EVENT_FAILURE\n      });\n      Materialize.toast('An Error Occurred..!!!', 5000, 'red');\n    });\n};\n\n/* *\n *  Initial Create Event Request Action\n *  @Returns Promise\n * * */\nexport const createEventRequest = eventData => (dispatch) => {\n  if (eventData.img_url.name) {\n    let formData = new FormData();\n    formData.append('file', eventData.img_url);\n    formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET);\n    setAuthorizationToken(false);\n    return axios.post(CLOUDINARY_URL, formData)\n      .then(({ data }) => {\n        dispatch(createEvent(eventData, data.url));\n      })\n      .catch((err) => {\n        Materialize.toast('Error in connection', 5000, 'red');\n        console.log(err);\n      });\n  }\n\n  return dispatch(createEvent(eventData, ''));\n};\n\n\n/**\n *  @Fetch Event Action\n *  @Returns Object\n * * */\nexport const fetchEventRequest = () => dispatch => axios.get(api)\n  .then(({ data }) => {\n    data.loadingmore = false;\n    data.loadmore = false;\n    data.isLoading = false;\n    dispatch(eventsDispatchAction('fetch', data));\n  });\n\nexport const fetchSessionEventRequest = userId => dispatch => axios.get(`${api}?sessionEvents=${userId}`)\n  .then(({ data }) => {\n    data.isLoading = false;\n    if (data) {\n      return dispatch({\n        type: SESSION_EVENTS,\n        payload: data\n      });\n    }\n\n    return dispatch({\n      type: SESSION_EVENTS_FAILURE\n    });\n  });\n\n/* *\n *  @Edit Event Request Action\n *  @Returns Object\n * * */\nexport const editEventRequestAction = data => dispatch => dispatch(eventsDispatchAction('edit_request', data));\n\nconst editEvent = (eventData, imgUrl) => (dispatch) => {\n  let token = localStorage.getItem('jwtToken') ? localStorage.getItem('jwtToken') : false;\n  setAuthorizationToken(token);\n  eventData.img_url = imgUrl;\n  return axios.put(`${api}/${eventData.eventId}`, eventData)\n    .then(({ data }) => {\n      if (data.statusCode === 201) {\n        Materialize.toast(data.message, 5000, 'teal');\n        $('#add_event_modal').modal('close');\n        $('.body__holdr').removeClass('blur__fits');\n        return dispatch(eventsDispatchAction('edit', data.event));\n      }\n      return data;\n    });\n};\n\n/* *\n *  @Edit Event Action\n *  @Returns Object\n * * */\nexport const editEventAction = eventData => (dispatch) => {\n  if (eventData.img_url.name) {\n    let formData = new FormData();\n    formData.append('file', eventData.img_url);\n    formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET);\n    setAuthorizationToken(false);\n    return axios.post(CLOUDINARY_URL, formData)\n      .then(({ data }) => {\n        dispatch(editEvent(eventData, data.url));\n      })\n      .catch(() => {\n        Materialize.toast('Error in connection', 5000, 'red');\n      });\n  }\n  return dispatch(editEvent(eventData, eventData.img_url));\n};\n\n/* *\n *  @Delete Event Action\n *  @Returns Object\n * * */\nexport const deleteEventRequest = (id) => {\n  id = parseInt(id, 10);\n  return dispatch => axios.delete(`${api}/${id}`)\n    .then(({ data }) => {\n      if (data.statusCode === 200) {\n        Materialize.toast(data.message, 5000);\n        return dispatch(eventsDispatchAction('delete', data.event));\n      }\n      Materialize.toast(data.message, 5000, 'red');\n      return data;\n    })\n    .catch((err) => {\n      Materialize.toast(err.message, 5000, 'red');\n    });\n};\n\n/* *\n *  @Load more Event Request Action\n *  @Returns Object\n * * */\nexport const loadMoreEvents = offset => (dispatch) => {\n  dispatch({\n    type: LOADMORE_EVENT_REQUEST\n  });\n  return axios.get(`${api}?next=${offset}`)\n    .then(({ data }) => {\n      if (data.statusCode === 200) {\n        return dispatch({\n          type: LOADMORE_EVENT_SUCCESS,\n          payload: data.events\n        });\n      }\n      return dispatch({\n        type: LOADMORE_EVENT_FAILURE\n      });\n    });\n};\n\n/* *\n * Accept a pending event\n * */\nexport const handleStatusEventAction = (eventId, status) => dispatch =>\n  // send status request for event\n  axios.post(`${api}/${eventId}?status=${status}`)\n    .then(({ data }) => {\n      if (data.statusCode === 200) {\n        Materialize.toast(data.message, 5000, 'teal');\n        return dispatch({\n          type: EVENT_STATUS_CHANGE\n        });\n      }\n      Materialize.toast(data.message, 5000, 'red');\n    });\n\n\n\n\n// WEBPACK FOOTER //\n// client/src/actions/events-actions/index.js","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport IconMenu from \"material-ui/IconMenu\";\nimport IconButton from \"material-ui/IconButton\";\nimport MoreVertIcon from \"material-ui/svg-icons/navigation/more-vert\";\nimport NavigationMenu from \"material-ui/svg-icons/navigation/menu\";\nimport ActionSearch from \"material-ui/svg-icons/action/search\";\nimport MenuItem from \"material-ui/MenuItem\";\nimport Divider from \"material-ui/Divider\";\nimport Drawer from \"material-ui/Drawer\";\nimport FlatButton from \"material-ui/FlatButton\";\nimport AccountCircle from \"material-ui/svg-icons/action/account-circle\";\n\nimport { signOutRequest } from \"../../../actions/authActions\";\n\nclass HeaderBanner extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 1,\n      open: false\n    };\n  }\n\n  handleToggle = () => this.setState({ open: !this.state.open });\n\n  handleClose = () => this.setState({ open: false });\n\n  renderSidenav() {\n    return (\n      <React.Fragment>\n        <Drawer\n          docked={false}\n          width={200}\n          open={this.state.open}\n          onRequestChange={open => this.setState({ open })}\n        >\n          <MenuItem\n            onClick={() => this.showModal()}\n            leftIcon={<ActionSearch />}\n            primaryText=\"Search\"\n          />\n          <MenuItem\n            primaryText={`Hello ${this.props.activeState.user.lastName ||\n              \"Guest\"}`}\n          />\n          <MenuItem\n            primaryText=\"My Events\"\n            containerElement={<Link to=\"/my-events\" />}\n          />\n          <Divider />\n          {!this.props.activeState.isAuthenticated ? (\n            this.showAuthenticationLinks()\n          ) : (\n            <MenuItem\n              primaryText=\"sign out\"\n              containerElement={<Link to=\"/signout\" />}\n            />\n          )}\n        </Drawer>\n        <FlatButton\n          className=\"right hide-on-med-and-up\"\n          style={{ margin: \"10px\", color: \"#FFFFFF\" }}\n          onClick={this.handleToggle}\n          icon={<NavigationMenu />}\n        />\n      </React.Fragment>\n    );\n  }\n\n  showAuthenticationLinks() {\n    // Show Sign-in and Sign-up\n    // links only if user isn't signed in\n    if (!this.props.activeState.isAuthenticated) {\n      return (\n        <span>\n          <li>\n            <Link to=\"/signin\">Sign In</Link>\n          </li>\n          <li>\n            <Link to=\"/signup\">Sign Up</Link>\n          </li>\n        </span>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <IconMenu\n          iconButtonElement={\n            <IconButton>\n              <AccountCircle color=\"white\" />\n            </IconButton>\n          }\n          anchorOrigin={{ horizontal: \"left\", vertical: \"top\" }}\n          targetOrigin={{ horizontal: \"left\", vertical: \"top\" }}\n        >\n          <MenuItem\n            primaryText={`Hello ${this.props.activeState.user.lastName}`}\n          />\n          <MenuItem\n            primaryText=\"My Events\"\n            containerElement={<Link to=\"/my-events\" />}\n          />\n          <Divider />\n          <MenuItem\n            primaryText=\"sign out\"\n            containerElement={<Link to=\"/signout\" />}\n          />\n        </IconMenu>\n      </React.Fragment>\n    );\n  }\n\n  showModal() {\n    $(\"#search__modal\").modal(\"open\");\n  }\n\n  showSignUpActionButton() {\n    if (!this.props.activeState.isAuthenticated) {\n      return (\n        <Link\n          to=\"/signup\"\n          className=\"btn blue lighten-2 waves-effect animated fadeInLeft\"\n        >\n          Join Boots Events Manager\n        </Link>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <div className=\"header__overlay\">\n          <div className=\"container\">\n            <nav className=\"wow fadeInDown\">\n              <div className=\"nav-wrapper\">\n                <Link to=\"/\" className=\"brand-logo logo\">\n                  <p>Boots EM</p>\n                </Link>\n                {this.renderSidenav()}\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                  <li>\n                    <a\n                      onClick={() => this.showModal()}\n                      className=\"modal-trigger\"\n                      id=\"search__view\"\n                    >\n                      <i className=\"material-icons\">search</i>\n                    </a>\n                  </li>\n                  <li>\n                    <Link to=\"/centers\">List of centers</Link>\n                  </li>\n                  {this.showAuthenticationLinks()}\n                </ul>\n              </div>\n            </nav>\n\n            <div className=\"center-align header__detail\">\n              <h4 className=\"wow fadeInLeft\">Worlds Leading Startup events</h4>\n              <p className=\"wow fadeInLeft\">\n                Attend Events around you and Add Events.\n              </p>\n              {this.showSignUpActionButton()}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  activeState: state.authReducer\n});\n\nconst matchDispatchToProps = dispatch =>\n  bindActionCreators({ signOutRequest }, dispatch);\n\nexport default connect(mapStateToProps, matchDispatchToProps)(HeaderBanner);\n\n\n\n// WEBPACK FOOTER //\n// client/src/components/bodyComponents/headNav/headbanner.jsx","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { PropsTypes } from 'prop-types';\n\nimport shortid from 'shortid';\nimport isEmpty from 'lodash/isEmpty';\nimport { CircularLoader } from '../loader';\nimport EventCard from './eventsCard/eventCard';\nimport { fetchEventRequest, loadMoreEvents } from './../../actions/events-actions';\n\n/**\n   * IndexEventCardHolder Class Component\n   * */\nclass IndexEventCardHolder extends Component {\n  /**\n   * Class contructor\n   * @param { object } props\n   * */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      loadmore: null,\n      loadingmore: null,\n      events: []\n    };\n  }\n\n  /**\n   * componentDidMount method\n   * @returns { void }\n   * */\n  componentDidMount() {\n    $('.modal').modal();\n    this.props.fetchEventRequest();\n  }\n\n  /**\n   * componentWillReceiveProps method\n   * @param { object } newProps\n   * @returns { void }\n   * */\n  componentWillReceiveProps(newProps) {\n    let {\n      events, page, pageCount, pageSize, totalCount, loadingmore, loadmore\n    } = newProps.allEvents;\n\n    this.setState({\n      isLoading: false,\n      events,\n      page,\n      pageSize,\n      totalCount,\n      loadmore,\n      loadingmore,\n      pageCount\n    });\n  }\n\n  /**\n   * initInfiniteScroll method\n   * @returns { void }\n   * */\n  initInfiniteScroll() {\n    let winHeight, winScrollTop, docHeight, offset;\n    $(window).scroll(() => {\n      winHeight = $(window).height();\n      winScrollTop = $(window).scrollTop();\n      docHeight = $(document).height();\n\n      if (docHeight - winHeight === winScrollTop) {\n        /* *\n         * make loadmore request\n         * */\n        offset = this.state.page + 1;\n        if (this.state.loadmore) {\n          this.props.loadMoreEvents(offset);\n        }\n      }\n    });\n  }\n\n  /**\n   * autoLoadMore method\n   * @returns { void }\n   * */\n  autoLoadMore() {\n    if (this.state.loadmore) {\n      this.initInfiniteScroll();\n    }\n  }\n\n  /**\n   * loadMore method\n   * @returns { void }\n   * */\n  loadMore() {\n    /**\n     * make loadmore request\n     * */\n    let offset = this.state.page + 1;\n    this.props.loadMoreEvents(offset);\n  }\n\n  /**\n   * renderEventsCard method\n   * @returns { void }\n   * */\n  renderEventsCard() {\n    let { events } = this.state;\n    return events.map((event, index) => (\n      <EventCard key={shortid.generate()} event={event} />\n    ));\n  }\n\n  /**\n   * renderNoEvent method\n   * @returns { void }\n   * */\n  renderNoEvent() {\n    let { events } = this.state;\n    if (isEmpty(events)) {\n      return (\n        <h4 className=\"bold grey-text lighten-2 center-align\">\n          <p>No Event Available..</p>\n        </h4>\n      );\n    }\n  }\n\n  /**\n   * render method\n   * @returns { Component }\n   * */\n  render() {\n    this.autoLoadMore();\n    let {\n      isLoading, loadingmore, pageCount, pageSize, totalCount\n    } = this.state;\n    return (\n      <div className=\"popular__events_holdr\">\n        <div className=\"container popular__events\">\n          { (isLoading) ?\n            <div style={{ height: '500px', marginTop: '100px' }}>\n              <CircularLoader />\n            </div>\n            :\n            <div className=\"row\">\n              <div className=\"col s12 cards-container\">\n                {this.renderEventsCard()}\n              </div>\n              {this.renderNoEvent()}\n              {\n                (pageCount > 1) ? (loadingmore) ? <CircularLoader /> : (pageSize !== totalCount) ? <button onClick={() => this.loadMore()} className=\"col offset-s3 s6 btn waves-effect gradient__bg\"> load more </button> : '' : ''\n              }\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ fetchEventRequest, loadMoreEvents }, dispatch);\n\nconst mapStateToProps = state => ({\n  allEvents: state.eventReducer\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndexEventCardHolder);\n\n\n\n// WEBPACK FOOTER //\n// client/src/components/bodyComponents/indexEventsCard.jsx","import React, {Component} from 'react';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport shortid from 'shortid';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {PropTypes} from 'prop-types';\n\nimport InputForm from '../../form/formInput';\nimport {validateCenterInput} from '../validateInput';\nimport facilities from '../../../util/facilities';\nimport {createCenterRequest} from '../../../actions/modalAction';\nimport Helpers from '../../../helpers';\nimport history from '../../../util/history';\n\nclass AddCenterForm extends Component {\n  constructor(props) {\n    super(props);\n    this.helpers = new Helpers();\n\n    /* *\n     * @Initialize the component's state.\n     **/\n    this.state = {\n      errors: {},\n      editCenter: false,\n      isLoading: false,\n      title: '',\n      img_url: {},\n      facilities: [],\n      location: '',\n      price: '',\n      capacity: '',\n      description: ''\n    };\n\n    this.handleCenterChange = this.handleCenterChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleCenterSubmit = this.handleCenterSubmit.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n\n  handleCenterChange(e) {\n    if (!!this.state.errors[e.target.name]) {\n      let errors = Object.assign({}, !!this.state.errors);\n      delete errors[e.target.name];\n      this.setState({\n        [e.target.name]: e.target.value,\n        errors\n      })\n    } else {\n      this.setState({[e.target.name]: e.target.value});\n    }\n  }\n\n  /**\n   * @Void: Get the image data and set the img_url in the state\n   * to the binary data url.\n   * **/\n  onFileChange(e) {\n    let file = e.target.files[0];\n    if (file.type.indexOf('image/') > -1) { // only image file\n      if (file.size < 2000000) {\n        this.setState({\n          img_url: file\n        });\n      } else {\n        Materialize.toast('File too large', 5000, 'red');\n      }\n    } else {\n      Materialize.toast('Image files only please', 5000, 'red');\n    }\n  };\n\n  isValid() {\n    const {errors, isValid} = validateCenterInput(this.state);\n    if (!isValid) {\n      this.setState({errors});\n    }\n    return isValid;\n  }\n\n  handleSelectChange = (event, index, facilities) => this.setState({facilities});\n\n  menuItems(facilityes) {\n    return facilities().map((name) => (\n      <MenuItem\n        key={shortid.generate()}\n        insetChildren={true}\n        checked={facilityes && facilityes.indexOf(name) > -1}\n        value={name}\n        primaryText={name}\n      />\n    ));\n  }\n\n  handleCenterSubmit(e) {\n    e.preventDefault();\n\n    if (this.isValid()) {\n      this.setState({\n        isLoading: true\n      });\n      this.props.createCenterRequest(this.state)\n        .then(() => {\n          this.setState({\n            errors: {},\n            editCenter: false,\n            isLoading: false,\n            title: '',\n            img_url: {},\n            facilities: [],\n            location: '',\n            price: '',\n            capacity: '',\n            description: ''\n          });\n          history.push(`/centers`);\n        });\n    }\n  }\n\n  render() {\n    const {editCenter, errors, isLoading, title, location, facilities, price, capacity} = this.state;\n    let modalTitle = (editCenter) ? \"Save changes\" : \"Add center\";\n\n    return (\n      <form className=\"col s12\" id=\"edit-center-form\" onSubmit={this.handleCenterSubmit} encType=\"multipart/form-data\">\n        <div className=\"row\">\n          <div className=\"col s6\">\n            <div className=\"file-field input-field\">\n              <div className=\"btn\">\n                <span>Upload</span>\n                <input type=\"file\" name=\"img_url\" onChange={this.onFileChange}\n                       accept=\"image/jpeg,jpg,png,gif\"/>\n              </div>\n              <div className=\"file-path-wrapper\">\n                <input className=\"file-path validate\" type=\"text\" placeholder=\"Upload an image here\"/>\n              </div>\n            </div>\n          </div>\n          <div className=\"input-field col s6\">\n            <InputForm\n              fieldId=\"title\"\n              nameField=\"title\"\n              value={title}\n              error={errors.title || ''}\n              type=\"text\"\n              onChange={this.handleCenterChange}\n              label=\"Title\"\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <SelectField\n            multiple={true}\n            hintText=\"Select Facilities\"\n            value={facilities}\n            onChange={this.handleSelectChange}\n          >\n            {this.menuItems(facilities)}\n          </SelectField>\n\n          <div className=\"input-field col s12\">\n            <InputForm\n              fieldId=\"location\"\n              nameField=\"location\"\n              value={location}\n              error={errors.location || ''}\n              type=\"text\"\n              onChange={this.handleCenterChange}\n              label=\"Location\"\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field col s6\">\n            <InputForm\n              fieldId=\"price\"\n              nameField=\"price\"\n              value={price}\n              error={errors.price || ''}\n              type=\"number\"\n              onChange={this.handleCenterChange}\n              label=\"Price\"\n              minValue=\"100\"\n            />\n          </div>\n          <div className=\"input-field col s6\">\n            <InputForm\n              fieldId=\"capacity\"\n              nameField=\"capacity\"\n              value={capacity}\n              error={errors.capacity || ''}\n              type=\"number\"\n              onChange={this.handleCenterChange}\n              label=\"Capacity\"\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <label htmlFor=\"description\">Description</label>\n            <textarea\n              id=\"description\"\n              type=\"text\"\n              name=\"description\"\n              onChange={this.handleCenterChange}\n              className=\"materialize-textarea validate\"\n              required\n            ></textarea>\n            {errors.description ? <span className=\"red-text accent-1\">{errors.description}</span> : ''}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <button\n              type=\"submit\"\n              id=\"submitCenterForm\"\n              name=\"action\"\n              className=\"btn col s12 white-text gradient__bg btn-register waves-effect waves-light\"\n              disabled={isLoading ? 'disabled' : ''}\n            >\n              {!isLoading ? modalTitle :\n                <img style={{marginTop: \"10px\"}} src=\"/image/loader/loading.gif\"/>}\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({createCenterRequest}, dispatch);\n};\n\nexport default connect(null, mapDispatchToProps)(AddCenterForm)\n\n\n\n// WEBPACK FOOTER //\n// client/src/components/modals/centerModalForms/addCenterForm.jsx","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport shortid from 'shortid';\nimport isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types';\nimport EventCard from '../bodyComponents/eventsCard/eventCard';\nimport Helpers from '../../helpers';\nimport {\n  filterCenterTitle,\n  filterEventTitle\n} from '../../actions/searchAction';\n\n/**\n * SearchModal Class Component\n * */\nclass SearchModal extends Component {\n  /**\n   * SearchModal Class Constructor\n   * @param { object } props\n   * */\n  constructor(props) {\n    super(props);\n    this.helper = new Helpers();\n    this.state = {\n      events: {},\n      centers: {}\n    };\n    this.handleSearchInput = this.handleSearchInput.bind(this);\n  }\n\n  /**\n   * componentWillReceiveProps Life cycle Method\n   * @param { object } newProps\n   * @return { object }\n   * */\n  componentWillReceiveProps(newProps) {\n    if (!isEmpty(newProps.centerStore)) {\n      let { centers } = newProps.centerStore;\n      this.setState({ centers });\n    }\n    if (!isEmpty(newProps.eventStore)) {\n      let { events } = newProps.eventStore;\n      this.setState({ events });\n    }\n  }\n\n  /**\n   * handleSearchInput Method\n   * @param { object } e\n   * @return { void }\n   * */\n  handleSearchInput(e) {\n    let titleString = { search: e.target.value };\n    this.props.filterCenterTitle(titleString);\n    this.props.filterEventTitle(titleString);\n  }\n\n  /**\n   * renderEventsCard Method\n   * @return { component }\n   * */\n  renderEventsCard() {\n    let { events } = this.state;\n    if (!isEmpty(events)) {\n      return events.map((event, index) => (\n        <EventCard key={shortid.generate()} event={event} />\n      ));\n    }\n    return <h4>No Events</h4>;\n  }\n\n  /**\n   * renderCenterCard Method\n   * @return { component }\n   * */\n  renderCenterCard() {\n    let { centers } = this.state;\n    if (!isEmpty(centers)) {\n      return centers.map((center) => {\n        let to = `/center/${center.id}/${this.helper.sanitizeString(center.title)}`;\n        return (\n          <Link key={shortid.generate()} to={to} href={to}>\n            <div className=\"card\">\n              {!!center.img_url && (\n                <div className=\"card-image\">\n                  <img src={center.img_url} alt={center.title} />\n                </div>\n              )}\n              <div className=\"card-content black-text\">\n                <p className=\"f__size\">{center.title}</p>\n                <p>\n                  <i className=\"material-icons f15\">location_on</i>\n                  {center.location}\n                </p>\n              </div>\n            </div>\n          </Link>\n        );\n      });\n    }\n    return <h4>No centers</h4>;\n  }\n\n  /**\n   * render Method\n   * @return { component }\n   * */\n  render() {\n    return (\n      <div id=\"search__modal\" className=\"modal\">\n        <div className=\"search__nav z-depth-0\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col s1\">\n                <a className=\"btn btn-flat white waves-effect search__back_btn\">\n                  <i className=\"material-icons search_arrow_back_btn\">\n                    arrow_back\n                  </i>\n                </a>\n              </div>\n              <div className=\"col s11\">\n                <nav>\n                  <div className=\"nav-wrapper\">\n                    <form method=\"post\">\n                      <div className=\"input-field no-margin\">\n                        <input\n                          className=\"autocomplete\"\n                          id=\"autocomplete-input\"\n                          type=\"search\"\n                          name=\"searchInput\"\n                          onChange={this.handleSearchInput}\n                          placeholder=\"Search by Name and Location\"\n                          required\n                        />\n                        <label className=\"label-icon\" htmlFor=\"search\">\n                          <i className=\"material-icons search__label\">search</i>\n                        </label>\n                        <i className=\"material-icons white-text\">close</i>\n                      </div>\n                    </form>\n                  </div>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"search__results\">\n          <h5>Center Results</h5>\n          <div className=\"row cards-container\">{this.renderCenterCard()}</div>\n          <div className=\"divider\" />\n          <h5>Events Results</h5>\n          <div className=\"row cards-container\">{this.renderEventsCard()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchModal.propTypes = {\n  filterCenterTitle: PropTypes.func.isRequired,\n  filterEventTitle: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  centerStore: state.centerReducer,\n  eventStore: state.eventReducer\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ filterCenterTitle, filterEventTitle }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchModal);\n\n\n\n// WEBPACK FOOTER //\n// client/src/components/modals/searchModal.jsx","export default () => [\n  'Chairs',\n  'Security',\n  'Air Conditioner',\n  'Tables',\n  'Changing Room',\n  'Parking Space',\n  'Stage',\n  'Lighting',\n  'Power',\n  'Generator',\n  'Rest Room',\n  'Television',\n  'Swimming pool'\n];\n\n\n\n// WEBPACK FOOTER //\n// client/src/util/facilities.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;AAIA;;;;AAIA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AALA;AACA;AAWA;AACA;AACA;AACA;AAlBA;AAmBA;AACA;AACA;;;;;;;;AAIA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AATA;AAPA;AAoBA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;;;;;;;;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAPA;AAiBA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AACA;;;;;;;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AADA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAJA;AAQA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AADA;AAJA;AAUA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAJA;AArBA;AAgCA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AADA;AAjCA;AAwCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAPA;AA5CA;AAdA;AAHA;AADA;AA8EA;AA/EA;AADA;AADA;AAsFA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAFA;AACA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5YA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAfA;AACA;AACA;AAcA;AACA;AACA;AADA;AADA;AACA;;;;AAMA;AAAA;AACA;AADA;AACA;AADA;AA4EA;AACA;AAKA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AA3FA;AA6FA;AACA;AAKA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AA5GA;AA8GA;AACA;AACA;AAhHA;AAkHA;AACA;AACA;AAjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AA7BA;AA8BA;AACA;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA4CA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAGA;AAGA;AACA;AAFA;AAQA;AACA;AACA;AAbA;AAgBA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAVA;AADA;AAoBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AArBA;AAiCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AADA;AARA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AAAA;AARA;AAdA;AA0BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AAAA;AACA;AADA;AAZA;AADA;AAmBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AA/EA;AADA;AATA;AANA;AA+GA;;;;;;AAGA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpVA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AADA;AADA;AACA;AAKA;;;;;;;AAIA;;;;AAIA;AAAA;AACA;AACA;;;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAYA;AACA;AACA;AACA;AArBA;AAsBA;AACA;AACA;;;;;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AASA;AAAA;AAAA;AACA;AADA;AAVA;AADA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAjBA;AA8BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AANA;AADA;AAUA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAXA;AAwBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AAaA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AAdA;AA4BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AADA;AADA;AAiBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAPA;AADA;AADA;AApGA;AAoHA;;;;;;AAGA;AACA;AADA;AACA;AAGA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtVA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;AAIA;;;;;AAKA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AARA;AASA;AACA;AACA;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AADA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAFA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AADA;AAjBA;AADA;AA0BA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AADA;AAIA;AACA;AATA;AALA;AADA;AADA;AADA;AAwBA;;;;;;AAGA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AC9QA;AACA;;;AAAA;AACA;;;;;AAUA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAIA;AAAA;AAAA;AAEA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AADA;AAGA;AAEA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAvDA;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;;;AAAA;AACA;;;;;AAeA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAFA;AAEA;AACA;AAIA;AAAA;AACA;AACA;AACA;AAEA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAJA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AADA;AAGA;AAEA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AA1GA;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAGA;AACA;AAAA;AACA;;;;;AACA;AACA;AAAA;AAAA;AAGA;AACA;AALA;AACA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAGA;AACA;AADA;AACA;AAGA;AACA;AADA;AAbA;AACA;AAeA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAMA;AACA;AAdA;AAgBA;AACA;AAMA;AAvBA;AAAA;AAFA;AACA;AA2BA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;;AACA;AAAA;AAIA;AATA;AAFA;AAAA;AACA;AAaA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;;AACA;AAAA;AAIA;AATA;AAFA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAKA;AACA;AAGA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;AAIA;;;;AAIA;AAAA;AACA;AADA;AACA;AADA;AAkCA;AACA;AACA;AApCA;AA0CA;AACA;AACA;AA5CA;AAkDA;AACA;AACA;AACA;AAnDA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;AACA;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;;;;;;AAQA;;;;;;AAQA;;;;;;;;;AASA;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AARA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAfA;AAuBA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AAKA;AACA;AAAA;AACA;AADA;AAQA;AARA;AAWA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AACA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AASA;AACA;AACA;;;;;;;AAIA;AACA;AAAA;AAEA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAeA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AAFA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAQA;AARA;AAUA;AAAA;AAAA;AACA;AASA;AACA;AAXA;AAaA;AAAA;AAAA;AAAA;AAAA;AAbA;AApBA;AAoCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AALA;AALA;AAeA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AANA;AApDA;AAFA;AAoEA;;;;;;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAMA;AACA;AACA;;;;;;;;;;;;;;AC1TA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;;AAKA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;AAIA;;;;AAIA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AARA;AASA;AACA;AACA;;;;;;;;;AAKA;AACA;AAGA;AACA;AACA;;;;;;;;AAKA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AApCA;AA2CA;;;;;;AAGA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjHA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AADA;AADA;AACA;AAKA;;;;;;;AAIA;;;;AAIA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AAxBA;AAyBA;AACA;AACA;;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AAKA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAVA;AADA;AAoBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AArBA;AAiCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AAAA;AATA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AAAA;AATA;AAbA;AA0BA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AADA;AAaA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AADA;AAWA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAIA;AACA;AACA;AAHA;AAVA;AADA;AADA;AAxFA;AADA;AAiHA;;;;;;AAGA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAKA;AAAA;AAAA;AACA;AAEA;;;;;;;;;;;;;;;;AC1aA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAQA;AACA;;;;;;;AACA;AACA;AACA;AAAA;AACA;AAAA;;AACA;AAAA;AAAA;AADA;;AAMA;AAAA;AAAA;AADA;;AAMA;AAAA;AAAA;AAKA;AAjBA;AACA;AAkBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAVA;AALA;AAAA;AACA;AAkBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAHA;AAMA;AANA;AASA;AAAA;AAfA;AAAA;AACA;AAiBA;;;AAGA;AACA;;AACA;AAAA;AAAA;AADA;;AAMA;AAAA;AAAA;AAKA;AAZA;AACA;AAaA;;;;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAHA;AAJA;AAAA;AACA;AAUA;;;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAFA;AAKA;AALA;AAQA;AAAA;AAdA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1GA;;;AAGA;;;;;;AACA;AACA;;;;;;;AAKA;AACA;AAGA;AACA;;;;;;;;;;AAKA;AACA;AAGA;AACA;;;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAlCA;;;;;;;;;;;;;;;ACHA;AACA;AAAA;AACA;;;AAAA;AACA;AAgBA;AACA;;;;;;;AAEA;;;AAGA;AACA;AACA;;;;AAIA;AAAA;AACA;AAAA;AACA;;AACA;AAAA;AAAA;AACA;AAIA;;AACA;AAAA;AAAA;AACA;AAIA;;AACA;AAAA;AAAA;AACA;AAIA;;AACA;AAAA;AAAA;AACA;AAIA;;AACA;AAAA;AAAA;AACA;AAKA;AAhCA;;AADA;AACA;AAoCA;;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAJA;AAOA;;AACA;AAAA;AAGA;AAXA;AAJA;AAAA;AACA;AAkBA;;;;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAFA;AAKA;AACA;AANA;AAUA;AACA;AADA;AAhBA;AAAA;AACA;AAmBA;;;;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AACA;AACA;AAAA;AACA;;AACA;AAAA;AAAA;AAMA;AACA;;AADA;AAAA;AAVA;AAAA;AAAA;AACA;AAcA;;;;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AARA;AAJA;AAAA;AACA;AAeA;;;;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAFA;AAKA;AALA;AAQA;AAAA;AAdA;AAAA;AACA;AAgBA;;;;AAIA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAPA;AAUA;AAVA;AAAA;AAFA;AACA;AAeA;;;;AAIA;AAAA;;AACA;AAAA;AAGA;AACA;AACA;AAAA;;AACA;AAEA;AAFA;AAKA;;AAAA;AAAA;AARA;AAJA;AAAA;AACA;AAiBA;;;AAGA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;;AACA;AAAA;AAIA;AAAA;AAVA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtOA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AAQA;AAAA;AACA;AATA;AAUA;AAAA;AACA;AATA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AAIA;AACA;AAFA;AAvBA;AA6BA;AACA;AACA;AACA;AACA;AAJA;AA9BA;AAsCA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAJA;AASA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAPA;AASA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAjBA;AADA;AAyBA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAOA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AALA;AADA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAbA;AALA;AADA;AAwBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AALA;AAzBA;AADA;AADA;AAsCA;;;;;;AAGA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtLA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;AAIA;;;;AAIA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;AACA;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AANA;AADA;AAoBA;;;;;;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzKA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AADA;AAkEA;AAAA;AACA;AAjEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAYA;AACA;AACA;AACA;AAvBA;AAwBA;AACA;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AADA;AANA;AADA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAbA;AAyBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AANA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAVA;AAsBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAbA;AAyBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAAA;AAAA;AAVA;AADA;AAcA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAPA;AADA;AADA;AAvFA;AAuGA;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5OA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;;;AAIA;;;;AAIA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AAQA;AACA;AACA;;;;;;;;;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAFA;AANA;AADA;AAiBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAbA;AADA;AADA;AADA;AADA;AARA;AADA;AADA;AAoCA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AArCA;AA8CA;;;;;;AAGA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AAEA;;;;;;;;;;;;;;;AC7KA;AAAA;;;;;A","sourceRoot":""}