{"version":3,"file":"./hot/hot-update.js","sources":["webpack:///client/src/components/modals/centerModalForms/addCenterForm.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport shortid from 'shortid';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\n\nimport InputForm from '../../form/formInput';\nimport { validateCenterInput } from '../validateInput';\nimport facilities from '../../../util/facilities';\nimport { createCenterRequest } from '../../../actions/modalAction';\nimport Helpers from '../../../helpers';\nimport history from '../../../util/history';\n\n/**\n   * AllCenters Class Component\n   * */\nclass AddCenterForm extends Component {\n  /**\n   * Class Constructor\n   * @param { object } props\n   * @returns { void }\n   * */\n  constructor(props) {\n    super(props);\n    this.helpers = new Helpers();\n\n    /**\n     * @Initialize the component's state.\n     * */\n    this.state = {\n      errors: {},\n      editCenter: false,\n      isLoading: false,\n      title: '',\n      img_url: {},\n      facilities: [],\n      location: '',\n      price: '',\n      capacity: '',\n      description: ''\n    };\n\n    this.handleCenterChange = this.handleCenterChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleCenterSubmit = this.handleCenterSubmit.bind(this);\n    this.onFileChange = this.onFileChange.bind(this);\n  }\n\n  /**\n   * @Void: Get the image data and set the img_url in the state\n   * to the binary data url.\n   * @param {object} e\n   * @return {void}\n   * * */\n  onFileChange(e) {\n    let file = e.target.files[0];\n    if (file && file.type.indexOf('image/') > -1) {\n      // only image file\n      if (file.size < 2000000) {\n        this.setState({\n          img_url: file\n        });\n      } else {\n        Materialize.toast('File too large', 5000, 'red');\n      }\n    } else {\n      Materialize.toast('Image files only please', 5000, 'red');\n    }\n  }\n\n  /**\n   * handleCenterChange Method\n   * @param {object} e\n   * @returns { void }\n   * */\n  handleCenterChange(e) {\n    if (this.state.errors[e.target.name]) {\n      let errors = Object.assign({}, !!this.state.errors);\n      delete errors[e.target.name];\n      this.setState({\n        [e.target.name]: e.target.value,\n        errors\n      });\n    } else {\n      this.setState({ [e.target.name]: e.target.value });\n    }\n  }\n\n  /**\n   * isValid Method\n   * @returns { void }\n   * */\n  isValid() {\n    const { errors, isValid } = validateCenterInput(this.state);\n    if (!isValid) {\n      this.setState({ errors });\n    }\n    return isValid;\n  }\n\n  /**\n   * handleSelectChange Method\n   * @param {object} event\n   * @param {object} index\n   * @param {object} facilities\n   * @returns { void }\n   * */\n  handleSelectChange(event, index, facilities) {\n    this.setState({ facilities });\n  }\n\n  /**\n   * menuItems Method\n   * @param {object} facilityes\n   * @returns { component }\n   * */\n  menuItems(facilityes) {\n    return facilities().map(name => (\n      <MenuItem\n        key={shortid.generate()}\n        insetChildren\n        checked={facilityes && facilityes.indexOf(name) > -1}\n        value={name}\n        primaryText={name}\n      />\n    ));\n  }\n\n  /**\n   * handleCenterSubmit Method\n   * @param {object} e\n   * @returns { component }\n   * */\n  handleCenterSubmit(e) {\n    e.preventDefault();\n\n    if (this.isValid()) {\n      this.setState({\n        isLoading: true\n      });\n      this.props.createCenterRequest(this.state).then(() => {\n        this.setState({\n          errors: {},\n          editCenter: false,\n          isLoading: false,\n          title: '',\n          img_url: {},\n          facilities: [],\n          location: '',\n          price: '',\n          capacity: '',\n          description: ''\n        });\n        history.push('/centers');\n      });\n    }\n  }\n\n  /**\n   * render Method\n   * @returns { component }\n   * */\n  render() {\n    const {\n      editCenter,\n      errors,\n      isLoading,\n      title,\n      location,\n      facilities,\n      price,\n      capacity\n    } = this.state;\n    let modalTitle = editCenter ? 'Save changes' : 'Add center';\n\n    return (\n      <form\n        className=\"col s12\"\n        id=\"edit-center-form\"\n        onSubmit={this.handleCenterSubmit}\n        encType=\"multipart/form-data\"\n      >\n        <div className=\"row\">\n          <div className=\"col s6\">\n            <div className=\"file-field input-field\">\n              <div className=\"btn\">\n                <span>Upload</span>\n                <input\n                  type=\"file\"\n                  name=\"img_url\"\n                  onChange={this.onFileChange}\n                  accept=\"image/jpeg,jpg,png,gif\"\n                />\n              </div>\n              <div className=\"file-path-wrapper\">\n                <input\n                  className=\"file-path validate\"\n                  type=\"text\"\n                  placeholder=\"Upload an image here\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"input-field col s6\">\n            <InputForm\n              fieldId=\"title\"\n              nameField=\"title\"\n              value={title}\n              error={errors.title || ''}\n              type=\"text\"\n              onChange={this.handleCenterChange}\n              label=\"Title\"\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <SelectField\n            multiple\n            hintText=\"Select Facilities\"\n            value={facilities}\n            onChange={this.handleSelectChange}\n          >\n            {this.menuItems(facilities)}\n          </SelectField>\n\n          <div className=\"input-field col s12\">\n            <InputForm\n              fieldId=\"location\"\n              nameField=\"location\"\n              value={location}\n              error={errors.location || ''}\n              type=\"text\"\n              onChange={this.handleCenterChange}\n              label=\"Location\"\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field col s6\">\n            <InputForm\n              fieldId=\"price\"\n              nameField=\"price\"\n              value={price}\n              error={errors.price || ''}\n              type=\"number\"\n              onChange={this.handleCenterChange}\n              label=\"Price\"\n              minValue=\"100\"\n            />\n          </div>\n          <div className=\"input-field col s6\">\n            <InputForm\n              fieldId=\"capacity\"\n              nameField=\"capacity\"\n              value={capacity}\n              error={errors.capacity || ''}\n              type=\"number\"\n              onChange={this.handleCenterChange}\n              label=\"Capacity\"\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <label htmlFor=\"description\">Description</label>\n            <textarea\n              id=\"description\"\n              type=\"text\"\n              name=\"description\"\n              onChange={this.handleCenterChange}\n              className=\"materialize-textarea validate\"\n              required\n            />\n            {errors.description ? (\n              <span className=\"red-text accent-1\">{errors.description}</span>\n            ) : (\n              ''\n            )}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field col s12\">\n            <button\n              type=\"submit\"\n              id=\"submitCenterForm\"\n              name=\"action\"\n              className=\"btn col s12 white-text gradient__bg btn-register waves-effect waves-light\"\n              disabled={isLoading ? 'disabled' : ''}\n            >\n              {!isLoading ? (\n                modalTitle\n              ) : (\n                <img\n                  style={{ marginTop: '10px' }}\n                  src=\"/image/loader/loading.gif\"\n                  alt=\"loader\"\n                />\n              )}\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({ createCenterRequest }, dispatch);\n\nexport default connect(null, mapDispatchToProps)(AddCenterForm);\n\n\n\n// WEBPACK FOOTER //\n// client/src/components/modals/centerModalForms/addCenterForm.jsx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;AAIA;;;;;AAKA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAYA;AACA;AACA;AACA;AAvBA;AAwBA;AACA;AACA;;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AACA;AACA;;;;;;;;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAVA;AADA;AAoBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AArBA;AAiCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AANA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAVA;AAsBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAbA;AAyBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAAA;AAAA;AAAA;AAXA;AADA;AAkBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAIA;AACA;AACA;AAHA;AAVA;AADA;AADA;AAxGA;AA+HA;;;;;;AAGA;AAAA;AAAA;AACA;AACA;;;;;A","sourceRoot":""}