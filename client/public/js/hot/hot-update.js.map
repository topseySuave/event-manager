{"version":3,"file":"./hot/hot-update.js","sources":["webpack:///client/src/actions/authActions.js"],"sourcesContent":["import axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport setAuthorizationToken from\n  '../components/authentication/setAuthenticationToken';\nimport { SET_USER, REMOVE_USER } from './index';\n\nconst api = 'api/v1/users';\n\nconst removeCurrentUser = () => ({\n  type: REMOVE_USER,\n  payload: {}\n});\n\nconst setCurrentUser = token => ({\n  type: SET_USER,\n  payload: jwtDecode(token)\n});\n\nconst signOutRequest = () => {\n  localStorage.removeItem('jwtToken');\n  setAuthorizationToken(false);\n  removeCurrentUser();\n  return window.history.back();\n};\n\nconst userSignupRequest = userData => axios.post(api, userData);\n\nconst userSignInRequest = userData => dispatch =>\n  axios.post(`${api}/authentication`, userData).then((res) => {\n    if (res.data.statusCode === 200) {\n      const { token } = res.data;\n      localStorage.setItem('jwtToken', token);\n      setAuthorizationToken(token);\n      return dispatch(setCurrentUser(token));\n    } else if (res.data.statusCode === 404 || res.data.statusCode === 401) {\n      return false;\n    }\n  });\n\nmodule.exports = {\n  userSignupRequest,\n  userSignInRequest,\n  signOutRequest,\n  setCurrentUser,\n  removeCurrentUser\n};\n"],"mappings":";;;;;;;;;;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;;;;;AACA;AACA;AACA;;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;AAAA;AAEA;AAFA;AAAA;AACA;AAIA;AACA;AACA;AAEA;AAAA;AAJA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AAVA;AAAA;AAAA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}