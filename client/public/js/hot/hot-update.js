webpackHotUpdate(0,{1804:function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(process) {\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _isEmpty = __webpack_require__(43);\n\nvar _isEmpty2 = _interopRequireDefault(_isEmpty);\n\nvar _actions = __webpack_require__(28);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar pageLimit = process.env.DATA_LIMIT;\nvar newState = void 0;\n\nexports.default = function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case _actions.FETCH_EVENTS:\n      return action.payload;\n\n    case _actions.ADD_EVENT:\n      if (state.events) {\n        state.events.unshift(action.payload);\n        state.totalCount = state.events.length;\n        state.pageCount = Math.ceil(state.totalCount / pageLimit);\n        return state;\n      }\n      state.events = [];\n      state.events.unshift(action.payload);\n      state.totalCount = state.events.length;\n      state.pageCount = Math.ceil(state.totalCount / pageLimit);\n      return state;\n\n    case _actions.EDIT_EVENT_REQUEST:\n      return _extends({}, state, {\n        eventToEdit: action.payload,\n        editEvent: true\n      });\n\n    case _actions.EDIT_EVENT:\n      newState = Object.assign({}, state);\n      newState.events.map(function (event, index) {\n        if (event.id === action.payload.id) {\n          newState.events[index] = action.payload;\n        }\n      });\n      newState.isLoading = false;\n      newState.totalCount = newState.events.length;\n      newState.pageSize = newState.totalCount;\n      newState.pageCount = Math.ceil(newState.totalCount / pageLimit);\n      return newState;\n\n    case _actions.EDIT_EVENT_FAILURE:\n      newState = Object.assign({}, state);\n      newState.isLoading = false;\n      return newState;\n\n    case _actions.REMOVE_EVENT:\n      newState = Object.assign({}, state);\n      newState.events.map(function (event, index) {\n        if (event.id === action.payload.id) {\n          delete newState.events[index];\n        }\n      });\n      newState.totalCount = newState.events.length;\n      newState.pageSize = newState.totalCount;\n      newState.pageCount = Math.ceil(newState.totalCount / pageLimit);\n      return newState;\n\n    case _actions.SESSION_EVENTS:\n      newState = Object.assign({}, state);\n      newState.sessEvents = action.payload;\n      return newState;\n\n    case _actions.SESSION_EVENTS_FAILURE:\n      newState = Object.assign({}, state);\n      newState.sessEvents = [];\n      return newState;\n\n    case _actions.LOADMORE_EVENT_FAILURE:\n      return _extends({}, state, {\n        loadingmore: false\n      });\n\n    case _actions.LOADMORE_EVENT_REQUEST:\n      return _extends({}, state, {\n        loadmore: true,\n        loadingmore: true\n      });\n\n    case _actions.LOADMORE_EVENT_SUCCESS:\n      newState = Object.assign({}, state);\n      newState.events = newState.events.concat(action.payload);\n      newState.loadingmore = false;\n      newState.page = parseInt(newState.page + 1, 10);\n      newState.pageSize = parseInt(newState.pageSize + action.payload.length, 10);\n      if (newState.pageSize === newState.totalCount) {\n        newState.loadmore = false;\n      }\n      return newState;\n\n    case _actions.SEARCH_EVENT_TITLE:\n      newState = Object.assign({}, state);\n      if (!(0, _isEmpty2.default)(action.events)) {\n        newState.events = action.events;\n      } else {\n        newState.events = state.events;\n      }\n      return newState;\n\n    case _actions.SEARCH_EVENT_TITLE_FAILED:\n      newState = Object.assign({}, state);\n      newState.searchFailure = true;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/src/reducers/eventReducer.js\n// module id = 1804\n// module chunks = 0\n\n//# sourceURL=webpack:///./client/src/reducers/eventReducer.js?')}});